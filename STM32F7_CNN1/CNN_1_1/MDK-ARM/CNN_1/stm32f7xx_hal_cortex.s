; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\stm32f7xx_hal_cortex.o --depend=cnn_1\stm32f7xx_hal_cortex.d --cpu=Cortex-M7.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\stm32f7xx_hal_cortex.crf ../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_MPU_ConfigRegion||, CODE, READONLY, ALIGN=2

HAL_MPU_ConfigRegion PROC
        LDRB     r1,[r0,#1]
        LDR      r2,|L1.88|
        STR      r1,[r2,#0]
        LDRB     r1,[r0,#0]
        CBZ      r1,|L1.74|
        ADDS     r2,r2,#4
        LDR      r1,[r0,#4]
        STR      r1,[r2,#0]
        LDRB     r1,[r0,#0xc]
        LSLS     r1,r1,#28
        LDRB     r2,[r0,#0xb]
        ORR      r1,r1,r2,LSL #24
        LDRB     r2,[r0,#0xa]
        ORR      r1,r1,r2,LSL #19
        LDRB     r2,[r0,#0xd]
        ORR      r1,r1,r2,LSL #18
        LDRB     r2,[r0,#0xe]
        ORR      r1,r1,r2,LSL #17
        LDRB     r2,[r0,#0xf]
        ORR      r1,r1,r2,LSL #16
        LDRB     r2,[r0,#9]
        ORR      r1,r1,r2,LSL #8
        LDRB     r2,[r0,#8]
        ORR      r1,r1,r2,LSL #1
        LDRB     r2,[r0,#0]
        ORRS     r1,r1,r2
        LDR      r2,|L1.88|
        ADDS     r2,r2,#8
        STR      r1,[r2,#0]
        B        |L1.86|
|L1.74|
        MOVS     r1,#0
        LDR      r2,|L1.88|
        ADDS     r2,r2,#4
        STR      r1,[r2,#0]
        ADDS     r2,r2,#4
        STR      r1,[r2,#0]
|L1.86|
        BX       lr
        ENDP

|L1.88|
        DCD      0xe000ed98

        AREA ||i.HAL_MPU_Disable||, CODE, READONLY, ALIGN=2

HAL_MPU_Disable PROC
        NOP      
        NOP      
        NOP      
        DMB      
        NOP      
        NOP      
        NOP      
        LDR      r0,|L2.40|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x10000
        LDR      r1,|L2.40|
        STR      r0,[r1,#0]
        MOVS     r0,#0
        LDR      r1,|L2.40|
        ADDS     r1,r1,#0x70
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L2.40|
        DCD      0xe000ed24

        AREA ||i.HAL_MPU_Enable||, CODE, READONLY, ALIGN=2

HAL_MPU_Enable PROC
        ORR      r1,r0,#1
        LDR      r2,|L3.60|
        STR      r1,[r2,#0]
        LDR      r1,|L3.60|
        SUBS     r1,r1,#0x70
        LDR      r1,[r1,#0]
        ORR      r1,r1,#0x10000
        LDR      r2,|L3.60|
        SUBS     r2,r2,#0x70
        STR      r1,[r2,#0]
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        ISB      
        NOP      
        NOP      
        NOP      
        BX       lr
        ENDP

        DCW      0x0000
|L3.60|
        DCD      0xe000ed94

        AREA ||i.HAL_NVIC_ClearPendingIRQ||, CODE, READONLY, ALIGN=2

HAL_NVIC_ClearPendingIRQ PROC
        NOP      
        AND      r2,r0,#0x1f
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L4.24|
        LSRS     r3,r0,#5
        STR      r1,[r2,r3,LSL #2]
        NOP      
        BX       lr
        ENDP

        DCW      0x0000
|L4.24|
        DCD      0xe000e280

        AREA ||i.HAL_NVIC_DisableIRQ||, CODE, READONLY, ALIGN=2

HAL_NVIC_DisableIRQ PROC
        NOP      
        AND      r2,r0,#0x1f
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L5.24|
        LSRS     r3,r0,#5
        STR      r1,[r2,r3,LSL #2]
        NOP      
        BX       lr
        ENDP

        DCW      0x0000
|L5.24|
        DCD      0xe000e180

        AREA ||i.HAL_NVIC_EnableIRQ||, CODE, READONLY, ALIGN=1

HAL_NVIC_EnableIRQ PROC
        NOP      
        AND      r2,r0,#0x1f
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LSRS     r2,r0,#5
        LSLS     r2,r2,#2
        ADD      r2,r2,#0xe000e000
        STR      r1,[r2,#0x100]
        NOP      
        BX       lr
        ENDP


        AREA ||i.HAL_NVIC_GetActive||, CODE, READONLY, ALIGN=2

HAL_NVIC_GetActive PROC
        PUSH     {r4,lr}
        MOV      r1,r0
        MOV      r0,r1
        LDR      r2,|L7.36|
        LSRS     r3,r0,#5
        LDR      r2,[r2,r3,LSL #2]
        AND      r4,r0,#0x1f
        MOVS     r3,#1
        LSLS     r3,r3,r4
        ANDS     r2,r2,r3
        CBZ      r2,|L7.30|
        MOVS     r2,#1
        B        |L7.32|
|L7.30|
        MOVS     r2,#0
|L7.32|
        MOV      r0,r2
        POP      {r4,pc}
        ENDP

|L7.36|
        DCD      0xe000e300

        AREA ||i.HAL_NVIC_GetPendingIRQ||, CODE, READONLY, ALIGN=2

HAL_NVIC_GetPendingIRQ PROC
        PUSH     {r4,lr}
        MOV      r1,r0
        MOV      r0,r1
        LDR      r2,|L8.36|
        LSRS     r3,r0,#5
        LDR      r2,[r2,r3,LSL #2]
        AND      r4,r0,#0x1f
        MOVS     r3,#1
        LSLS     r3,r3,r4
        ANDS     r2,r2,r3
        CBZ      r2,|L8.30|
        MOVS     r2,#1
        B        |L8.32|
|L8.30|
        MOVS     r2,#0
|L8.32|
        MOV      r0,r2
        POP      {r4,pc}
        ENDP

|L8.36|
        DCD      0xe000e200

        AREA ||i.HAL_NVIC_GetPriority||, CODE, READONLY, ALIGN=2

HAL_NVIC_GetPriority PROC
        PUSH     {r4-r9,lr}
        MOV      r4,r0
        MOV      r0,r4
        CMP      r0,#0
        BGE      |L9.30|
        LDR      r7,|L9.140|
        AND      r12,r0,#0xf
        SUB      r12,r12,#4
        LDRB     r7,[r7,r12]
        LSRS     r7,r7,#4
        B        |L9.36|
|L9.30|
        LDR      r7,|L9.144|
        LDRB     r7,[r7,r0]
        LSRS     r7,r7,#4
|L9.36|
        MOV      r5,r7
        MOV      r6,r1
        AND      r0,r6,#7
        RSB      r8,r0,#7
        CMP      r8,#4
        BLS      |L9.60|
        MOV      r8,#4
        B        |L9.64|
|L9.60|
        RSB      r8,r0,#7
|L9.64|
        MOV      r12,r8
        ADD      r8,r0,#4
        CMP      r8,#7
        BCS      |L9.82|
        MOV      r8,#0
        B        |L9.86|
|L9.82|
        SUB      r8,r0,#3
|L9.86|
        MOV      r7,r8
        LSR      r8,r5,r7
        MOV      r9,#1
        LSL      r9,r9,r12
        SUB      r9,r9,#1
        AND      r8,r8,r9
        STR      r8,[r2,#0]
        MOV      r8,#1
        LSL      r8,r8,r7
        SUB      r8,r8,#1
        AND      r8,r8,r5
        STR      r8,[r3,#0]
        NOP      
        POP      {r4-r9,pc}
        ENDP

        DCW      0x0000
|L9.140|
        DCD      0xe000ed18
|L9.144|
        DCD      0xe000e400

        AREA ||i.HAL_NVIC_GetPriorityGrouping||, CODE, READONLY, ALIGN=1

HAL_NVIC_GetPriorityGrouping PROC
        PUSH     {r4,lr}
        BL       NVIC_GetPriorityGrouping
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_NVIC_SetPendingIRQ||, CODE, READONLY, ALIGN=2

HAL_NVIC_SetPendingIRQ PROC
        NOP      
        AND      r2,r0,#0x1f
        MOVS     r1,#1
        LSLS     r1,r1,r2
        LDR      r2,|L11.24|
        LSRS     r3,r0,#5
        STR      r1,[r2,r3,LSL #2]
        NOP      
        BX       lr
        ENDP

        DCW      0x0000
|L11.24|
        DCD      0xe000e200

        AREA ||i.HAL_NVIC_SetPriority||, CODE, READONLY, ALIGN=1

HAL_NVIC_SetPriority PROC
        PUSH     {r4-r12,lr}
        MOV      r8,r0
        MOV      r5,r1
        MOV      r6,r2
        MOVS     r7,#0
        BL       NVIC_GetPriorityGrouping
        MOV      r7,r0
        MOV      r1,r7
        MOV      r2,r5
        MOV      r3,r6
        AND      r0,r1,#7
        RSB      r10,r0,#7
        CMP      r10,#4
        BLS      |L12.44|
        MOV      r10,#4
        B        |L12.48|
|L12.44|
        RSB      r10,r0,#7
|L12.48|
        MOV      r9,r10
        ADD      r10,r0,#4
        CMP      r10,#7
        BCS      |L12.66|
        MOV      r10,#0
        B        |L12.70|
|L12.66|
        SUB      r10,r0,#3
|L12.70|
        MOV      r12,r10
        MOV      r10,#1
        LSL      r10,r10,r9
        SUB      r10,r10,#1
        AND      r10,r10,r2
        LSL      r10,r10,r12
        MOV      r11,#1
        LSL      r11,r11,r12
        SUB      r11,r11,#1
        AND      r11,r11,r3
        ORR      r4,r10,r11
        MOV      r1,r4
        MOV      r0,r8
        BL       NVIC_SetPriority
        POP      {r4-r12,pc}
        ENDP


        AREA ||i.HAL_NVIC_SetPriorityGrouping||, CODE, READONLY, ALIGN=2

HAL_NVIC_SetPriorityGrouping PROC
        NOP      
        AND      r2,r0,#7
        LDR      r3,|L13.32|
        LDR      r1,[r3,#0]
        MOV      r3,#0xf8ff
        ANDS     r1,r1,r3
        LDR      r3,|L13.36|
        ORRS     r3,r3,r1
        ORR      r1,r3,r2,LSL #8
        LDR      r3,|L13.32|
        STR      r1,[r3,#0]
        NOP      
        BX       lr
        ENDP

|L13.32|
        DCD      0xe000ed0c
|L13.36|
        DCD      0x05fa0000

        AREA ||i.HAL_NVIC_SystemReset||, CODE, READONLY, ALIGN=2

HAL_NVIC_SystemReset PROC
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        LDR      r0,|L14.60|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x700
        LDR      r1,|L14.64|
        ORRS     r0,r0,r1
        ADDS     r0,r0,#4
        LDR      r1,|L14.60|
        STR      r0,[r1,#0]
        NOP      
        NOP      
        NOP      
        DSB      
        NOP      
        NOP      
        NOP      
        NOP      
|L14.56|
        NOP      
        B        |L14.56|
        ENDP

|L14.60|
        DCD      0xe000ed0c
|L14.64|
        DCD      0x05fa0000

        AREA ||i.HAL_SYSTICK_CLKSourceConfig||, CODE, READONLY, ALIGN=1

HAL_SYSTICK_CLKSourceConfig PROC
        CMP      r0,#4
        BNE      |L15.22|
        MOV      r1,#0xe000e000
        LDR      r1,[r1,#0x10]
        ORR      r1,r1,#4
        MOV      r2,#0xe000e000
        STR      r1,[r2,#0x10]
        B        |L15.38|
|L15.22|
        MOV      r1,#0xe000e000
        LDR      r1,[r1,#0x10]
        BIC      r1,r1,#4
        MOV      r2,#0xe000e000
        STR      r1,[r2,#0x10]
|L15.38|
        BX       lr
        ENDP


        AREA ||i.HAL_SYSTICK_Callback||, CODE, READONLY, ALIGN=1

HAL_SYSTICK_Callback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_SYSTICK_Config||, CODE, READONLY, ALIGN=1

HAL_SYSTICK_Config PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r4
        SUBS     r0,r5,#1
        CMP      r0,#0x1000000
        BCC      |L17.18|
        MOVS     r0,#1
        B        |L17.50|
|L17.18|
        SUBS     r0,r5,#1
        MOV      r1,#0xe000e000
        STR      r0,[r1,#0x14]
        MOVS     r1,#0xf
        MOV      r0,#0xffffffff
        BL       NVIC_SetPriority
        MOVS     r0,#0
        MOV      r1,#0xe000e000
        STR      r0,[r1,#0x18]
        MOVS     r0,#7
        STR      r0,[r1,#0x10]
        MOVS     r0,#0
|L17.50|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.HAL_SYSTICK_IRQHandler||, CODE, READONLY, ALIGN=1

HAL_SYSTICK_IRQHandler PROC
        PUSH     {r4,lr}
        BL       HAL_SYSTICK_Callback
        POP      {r4,pc}
        ENDP


        AREA ||i.NVIC_GetPriorityGrouping||, CODE, READONLY, ALIGN=2

NVIC_GetPriorityGrouping PROC
        LDR      r0,|L19.12|
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#8,#3
        BX       lr
        ENDP

        DCW      0x0000
|L19.12|
        DCD      0xe000ed0c

        AREA ||i.NVIC_SetPriority||, CODE, READONLY, ALIGN=2

NVIC_SetPriority PROC
        PUSH     {r4,lr}
        CMP      r0,#0
        BGE      |L20.22|
        LSLS     r2,r1,#28
        LSRS     r4,r2,#24
        LDR      r2,|L20.32|
        AND      r3,r0,#0xf
        SUBS     r3,r3,#4
        STRB     r4,[r2,r3]
        B        |L20.30|
|L20.22|
        LSLS     r2,r1,#28
        LSRS     r3,r2,#24
        LDR      r2,|L20.36|
        STRB     r3,[r2,r0]
|L20.30|
        POP      {r4,pc}
        ENDP

|L20.32|
        DCD      0xe000ed18
|L20.36|
        DCD      0xe000e400

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32f7xx_hal_cortex_c_2992dbc0____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___22_stm32f7xx_hal_cortex_c_2992dbc0____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32f7xx_hal_cortex_c_2992dbc0____REVSH|
#line 402
|__asm___22_stm32f7xx_hal_cortex_c_2992dbc0____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32f7xx_hal_cortex_c_2992dbc0____RRX|
#line 587
|__asm___22_stm32f7xx_hal_cortex_c_2992dbc0____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_MPU_ConfigRegion [CODE]
        EXPORT HAL_MPU_Disable [CODE]
        EXPORT HAL_MPU_Enable [CODE]
        EXPORT HAL_NVIC_ClearPendingIRQ [CODE]
        EXPORT HAL_NVIC_DisableIRQ [CODE]
        EXPORT HAL_NVIC_EnableIRQ [CODE]
        EXPORT HAL_NVIC_GetActive [CODE]
        EXPORT HAL_NVIC_GetPendingIRQ [CODE]
        EXPORT HAL_NVIC_GetPriority [CODE]
        EXPORT HAL_NVIC_GetPriorityGrouping [CODE]
        EXPORT HAL_NVIC_SetPendingIRQ [CODE]
        EXPORT HAL_NVIC_SetPriority [CODE]
        EXPORT HAL_NVIC_SetPriorityGrouping [CODE]
        EXPORT HAL_NVIC_SystemReset [CODE]
        EXPORT HAL_SYSTICK_CLKSourceConfig [CODE]
        EXPORT HAL_SYSTICK_Callback [CODE,WEAK]
        EXPORT HAL_SYSTICK_Config [CODE]
        EXPORT HAL_SYSTICK_IRQHandler [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP NVIC_GetPriorityGrouping
        KEEP NVIC_SetPriority

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
