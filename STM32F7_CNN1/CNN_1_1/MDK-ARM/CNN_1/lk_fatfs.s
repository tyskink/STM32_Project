; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\lk_fatfs.o --depend=cnn_1\lk_fatfs.d --cpu=Cortex-M7 --fpu=SoftVFP --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\lk_fatfs.crf ..\..\..\LK_fatfs.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.LK_FATFS_Init||, CODE, READONLY, ALIGN=2

LK_FATFS_Init PROC
        PUSH     {r4-r6,lr}
        SUB      sp,sp,#0x238
        MOV      r4,r2
        MOV      r5,r1
        LDR      r1,|L1.132|
        MOV      r6,r0
        LDR      r0,|L1.136|
        BL       FATFS_LinkDriver
        LDR      r1,|L1.132|
        MOVS     r2,#1
        SUBS     r1,r1,#1
        STRB     r0,[r1,#0]
        ADDS     r1,r1,#1
        LDR      r0,|L1.140|
        BL       f_mount
        CBNZ     r0,|L1.118|
        MOVS     r2,#0xa
        MOV      r0,sp
        ADR      r1,|L1.144|
        BL       f_open
        CBNZ     r0,|L1.118|
        ADD      r3,sp,#0x22c
        MOV      r2,r4
        MOV      r1,r6
        MOV      r0,sp
        BL       f_write
        LDR      r1,[sp,#0x22c]
        CBZ      r1,|L1.118|
        CBNZ     r0,|L1.118|
        MOV      r0,sp
        BL       f_close
        MOVS     r2,#1
        MOV      r0,sp
        ADR      r1,|L1.144|
        BL       f_open
        CBNZ     r0,|L1.118|
        ADD      r3,sp,#0x230
        MOV      r2,r4
        MOV      r1,r5
        MOV      r0,sp
        BL       f_read
        LDR      r1,[sp,#0x230]
        CBZ      r1,|L1.118|
        CBNZ     r0,|L1.118|
        MOV      r0,sp
        BL       f_close
        LDRD     r0,r1,[sp,#0x22c]
        CMP      r1,r0
        BEQ      |L1.126|
|L1.118|
        MOVS     r0,#1
|L1.120|
        ADD      sp,sp,#0x238
        POP      {r4-r6,pc}
|L1.126|
        MOVS     r0,#0
        B        |L1.120|
        ENDP

        DCW      0x0000
|L1.132|
        DCD      ||.data||+0x1
|L1.136|
        DCD      SD_Driver
|L1.140|
        DCD      ||.bss||
|L1.144|
        DCB      "STM32_test.txt",0
        DCB      0

        AREA ||i.LK_displayMatrix||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_percent
        REQUIRE _printf_widthprec
        REQUIRE _printf_f
        REQUIRE _printf_fp_dec
LK_displayMatrix PROC
        PUSH     {r4-r10,lr}
        MOV      r9,r0
        LDRB     r0,[r3,#0]
        MOV      r6,r2
        MOV      r8,r1
        CBZ      r0,|L2.26|
        MOV      r0,r3
        BL       __2printf
        ADR      r0,|L2.88|
        BL       __2printf
|L2.26|
        MOVS     r4,#0
        B        |L2.80|
|L2.30|
        ADR      r0,|L2.92|
        BL       __2printf
        MUL      r0,r4,r6
        MOVS     r5,#0
        ADD      r7,r9,r0,LSL #2
        B        |L2.68|
|L2.48|
        LDR      r0,[r7,r5,LSL #2]
        BL       __aeabi_f2d
        MOV      r2,r0
        MOV      r3,r1
        ADR      r0,|L2.96|
        BL       __2printf
        ADDS     r5,r5,#1
|L2.68|
        CMP      r5,r6
        BLT      |L2.48|
        ADR      r0,|L2.104|
        BL       __2printf
        ADDS     r4,r4,#1
|L2.80|
        CMP      r4,r8
        BLT      |L2.30|
        POP      {r4-r10,pc}
        ENDP

|L2.88|
        DCB      "=\r\n",0
|L2.92|
        DCB      "\t",0
        DCB      0
        DCB      0
|L2.96|
        DCB      "\t%.4f ",0
        DCB      0
|L2.104|
        DCB      "\t\r\n",0

        AREA ||i.get_fattime||, CODE, READONLY, ALIGN=1

get_fattime PROC
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.testSD_UART||, CODE, READONLY, ALIGN=2

testSD_UART PROC
        PUSH     {r2-r4,lr}
        MOVS     r2,#6
        MOV      r1,sp
        ADR      r0,|L4.28|
        BL       LK_FATFS_Init
        CBZ      r0,|L4.18|
        ADR      r1,|L4.36|
        B        |L4.20|
|L4.18|
        MOV      r1,sp
|L4.20|
        LDR      r0,|L4.72|
        BL       LK_UART
        POP      {r2-r4,pc}
        ENDP

|L4.28|
        DCB      "Hi\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L4.36|
        DCB      "File System or SD Card Error !\r\n",0
        DCB      0
        DCB      0
        DCB      0
|L4.72|
        DCD      huart1

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

SDFatFs
        %        560

        AREA ||.data||, DATA, ALIGN=0

retSD
        DCB      0x00
SD_Path
        DCB      0x00,0x00,0x00
        DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\LK_fatfs.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_LK_fatfs_c_a6316ec5____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___10_LK_fatfs_c_a6316ec5____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_LK_fatfs_c_a6316ec5____REVSH|
#line 402
|__asm___10_LK_fatfs_c_a6316ec5____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_LK_fatfs_c_a6316ec5____RRX|
#line 587
|__asm___10_LK_fatfs_c_a6316ec5____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT LK_FATFS_Init [CODE]
        EXPORT LK_displayMatrix [CODE]
        EXPORT get_fattime [CODE]
        EXPORT testSD_UART [CODE]
        EXPORT SDFatFs [DATA,SIZE=560]
        EXPORT retSD [DATA,SIZE=1]
        EXPORT SD_Path [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT FATFS_LinkDriver [CODE]
        IMPORT f_mount [CODE]
        IMPORT f_open [CODE]
        IMPORT f_write [CODE]
        IMPORT f_close [CODE]
        IMPORT f_read [CODE]
        IMPORT SD_Driver [DATA]
        IMPORT LK_UART [CODE]
        IMPORT huart1 [DATA]
        IMPORT _printf_percent [CODE]
        IMPORT __2printf [CODE]
        IMPORT __aeabi_f2d [CODE]
        IMPORT _printf_widthprec [CODE]
        IMPORT _printf_f [CODE]
        IMPORT _printf_fp_dec [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
