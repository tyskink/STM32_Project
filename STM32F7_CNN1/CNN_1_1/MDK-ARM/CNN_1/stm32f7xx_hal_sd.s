; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\stm32f7xx_hal_sd.o --depend=cnn_1\stm32f7xx_hal_sd.d --cpu=Cortex-M7.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\stm32f7xx_hal_sd.crf ../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sd.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_SD_Abort||, CODE, READONLY, ALIGN=1

HAL_SD_Abort PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x3c]
        BIC      r0,r0,#0x13a
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x3c]
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x40]
        CBNZ     r0,|L1.32|
        LDR      r0,[r4,#0x3c]
        CBZ      r0,|L1.64|
|L1.32|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x2c]
        BIC      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        LDR      r0,[r4,#0x40]
        CBZ      r0,|L1.54|
        LDR      r0,[r4,#0x40]
        BL       HAL_DMA_Abort
|L1.54|
        LDR      r0,[r4,#0x3c]
        CBZ      r0,|L1.64|
        LDR      r0,[r4,#0x3c]
        BL       HAL_DMA_Abort
|L1.64|
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOV      r0,r4
        BL       HAL_SD_GetCardState
        MOV      r5,r0
        CMP      r5,#6
        BEQ      |L1.86|
        CMP      r5,#5
        BNE      |L1.94|
|L1.86|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStopTransfer
        STR      r0,[r4,#0x38]
|L1.94|
        LDR      r0,[r4,#0x38]
        CBZ      r0,|L1.102|
        MOVS     r0,#1
|L1.100|
        POP      {r4-r6,pc}
|L1.102|
        MOVS     r0,#0
        B        |L1.100|
        ENDP


        AREA ||i.HAL_SD_AbortCallback||, CODE, READONLY, ALIGN=1

HAL_SD_AbortCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_SD_Abort_IT||, CODE, READONLY, ALIGN=2

HAL_SD_Abort_IT PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x3c]
        BIC      r0,r0,#0x13a
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x3c]
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x40]
        CBNZ     r0,|L3.32|
        LDR      r0,[r4,#0x3c]
        CBZ      r0,|L3.88|
|L3.32|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x2c]
        BIC      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        LDR      r0,[r4,#0x40]
        CBZ      r0,|L3.66|
        LDR      r0,|L3.144|
        LDR      r1,[r4,#0x40]
        STR      r0,[r1,#0x50]
        LDR      r0,[r4,#0x40]
        BL       HAL_DMA_Abort_IT
        CBZ      r0,|L3.66|
        MOVS     r0,#0
        STR      r0,[r4,#0x40]
|L3.66|
        LDR      r0,[r4,#0x3c]
        CBZ      r0,|L3.88|
        LDR      r0,|L3.148|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x50]
        LDR      r0,[r4,#0x3c]
        BL       HAL_DMA_Abort_IT
        CBZ      r0,|L3.88|
        MOVS     r0,#0
        STR      r0,[r4,#0x3c]
|L3.88|
        LDR      r0,[r4,#0x40]
        CBNZ     r0,|L3.140|
        LDR      r0,[r4,#0x3c]
        CBNZ     r0,|L3.140|
        MOV      r0,r4
        BL       HAL_SD_GetCardState
        MOV      r5,r0
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        CMP      r5,#6
        BEQ      |L3.118|
        CMP      r5,#5
        BNE      |L3.126|
|L3.118|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStopTransfer
        STR      r0,[r4,#0x38]
|L3.126|
        LDR      r0,[r4,#0x38]
        CBZ      r0,|L3.134|
        MOVS     r0,#1
|L3.132|
        POP      {r4-r6,pc}
|L3.134|
        MOV      r0,r4
        BL       HAL_SD_AbortCallback
|L3.140|
        MOVS     r0,#0
        B        |L3.132|
        ENDP

|L3.144|
        DCD      SD_DMATxAbort
|L3.148|
        DCD      SD_DMARxAbort

        AREA ||i.HAL_SD_ConfigWideBusOperation||, CODE, READONLY, ALIGN=1

HAL_SD_ConfigWideBusOperation PROC
        PUSH     {r4-r6,lr}
        SUB      sp,sp,#0x28
        MOV      r4,r0
        MOV      r5,r1
        MOVS     r6,#0
        MOVS     r0,#3
        STRB     r0,[r4,#0x34]
        LDR      r0,[r4,#0x44]
        CMP      r0,#3
        BEQ      |L4.88|
        CMP      r5,#0x1000
        BNE      |L4.38|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x10000000
        STR      r0,[r4,#0x38]
        B        |L4.96|
|L4.38|
        CMP      r5,#0x800
        BNE      |L4.60|
        MOV      r0,r4
        BL       SD_WideBus_Enable
        MOV      r6,r0
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r6
        STR      r0,[r4,#0x38]
        B        |L4.96|
|L4.60|
        CBNZ     r5,|L4.78|
        MOV      r0,r4
        BL       SD_WideBus_Disable
        MOV      r6,r0
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r6
        STR      r0,[r4,#0x38]
        B        |L4.96|
|L4.78|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x8000000
        STR      r0,[r4,#0x38]
        B        |L4.96|
|L4.88|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x10000000
        STR      r0,[r4,#0x38]
|L4.96|
        LDR      r0,[r4,#0x38]
        CBZ      r0,|L4.118|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
|L4.114|
        ADD      sp,sp,#0x28
        POP      {r4-r6,pc}
|L4.118|
        LDR      r0,[r4,#4]
        STR      r0,[sp,#0x10]
        LDR      r0,[r4,#8]
        STR      r0,[sp,#0x14]
        LDR      r0,[r4,#0xc]
        STR      r0,[sp,#0x18]
        STR      r5,[sp,#0x1c]
        LDR      r0,[r4,#0x14]
        STR      r0,[sp,#0x20]
        LDR      r0,[r4,#0x18]
        STR      r0,[sp,#0x24]
        ADD      r0,sp,#0x1c
        LDM      r0,{r0-r2}
        STM      sp,{r0-r2}
        LDR      r0,[r4,#0]
        ADD      r1,sp,#0x10
        LDM      r1,{r1-r3}
        BL       SDMMC_Init
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        B        |L4.114|
        ENDP


        AREA ||i.HAL_SD_DeInit||, CODE, READONLY, ALIGN=1

HAL_SD_DeInit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBNZ     r4,|L5.10|
        MOVS     r0,#1
|L5.8|
        POP      {r4,pc}
|L5.10|
        MOVS     r0,#3
        STRB     r0,[r4,#0x34]
        MOV      r0,r4
        BL       SD_PowerOFF
        MOV      r0,r4
        BL       HAL_SD_MspDeInit
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        STRB     r0,[r4,#0x34]
        NOP      
        B        |L5.8|
        ENDP


        AREA ||i.HAL_SD_Erase||, CODE, READONLY, ALIGN=1

HAL_SD_Erase PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r7,r1
        MOV      r6,r2
        MOVS     r5,#0
        LDRB     r0,[r4,#0x34]
        CMP      r0,#1
        BNE      |L6.270|
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        CMP      r6,r7
        BCS      |L6.42|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x8000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
|L6.38|
        POP      {r4-r8,pc}
|L6.42|
        LDR      r0,[r4,#0x5c]
        CMP      r0,r6
        BCS      |L6.60|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L6.38|
|L6.60|
        MOVS     r0,#3
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0x4c
        LDRB     r0,[r0,r4]
        AND      r0,r0,#0x20
        CBNZ     r0,|L6.100|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x4000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L6.38|
|L6.100|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        AND      r0,r0,#0x2000000
        CMP      r0,#0x2000000
        BNE      |L6.142|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x800
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L6.38|
|L6.142|
        LDR      r0,[r4,#0x44]
        CMP      r0,#1
        BEQ      |L6.152|
        LSLS     r7,r7,#9
        LSLS     r6,r6,#9
|L6.152|
        LDR      r0,[r4,#0x44]
        CMP      r0,#3
        BEQ      |L6.226|
        MOV      r1,r7
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdSDEraseStartAdd
        MOV      r5,r0
        CBZ      r5,|L6.192|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L6.38|
|L6.192|
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdSDEraseEndAdd
        MOV      r5,r0
        CBZ      r5,|L6.226|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L6.38|
|L6.226|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdErase
        MOV      r5,r0
        CBZ      r5,|L6.260|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L6.38|
        B        |L6.270|
|L6.260|
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        B        |L6.38|
|L6.270|
        MOVS     r0,#2
        B        |L6.38|
        ENDP


        AREA ||i.HAL_SD_ErrorCallback||, CODE, READONLY, ALIGN=1

HAL_SD_ErrorCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_SD_GetCardCID||, CODE, READONLY, ALIGN=1

HAL_SD_GetCardCID PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        MOVS     r2,#0
        LDR      r0,[r3,#0x74]
        LSRS     r2,r0,#24
        STRB     r2,[r1,#0]
        LDR      r0,[r3,#0x74]
        UBFX     r2,r0,#16,#8
        MOV      r0,#0xffff
        AND      r0,r0,r2,LSL #8
        STRH     r0,[r1,#2]
        LDRH     r0,[r3,#0x74]
        UBFX     r2,r0,#8,#8
        LDRH     r0,[r1,#2]
        ORRS     r0,r0,r2
        STRH     r0,[r1,#2]
        LDRB     r2,[r3,#0x74]
        LSLS     r0,r2,#24
        STR      r0,[r1,#4]
        LDR      r0,[r3,#0x78]
        LSRS     r2,r0,#24
        LDR      r0,[r1,#4]
        ORR      r0,r0,r2,LSL #16
        STR      r0,[r1,#4]
        LDR      r0,[r3,#0x78]
        UBFX     r2,r0,#16,#8
        LDR      r0,[r1,#4]
        ORR      r0,r0,r2,LSL #8
        STR      r0,[r1,#4]
        MOVS     r0,#0x78
        LDRH     r0,[r0,r3]
        UBFX     r2,r0,#8,#8
        LDR      r0,[r1,#4]
        ORRS     r0,r0,r2
        STR      r0,[r1,#4]
        MOVS     r0,#0x78
        LDRB     r2,[r0,r3]
        STRB     r2,[r1,#8]
        LDR      r0,[r3,#0x7c]
        LSRS     r2,r0,#24
        STRB     r2,[r1,#9]
        LDR      r0,[r3,#0x7c]
        UBFX     r2,r0,#16,#8
        LSLS     r0,r2,#24
        STR      r0,[r1,#0xc]
        MOVS     r0,#0x7c
        LDRH     r0,[r0,r3]
        UBFX     r2,r0,#8,#8
        LDR      r0,[r1,#0xc]
        ORR      r0,r0,r2,LSL #16
        STR      r0,[r1,#0xc]
        MOVS     r0,#0x7c
        LDRB     r2,[r0,r3]
        LDR      r0,[r1,#0xc]
        ORR      r0,r0,r2,LSL #8
        STR      r0,[r1,#0xc]
        MOVS     r0,#0x80
        LDR      r0,[r0,r3]
        LSRS     r2,r0,#24
        LDR      r0,[r1,#0xc]
        ORRS     r0,r0,r2
        STR      r0,[r1,#0xc]
        MOVS     r0,#0x80
        LDR      r0,[r0,r3]
        UBFX     r2,r0,#16,#8
        LDRB     r0,[r1,#0x10]
        ORR      r0,r0,r2,LSR #4
        STRB     r0,[r1,#0x10]
        LSLS     r0,r2,#28
        LSRS     r0,r0,#20
        STRH     r0,[r1,#0x12]
        MOVS     r0,#0x80
        LDRH     r0,[r0,r3]
        UBFX     r2,r0,#8,#8
        LDRH     r0,[r1,#0x12]
        ORRS     r0,r0,r2
        STRH     r0,[r1,#0x12]
        MOVS     r0,#0x80
        LDRB     r2,[r0,r3]
        LSRS     r0,r2,#1
        STRB     r0,[r1,#0x14]
        MOVS     r0,#1
        STRB     r0,[r1,#0x15]
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_SD_GetCardCSD||, CODE, READONLY, ALIGN=1

HAL_SD_GetCardCSD PROC
        PUSH     {r4,r5,lr}
        MOV      r3,r0
        MOVS     r2,#0
        LDR      r0,[r3,#0x64]
        LSRS     r2,r0,#24
        LSRS     r0,r2,#6
        STRB     r0,[r1,#0]
        UBFX     r0,r2,#2,#4
        STRB     r0,[r1,#1]
        AND      r0,r2,#3
        STRB     r0,[r1,#2]
        LDR      r0,[r3,#0x64]
        UBFX     r2,r0,#16,#8
        STRB     r2,[r1,#3]
        LDRH     r0,[r3,#0x64]
        UBFX     r2,r0,#8,#8
        STRB     r2,[r1,#4]
        LDRB     r2,[r3,#0x64]
        STRB     r2,[r1,#5]
        LDR      r0,[r3,#0x68]
        LSRS     r2,r0,#24
        MOV      r0,#0xffff
        AND      r0,r0,r2,LSL #4
        STRH     r0,[r1,#6]
        LDR      r0,[r3,#0x68]
        UBFX     r2,r0,#16,#8
        LDRH     r0,[r1,#6]
        ORR      r0,r0,r2,LSR #4
        STRH     r0,[r1,#6]
        AND      r0,r2,#0xf
        STRB     r0,[r1,#8]
        MOVS     r0,#0x68
        LDRH     r0,[r0,r3]
        UBFX     r2,r0,#8,#8
        LSRS     r0,r2,#7
        STRB     r0,[r1,#9]
        UBFX     r0,r2,#6,#1
        STRB     r0,[r1,#0xa]
        UBFX     r0,r2,#5,#1
        STRB     r0,[r1,#0xb]
        UBFX     r0,r2,#4,#1
        STRB     r0,[r1,#0xc]
        MOVS     r0,#0
        STRB     r0,[r1,#0xd]
        LDR      r0,[r3,#0x44]
        CMP      r0,#0
        BNE      |L9.250|
        LSLS     r0,r2,#30
        LSRS     r0,r0,#20
        STR      r0,[r1,#0x10]
        MOVS     r0,#0x68
        LDRB     r2,[r0,r3]
        LDR      r0,[r1,#0x10]
        ORR      r0,r0,r2,LSL #2
        STR      r0,[r1,#0x10]
        LDR      r0,[r3,#0x6c]
        LSRS     r2,r0,#24
        LDR      r0,[r1,#0x10]
        ORR      r0,r0,r2,LSR #6
        STR      r0,[r1,#0x10]
        UBFX     r0,r2,#3,#3
        STRB     r0,[r1,#0x14]
        AND      r0,r2,#7
        STRB     r0,[r1,#0x15]
        LDR      r0,[r3,#0x6c]
        UBFX     r2,r0,#16,#8
        LSRS     r0,r2,#5
        STRB     r0,[r1,#0x16]
        UBFX     r0,r2,#2,#3
        STRB     r0,[r1,#0x17]
        LSLS     r0,r2,#30
        LSRS     r0,r0,#29
        STRB     r0,[r1,#0x18]
        MOVS     r0,#0x6c
        LDRH     r0,[r0,r3]
        UBFX     r2,r0,#8,#8
        LDRB     r0,[r1,#0x18]
        ORR      r0,r0,r2,LSR #7
        STRB     r0,[r1,#0x18]
        LDR      r0,[r1,#0x10]
        ADDS     r0,r0,#1
        STR      r0,[r3,#0x54]
        LDRB     r4,[r1,#0x18]
        LDR      r0,[r3,#0x54]
        ADDS     r4,r4,#2
        MOVS     r5,#1
        LSLS     r5,r5,r4
        MULS     r0,r5,r0
        STR      r0,[r3,#0x54]
        LDRB     r4,[r1,#8]
        MOVS     r0,#1
        LSLS     r0,r0,r4
        STR      r0,[r3,#0x58]
        LDRD     r0,r4,[r3,#0x54]
        LSRS     r4,r4,#9
        MULS     r0,r4,r0
        STR      r0,[r3,#0x5c]
        MOV      r4,#0x200
        STR      r4,[r3,#0x60]
        B        |L9.348|
|L9.250|
        LDR      r0,[r3,#0x44]
        CMP      r0,#1
        BNE      |L9.324|
        MOVS     r0,#0x68
        LDRB     r2,[r0,r3]
        LSLS     r0,r2,#26
        LSRS     r0,r0,#10
        STR      r0,[r1,#0x10]
        LDR      r0,[r3,#0x6c]
        LSRS     r2,r0,#24
        LDR      r0,[r1,#0x10]
        ORR      r0,r0,r2,LSL #8
        STR      r0,[r1,#0x10]
        LDR      r0,[r3,#0x6c]
        UBFX     r2,r0,#16,#8
        LDR      r0,[r1,#0x10]
        ORRS     r0,r0,r2
        STR      r0,[r1,#0x10]
        MOVS     r0,#0x6c
        LDRH     r0,[r0,r3]
        UBFX     r2,r0,#8,#8
        LDR      r0,[r1,#0x10]
        ADDS     r4,r0,#1
        MOV      r0,#0x400
        UMULL    r0,r4,r4,r0
        STR      r0,[r3,#0x54]
        STR      r0,[r3,#0x5c]
        MOV      r4,#0x200
        STR      r4,[r3,#0x58]
        STR      r4,[r3,#0x60]
        B        |L9.348|
|L9.324|
        MOV      r0,#0x5ff
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0x38]
        LDR      r0,[r3,#0x38]
        ORR      r0,r0,#0x10000000
        STR      r0,[r3,#0x38]
        MOVS     r0,#1
        STRB     r0,[r3,#0x34]
|L9.346|
        POP      {r4,r5,pc}
|L9.348|
        UBFX     r0,r2,#6,#1
        STRB     r0,[r1,#0x19]!
        LSLS     r0,r2,#26
        LSRS     r0,r0,#25
        STRB     r0,[r1,#1]
        MOVS     r0,#0x6c
        LDRB     r2,[r0,r3]
        LDRB     r0,[r1,#1]
        ORR      r0,r0,r2,LSR #7
        STRB     r0,[r1,#1]
        AND      r0,r2,#0x7f
        STRB     r0,[r1,#2]
        LDR      r0,[r3,#0x70]
        LSRS     r2,r0,#24
        LSRS     r0,r2,#7
        STRB     r0,[r1,#3]
        UBFX     r0,r2,#5,#2
        STRB     r0,[r1,#4]
        UBFX     r0,r2,#2,#3
        STRB     r0,[r1,#5]
        LSLS     r0,r2,#30
        LSRS     r0,r0,#28
        STRB     r0,[r1,#6]
        LDR      r0,[r3,#0x70]
        UBFX     r2,r0,#16,#8
        LDRB     r0,[r1,#6]
        ORR      r0,r0,r2,LSR #6
        STRB     r0,[r1,#6]
        UBFX     r0,r2,#5,#1
        STRB     r0,[r1,#7]
        MOVS     r0,#0
        STRB     r0,[r1,#8]
        AND      r0,r2,#1
        STRB     r0,[r1,#9]
        MOVS     r0,#0x70
        LDRH     r0,[r0,r3]
        UBFX     r2,r0,#8,#8
        LSRS     r0,r2,#7
        STRB     r0,[r1,#0xa]
        UBFX     r0,r2,#6,#1
        STRB     r0,[r1,#0xb]
        UBFX     r0,r2,#5,#1
        STRB     r0,[r1,#0xc]
        UBFX     r0,r2,#4,#1
        STRB     r0,[r1,#0xd]
        UBFX     r0,r2,#2,#2
        STRB     r0,[r1,#0xe]
        AND      r0,r2,#3
        STRB     r0,[r1,#0xf]
        MOVS     r0,#0x70
        LDRB     r2,[r0,r3]
        LSRS     r0,r2,#1
        STRB     r0,[r1,#0x10]
        MOVS     r0,#1
        STRB     r0,[r1,#0x11]
        SUBS     r1,r1,#0x19
        MOVS     r0,#0
        B        |L9.346|
        ENDP


        AREA ||i.HAL_SD_GetCardInfo||, CODE, READONLY, ALIGN=1

HAL_SD_GetCardInfo PROC
        MOV      r2,r0
        LDR      r0,[r2,#0x44]
        STR      r0,[r1,#0]
        LDR      r0,[r2,#0x48]
        STR      r0,[r1,#4]
        LDR      r0,[r2,#0x4c]
        STR      r0,[r1,#8]
        LDR      r0,[r2,#0x50]
        STR      r0,[r1,#0xc]
        LDR      r0,[r2,#0x54]
        STR      r0,[r1,#0x10]
        LDR      r0,[r2,#0x58]
        STR      r0,[r1,#0x14]
        LDR      r0,[r2,#0x5c]
        STR      r0,[r1,#0x18]
        LDR      r0,[r2,#0x60]
        STR      r0,[r1,#0x1c]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.HAL_SD_GetCardState||, CODE, READONLY, ALIGN=1

HAL_SD_GetCardState PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOVS     r6,#4
        MOVS     r5,#0
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOV      r1,sp
        MOV      r0,r4
        BL       SD_SendStatus
        MOV      r5,r0
        CBZ      r5,|L11.30|
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
|L11.30|
        LDR      r0,[sp,#0]
        UBFX     r6,r0,#9,#4
        MOV      r0,r6
        POP      {r3-r7,pc}
        ENDP


        AREA ||i.HAL_SD_GetCardStatus||, CODE, READONLY, ALIGN=1

HAL_SD_GetCardStatus PROC
        PUSH     {r4-r7,lr}
        SUB      sp,sp,#0x44
        MOV      r6,r0
        MOV      r5,r1
        MOVS     r4,#0
        MOVS     r7,#0
        ADD      r1,sp,#4
        MOV      r0,r6
        BL       SD_SendSDStatus
        MOV      r7,r0
        CBZ      r7,|L12.48|
        MOV      r0,#0x5ff
        LDR      r1,[r6,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r6,#0x38]
        ORRS     r0,r0,r7
        STR      r0,[r6,#0x38]
        MOVS     r0,#1
        STRB     r0,[r6,#0x34]
|L12.44|
        ADD      sp,sp,#0x44
        POP      {r4-r7,pc}
|L12.48|
        LDR      r0,[sp,#4]
        UBFX     r4,r0,#6,#2
        STRB     r4,[r5,#0]
        LDR      r0,[sp,#4]
        UBFX     r4,r0,#5,#1
        STRB     r4,[r5,#1]
        LDR      r0,[sp,#4]
        UBFX     r4,r0,#16,#8
        MOV      r0,#0xffff
        AND      r0,r0,r4,LSL #8
        STRH     r0,[r5,#2]
        LDR      r0,[sp,#4]
        LSRS     r4,r0,#24
        LDRH     r0,[r5,#2]
        ORRS     r0,r0,r4
        STRH     r0,[r5,#2]
        LDR      r0,[sp,#8]
        UXTB     r4,r0
        LSLS     r0,r4,#24
        STR      r0,[r5,#4]
        LDR      r0,[sp,#8]
        UBFX     r4,r0,#8,#8
        LDR      r0,[r5,#4]
        ORR      r0,r0,r4,LSL #16
        STR      r0,[r5,#4]
        LDR      r0,[sp,#8]
        UBFX     r4,r0,#16,#8
        LDR      r0,[r5,#4]
        ORR      r0,r0,r4,LSL #8
        STR      r0,[r5,#4]
        LDR      r0,[sp,#8]
        LSRS     r4,r0,#24
        LDR      r0,[r5,#4]
        ORRS     r0,r0,r4
        STR      r0,[r5,#4]
        LDR      r0,[sp,#0xc]
        UXTB     r4,r0
        STRB     r4,[r5,#8]
        LDR      r0,[sp,#0xc]
        UBFX     r4,r0,#8,#8
        STRB     r4,[r5,#9]
        LDR      r0,[sp,#0xc]
        UBFX     r4,r0,#20,#4
        STRB     r4,[r5,#0xa]
        LDR      r0,[sp,#0xc]
        LSRS     r4,r0,#24
        MOV      r0,#0xffff
        AND      r0,r0,r4,LSL #8
        STRH     r0,[r5,#0xc]
        LDR      r0,[sp,#0x10]
        UXTB     r4,r0
        LDRH     r0,[r5,#0xc]
        ORRS     r0,r0,r4
        STRH     r0,[r5,#0xc]
        LDR      r0,[sp,#0x10]
        UBFX     r4,r0,#10,#6
        STRB     r4,[r5,#0xe]
        LDR      r0,[sp,#0x10]
        UBFX     r4,r0,#8,#2
        STRB     r4,[r5,#0xf]
        MOVS     r0,#0
        B        |L12.44|
        ENDP


        AREA ||i.HAL_SD_GetError||, CODE, READONLY, ALIGN=1

HAL_SD_GetError PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x38]
        BX       lr
        ENDP


        AREA ||i.HAL_SD_GetState||, CODE, READONLY, ALIGN=1

HAL_SD_GetState PROC
        MOV      r1,r0
        LDRB     r0,[r1,#0x34]
        BX       lr
        ENDP


        AREA ||i.HAL_SD_IRQHandler||, CODE, READONLY, ALIGN=2

HAL_SD_IRQHandler PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#8,#1
        CMP      r0,#0
        BEQ      |L15.216|
        MOV      r0,#0x100
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x3c]
        BIC      r0,r0,#0x13a
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x3c]
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#8
        CBZ      r0,|L15.130|
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#2
        CBNZ     r0,|L15.62|
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#0x20
        CBZ      r0,|L15.84|
|L15.62|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStopTransfer
        MOV      r5,r0
        CBZ      r5,|L15.84|
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOV      r0,r4
        BL       HAL_SD_ErrorCallback
|L15.84|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#1
        CBNZ     r0,|L15.114|
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#2
        CBZ      r0,|L15.122|
|L15.114|
        MOV      r0,r4
        BL       HAL_SD_RxCpltCallback
|L15.120|
        B        |L15.478|
|L15.122|
        MOV      r0,r4
        BL       HAL_SD_TxCpltCallback
        B        |L15.478|
|L15.130|
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#0x80
        CMP      r0,#0
        BEQ      |L15.120|
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#0x20
        CBZ      r0,|L15.170|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStopTransfer
        MOV      r5,r0
        CBZ      r5,|L15.170|
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOV      r0,r4
        BL       HAL_SD_ErrorCallback
|L15.170|
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#1
        CMP      r0,#0
        BNE      |L15.120|
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#2
        CMP      r0,#0
        BNE      |L15.120|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x2c]
        BIC      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOV      r0,r4
        BL       HAL_SD_TxCpltCallback
        B        |L15.478|
|L15.216|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#14,#1
        CBZ      r0,|L15.242|
        MOV      r0,#0x4000
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        MOV      r0,r4
        BL       SD_Write_IT
        B        |L15.478|
|L15.242|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#15,#1
        CBZ      r0,|L15.268|
        MOV      r0,#0x8000
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        MOV      r0,r4
        BL       SD_Read_IT
        B        |L15.478|
|L15.268|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x3a
        CBZ      r0,|L15.282|
        MOVS     r0,#1
        B        |L15.284|
|L15.282|
        MOVS     r0,#0
|L15.284|
        CMP      r0,#0
        BEQ      |L15.478|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#1,#1
        CBZ      r0,|L15.306|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#2
        STR      r0,[r4,#0x38]
|L15.306|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#3,#1
        CBZ      r0,|L15.324|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#8
        STR      r0,[r4,#0x38]
|L15.324|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#5,#1
        CBZ      r0,|L15.342|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x20
        STR      r0,[r4,#0x38]
|L15.342|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#4,#1
        CBZ      r0,|L15.360|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x10
        STR      r0,[r4,#0x38]
|L15.360|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x3c]
        BIC      r0,r0,#0x13a
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x3c]
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#0x80
        CBZ      r0,|L15.458|
        LDR      r0,[r4,#0x40]
        CBZ      r0,|L15.414|
        LDR      r0,|L15.480|
        LDR      r1,[r4,#0x40]
        STR      r0,[r1,#0x50]
        LDR      r0,[r4,#0x40]
        BL       HAL_DMA_Abort_IT
        CBZ      r0,|L15.478|
        LDR      r0,[r4,#0x40]
        BL       SD_DMATxAbort
        B        |L15.478|
|L15.414|
        LDR      r0,[r4,#0x3c]
        CBZ      r0,|L15.440|
        LDR      r0,|L15.484|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x50]
        LDR      r0,[r4,#0x3c]
        BL       HAL_DMA_Abort_IT
        CBZ      r0,|L15.478|
        LDR      r0,[r4,#0x3c]
        BL       SD_DMARxAbort
        B        |L15.478|
|L15.440|
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOV      r0,r4
        BL       HAL_SD_AbortCallback
        B        |L15.478|
|L15.458|
        LDR      r0,[r4,#0x30]
        AND      r0,r0,#8
        CBZ      r0,|L15.478|
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOV      r0,r4
        BL       HAL_SD_ErrorCallback
|L15.478|
        POP      {r4-r6,pc}
        ENDP

|L15.480|
        DCD      SD_DMATxAbort
|L15.484|
        DCD      SD_DMARxAbort

        AREA ||i.HAL_SD_Init||, CODE, READONLY, ALIGN=1

HAL_SD_Init PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBNZ     r4,|L16.10|
        MOVS     r0,#1
|L16.8|
        POP      {r4,pc}
|L16.10|
        LDRB     r0,[r4,#0x34]
        CBNZ     r0,|L16.26|
        MOVS     r0,#0
        STRB     r0,[r4,#0x1c]
        MOV      r0,r4
        BL       HAL_SD_MspInit
|L16.26|
        MOVS     r0,#3
        STRB     r0,[r4,#0x34]
        MOV      r0,r4
        BL       HAL_SD_InitCard
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        STR      r0,[r4,#0x30]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        B        |L16.8|
        ENDP


        AREA ||i.HAL_SD_InitCard||, CODE, READONLY, ALIGN=1

HAL_SD_InitCard PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x24
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r0,#0
        STR      r0,[sp,#0xc]
        STR      r0,[sp,#0x10]
        STR      r0,[sp,#0x14]
        STR      r0,[sp,#0x18]
        STR      r0,[sp,#0x1c]
        MOVS     r0,#0x76
        STR      r0,[sp,#0x20]
        ADD      r0,sp,#0x18
        LDM      r0,{r0-r2}
        STM      sp,{r0-r2}
        LDR      r0,[r4,#0]
        ADD      r1,sp,#0xc
        LDM      r1,{r1-r3}
        BL       SDMMC_Init
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x100
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        BL       SDMMC_PowerState_ON
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        ORR      r0,r0,#0x100
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        MOVS     r0,#2
        BL       HAL_Delay
        MOV      r0,r4
        BL       SD_PowerON
        MOV      r5,r0
        CBZ      r5,|L17.106|
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
|L17.102|
        ADD      sp,sp,#0x24
        POP      {r4,r5,pc}
|L17.106|
        MOV      r0,r4
        BL       SD_InitCard
        MOV      r5,r0
        CBZ      r5,|L17.132|
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L17.102|
|L17.132|
        MOVS     r0,#0
        B        |L17.102|
        ENDP


        AREA ||i.HAL_SD_MspDeInit||, CODE, READONLY, ALIGN=1

HAL_SD_MspDeInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_SD_MspInit||, CODE, READONLY, ALIGN=1

HAL_SD_MspInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_SD_ReadBlocks||, CODE, READONLY, ALIGN=1

HAL_SD_ReadBlocks PROC
        PUSH     {r4-r11,lr}
        SUB      sp,sp,#0x1c
        MOV      r4,r0
        MOV      r10,r1
        MOV      r8,r2
        MOV      r6,r3
        LDR      r9,[sp,#0x40]
        MOVS     r5,#0
        BL       HAL_GetTick
        STR      r0,[sp,#0]
        MOV      r11,r5
        MOV      r7,r10
        CMP      r10,#0
        BNE      |L20.52|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x8000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
|L20.46|
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
|L20.52|
        LDRB     r0,[r4,#0x34]
        CMP      r0,#1
        BNE      |L20.312|
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        ADD      r1,r8,r6
        LDR      r0,[r4,#0x5c]
        CMP      r1,r0
        BLS      |L20.86|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L20.46|
|L20.86|
        MOVS     r0,#3
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        LDR      r0,[r4,#0x44]
        CMP      r0,#1
        BEQ      |L20.108|
        LSL      r8,r8,#9
|L20.108|
        MOV      r1,#0x200
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdBlockLength
        MOV      r5,r0
        CBZ      r5,|L20.144|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L20.46|
|L20.144|
        MOV      r0,#0xffffffff
        STR      r0,[sp,#4]
        LSLS     r0,r6,#9
        STR      r0,[sp,#8]
        MOVS     r0,#0x90
        STR      r0,[sp,#0xc]
        MOVS     r0,#2
        STR      r0,[sp,#0x10]
        MOVS     r0,#0
        STR      r0,[sp,#0x14]
        MOVS     r0,#1
        STR      r0,[sp,#0x18]
        ADD      r1,sp,#4
        LDR      r0,[r4,#0]
        BL       SDMMC_ConfigData
        CMP      r6,#1
        BLS      |L20.198|
        MOVS     r0,#2
        STR      r0,[r4,#0x30]
        MOV      r1,r8
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdReadMultiBlock
        MOV      r5,r0
        B        |L20.212|
|L20.198|
        MOVS     r0,#1
        STR      r0,[r4,#0x30]
        MOV      r1,r8
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdReadSingleBlock
        MOV      r5,r0
|L20.212|
        CBZ      r5,|L20.236|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L20.46|
|L20.236|
        B        |L20.324|
|L20.238|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x8000
        CBZ      r0,|L20.276|
        MOV      r11,#0
        B        |L20.268|
|L20.254|
        LDR      r0,[r4,#0]
        BL       SDMMC_ReadFIFO
        STR      r0,[r7,r11,LSL #2]
        ADD      r11,r11,#1
|L20.268|
        CMP      r11,#8
        BCC      |L20.254|
        ADDS     r7,r7,#0x20
|L20.276|
        CMP      r9,#0
        BEQ      |L20.294|
        BL       HAL_GetTick
        LDR      r1,[sp,#0]
        SUBS     r0,r0,r1
        CMP      r0,r9
        BCC      |L20.324|
|L20.294|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x80000000
        STR      r0,[r4,#0x38]
        B        |L20.314|
|L20.312|
        B        |L20.574|
|L20.314|
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOVS     r0,#3
        B        |L20.46|
|L20.324|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x12a
        CMP      r0,#0
        BEQ      |L20.238|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x100
        CBZ      r0,|L20.388|
        CMP      r6,#1
        BLS      |L20.388|
        LDR      r0,[r4,#0x44]
        CMP      r0,#3
        BEQ      |L20.388|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStopTransfer
        MOV      r5,r0
        CBZ      r5,|L20.388|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L20.46|
|L20.388|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#8
        CBZ      r0,|L20.422|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#8
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L20.46|
|L20.422|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#2
        CBZ      r0,|L20.456|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#2
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L20.46|
|L20.456|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x20
        CBZ      r0,|L20.490|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x20
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L20.46|
|L20.490|
        B        |L20.544|
|L20.492|
        LDR      r0,[r4,#0]
        BL       SDMMC_ReadFIFO
        STR      r0,[r7,#0]
        ADDS     r7,r7,#4
        CMP      r9,#0
        BEQ      |L20.520|
        BL       HAL_GetTick
        LDR      r1,[sp,#0]
        SUBS     r0,r0,r1
        CMP      r0,r9
        BCC      |L20.544|
|L20.520|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x80000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L20.46|
|L20.544|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x200000
        CMP      r0,#0
        BNE      |L20.492|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        B        |L20.46|
|L20.574|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x20000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L20.46|
        ENDP


        AREA ||i.HAL_SD_ReadBlocks_DMA||, CODE, READONLY, ALIGN=2

HAL_SD_ReadBlocks_DMA PROC
        PUSH     {r4-r8,lr}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        MOV      r8,r1
        MOV      r6,r2
        MOV      r5,r3
        MOVS     r7,#0
        CMP      r8,#0
        BNE      |L21.38|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x8000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
|L21.32|
        ADD      sp,sp,#0x18
        POP      {r4-r8,pc}
|L21.38|
        LDRB     r0,[r4,#0x34]
        CMP      r0,#1
        BNE      |L21.284|
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        ADDS     r1,r6,r5
        LDR      r0,[r4,#0x5c]
        CMP      r1,r0
        BLS      |L21.70|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L21.32|
|L21.70|
        MOVS     r0,#3
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x3c]
        ORR      r0,r0,#0x12a
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x3c]
        LDR      r0,|L21.288|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x3c]
        LDR      r0,|L21.292|
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x4c]
        MOVS     r0,#0
        LDR      r1,[r4,#0x3c]
        STR      r0,[r1,#0x50]
        LSLS     r2,r5,#9
        LSRS     r3,r2,#2
        LDR      r2,[r4,#0]
        ADD      r1,r2,#0x80
        MOV      r2,r8
        LDR      r0,[r4,#0x3c]
        BL       HAL_DMA_Start_IT
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x2c]
        ORR      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        LDR      r0,[r4,#0x44]
        CMP      r0,#1
        BEQ      |L21.150|
        LSLS     r6,r6,#9
|L21.150|
        MOV      r0,#0xffffffff
        STR      r0,[sp,#0]
        LSLS     r0,r5,#9
        STR      r0,[sp,#4]
        MOVS     r0,#0x90
        STR      r0,[sp,#8]
        MOVS     r0,#2
        STR      r0,[sp,#0xc]
        MOVS     r0,#0
        STR      r0,[sp,#0x10]
        MOVS     r0,#1
        STR      r0,[sp,#0x14]
        MOV      r1,sp
        LDR      r0,[r4,#0]
        BL       SDMMC_ConfigData
        MOV      r1,#0x200
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdBlockLength
        MOV      r7,r0
        CBZ      r7,|L21.220|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r7
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L21.32|
|L21.220|
        CMP      r5,#1
        BLS      |L21.240|
        MOVS     r0,#0x82
        STR      r0,[r4,#0x30]
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdReadMultiBlock
        MOV      r7,r0
        B        |L21.254|
|L21.240|
        MOVS     r0,#0x81
        STR      r0,[r4,#0x30]
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdReadSingleBlock
        MOV      r7,r0
|L21.254|
        CBZ      r7,|L21.280|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r7
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L21.32|
        B        |L21.284|
|L21.280|
        MOVS     r0,#0
        B        |L21.32|
|L21.284|
        MOVS     r0,#2
        B        |L21.32|
        ENDP

|L21.288|
        DCD      SD_DMAReceiveCplt
|L21.292|
        DCD      SD_DMAError

        AREA ||i.HAL_SD_ReadBlocks_IT||, CODE, READONLY, ALIGN=1

HAL_SD_ReadBlocks_IT PROC
        PUSH     {r4-r8,lr}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        MOV      r8,r1
        MOV      r6,r2
        MOV      r5,r3
        MOVS     r7,#0
        CMP      r8,#0
        BNE      |L22.38|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x8000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
|L22.32|
        ADD      sp,sp,#0x18
        POP      {r4-r8,pc}
|L22.38|
        LDRB     r0,[r4,#0x34]
        CMP      r0,#1
        BNE      |L22.244|
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        ADDS     r1,r6,r5
        LDR      r0,[r4,#0x5c]
        CMP      r1,r0
        BLS      |L22.70|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L22.32|
|L22.70|
        MOVS     r0,#3
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        STR      r8,[r4,#0x28]
        LSLS     r0,r5,#9
        STR      r0,[r4,#0x2c]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x3c]
        MOV      r1,#0x812a
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x3c]
        LDR      r0,[r4,#0x44]
        CMP      r0,#1
        BEQ      |L22.112|
        LSLS     r6,r6,#9
|L22.112|
        MOV      r0,#0xffffffff
        STR      r0,[sp,#0]
        LSLS     r0,r5,#9
        STR      r0,[sp,#4]
        MOVS     r0,#0x90
        STR      r0,[sp,#8]
        MOVS     r0,#2
        STR      r0,[sp,#0xc]
        MOVS     r0,#0
        STR      r0,[sp,#0x10]
        MOVS     r0,#1
        STR      r0,[sp,#0x14]
        MOV      r1,sp
        LDR      r0,[r4,#0]
        BL       SDMMC_ConfigData
        MOV      r1,#0x200
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdBlockLength
        MOV      r7,r0
        CBZ      r7,|L22.182|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r7
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L22.32|
|L22.182|
        CMP      r5,#1
        BLS      |L22.202|
        MOVS     r0,#0xa
        STR      r0,[r4,#0x30]
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdReadMultiBlock
        MOV      r7,r0
        B        |L22.216|
|L22.202|
        MOVS     r0,#9
        STR      r0,[r4,#0x30]
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdReadSingleBlock
        MOV      r7,r0
|L22.216|
        CBZ      r7,|L22.240|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r7
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L22.32|
|L22.240|
        MOVS     r0,#0
        B        |L22.32|
|L22.244|
        MOVS     r0,#2
        B        |L22.32|
        ENDP


        AREA ||i.HAL_SD_RxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_SD_RxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_SD_TxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_SD_TxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_SD_WriteBlocks||, CODE, READONLY, ALIGN=1

HAL_SD_WriteBlocks PROC
        PUSH     {r4-r11,lr}
        SUB      sp,sp,#0x1c
        MOV      r4,r0
        MOV      r8,r1
        MOV      r7,r2
        MOV      r6,r3
        LDR      r11,[sp,#0x40]
        MOVS     r5,#0
        BL       HAL_GetTick
        STR      r0,[sp,#0]
        MOV      r9,r5
        MOV      r10,r8
        CMP      r8,#0
        BNE      |L25.52|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x8000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
|L25.46|
        ADD      sp,sp,#0x1c
        POP      {r4-r11,pc}
|L25.52|
        LDRB     r0,[r4,#0x34]
        CMP      r0,#1
        BNE      |L25.312|
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        ADDS     r1,r7,r6
        LDR      r0,[r4,#0x5c]
        CMP      r1,r0
        BLS      |L25.84|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L25.46|
|L25.84|
        MOVS     r0,#3
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        LDR      r0,[r4,#0x44]
        CMP      r0,#1
        BEQ      |L25.104|
        LSLS     r7,r7,#9
|L25.104|
        MOV      r1,#0x200
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdBlockLength
        MOV      r5,r0
        CBZ      r5,|L25.140|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L25.46|
|L25.140|
        CMP      r6,#1
        BLS      |L25.160|
        MOVS     r0,#0x20
        STR      r0,[r4,#0x30]
        MOV      r1,r7
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdWriteMultiBlock
        MOV      r5,r0
        B        |L25.174|
|L25.160|
        MOVS     r0,#0x10
        STR      r0,[r4,#0x30]
        MOV      r1,r7
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdWriteSingleBlock
        MOV      r5,r0
|L25.174|
        CBZ      r5,|L25.198|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L25.46|
|L25.198|
        MOV      r0,#0xffffffff
        STR      r0,[sp,#4]
        LSLS     r0,r6,#9
        STR      r0,[sp,#8]
        MOVS     r0,#0x90
        STR      r0,[sp,#0xc]
        MOVS     r0,#0
        STR      r0,[sp,#0x10]
        STR      r0,[sp,#0x14]
        MOVS     r0,#1
        STR      r0,[sp,#0x18]
        ADD      r1,sp,#4
        LDR      r0,[r4,#0]
        BL       SDMMC_ConfigData
        B        |L25.318|
|L25.232|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x4000
        CBZ      r0,|L25.272|
        MOV      r9,#0
        B        |L25.262|
|L25.248|
        ADD      r1,r10,r9,LSL #2
        LDR      r0,[r4,#0]
        BL       SDMMC_WriteFIFO
        ADD      r9,r9,#1
|L25.262|
        CMP      r9,#8
        BCC      |L25.248|
        ADD      r10,r10,#0x20
|L25.272|
        CMP      r11,#0
        BEQ      |L25.290|
        BL       HAL_GetTick
        LDR      r1,[sp,#0]
        SUBS     r0,r0,r1
        CMP      r0,r11
        BCC      |L25.318|
|L25.290|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L25.314|
|L25.312|
        B        |L25.502|
|L25.314|
        MOVS     r0,#3
        B        |L25.46|
|L25.318|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x11a
        CMP      r0,#0
        BEQ      |L25.232|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x100
        CBZ      r0,|L25.382|
        CMP      r6,#1
        BLS      |L25.382|
        LDR      r0,[r4,#0x44]
        CMP      r0,#3
        BEQ      |L25.382|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStopTransfer
        MOV      r5,r0
        CBZ      r5,|L25.382|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r5
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L25.46|
|L25.382|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#8
        CBZ      r0,|L25.416|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#8
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L25.46|
|L25.416|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#2
        CBZ      r0,|L25.450|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#2
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L25.46|
|L25.450|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x10
        CBZ      r0,|L25.484|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x10
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L25.46|
|L25.484|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        B        |L25.46|
|L25.502|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x20000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L25.46|
        ENDP


        AREA ||i.HAL_SD_WriteBlocks_DMA||, CODE, READONLY, ALIGN=2

HAL_SD_WriteBlocks_DMA PROC
        PUSH     {r4-r8,lr}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        MOV      r8,r1
        MOV      r6,r2
        MOV      r5,r3
        MOVS     r7,#0
        CMP      r8,#0
        BNE      |L26.38|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x8000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
|L26.32|
        ADD      sp,sp,#0x18
        POP      {r4-r8,pc}
|L26.38|
        LDRB     r0,[r4,#0x34]
        CMP      r0,#1
        BNE      |L26.282|
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        ADDS     r1,r6,r5
        LDR      r0,[r4,#0x5c]
        CMP      r1,r0
        BLS      |L26.70|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L26.32|
|L26.70|
        MOVS     r0,#3
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x3c]
        ORR      r0,r0,#0x1a
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x3c]
        LDR      r0,|L26.288|
        LDR      r1,[r4,#0x40]
        STR      r0,[r1,#0x3c]
        LDR      r0,|L26.292|
        LDR      r1,[r4,#0x40]
        STR      r0,[r1,#0x4c]
        MOVS     r0,#0
        LDR      r1,[r4,#0x40]
        STR      r0,[r1,#0x50]
        LDR      r0,[r4,#0x44]
        CMP      r0,#1
        BEQ      |L26.120|
        LSLS     r6,r6,#9
|L26.120|
        MOV      r1,#0x200
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdBlockLength
        MOV      r7,r0
        CBZ      r7,|L26.156|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r7
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L26.32|
|L26.156|
        CMP      r5,#1
        BLS      |L26.176|
        MOVS     r0,#0xa0
        STR      r0,[r4,#0x30]
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdWriteMultiBlock
        MOV      r7,r0
        B        |L26.190|
|L26.176|
        MOVS     r0,#0x90
        STR      r0,[r4,#0x30]
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdWriteSingleBlock
        MOV      r7,r0
|L26.190|
        CBZ      r7,|L26.214|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r7
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L26.32|
|L26.214|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x2c]
        ORR      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        LSLS     r1,r5,#9
        LSRS     r3,r1,#2
        LDR      r1,[r4,#0]
        ADD      r2,r1,#0x80
        MOV      r1,r8
        LDR      r0,[r4,#0x40]
        BL       HAL_DMA_Start_IT
        MOV      r0,#0xffffffff
        STR      r0,[sp,#0]
        LSLS     r0,r5,#9
        STR      r0,[sp,#4]
        MOVS     r0,#0x90
        STR      r0,[sp,#8]
        MOVS     r0,#0
        STR      r0,[sp,#0xc]
        STR      r0,[sp,#0x10]
        MOVS     r0,#1
        STR      r0,[sp,#0x14]
        MOV      r1,sp
        LDR      r0,[r4,#0]
        BL       SDMMC_ConfigData
        MOVS     r0,#0
        B        |L26.32|
        B        |L26.282|
|L26.282|
        MOVS     r0,#2
        B        |L26.32|
        ENDP

        DCW      0x0000
|L26.288|
        DCD      SD_DMATransmitCplt
|L26.292|
        DCD      SD_DMAError

        AREA ||i.HAL_SD_WriteBlocks_IT||, CODE, READONLY, ALIGN=1

HAL_SD_WriteBlocks_IT PROC
        PUSH     {r4-r8,lr}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        MOV      r8,r1
        MOV      r6,r2
        MOV      r5,r3
        MOVS     r7,#0
        CMP      r8,#0
        BNE      |L27.38|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x8000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
|L27.32|
        ADD      sp,sp,#0x18
        POP      {r4-r8,pc}
|L27.38|
        LDRB     r0,[r4,#0x34]
        CMP      r0,#1
        BNE      |L27.242|
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        ADDS     r1,r6,r5
        LDR      r0,[r4,#0x5c]
        CMP      r1,r0
        BLS      |L27.70|
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x2000000
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        B        |L27.32|
|L27.70|
        MOVS     r0,#3
        STRB     r0,[r4,#0x34]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        STR      r8,[r4,#0x20]
        LSLS     r0,r5,#9
        STR      r0,[r4,#0x24]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x3c]
        MOV      r1,#0x411a
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x3c]
        LDR      r0,[r4,#0x44]
        CMP      r0,#1
        BEQ      |L27.112|
        LSLS     r6,r6,#9
|L27.112|
        MOV      r1,#0x200
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdBlockLength
        MOV      r7,r0
        CBZ      r7,|L27.148|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r7
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L27.32|
|L27.148|
        CMP      r5,#1
        BLS      |L27.168|
        MOVS     r0,#0x28
        STR      r0,[r4,#0x30]
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdWriteMultiBlock
        MOV      r7,r0
        B        |L27.182|
|L27.168|
        MOVS     r0,#0x18
        STR      r0,[r4,#0x30]
        MOV      r1,r6
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdWriteSingleBlock
        MOV      r7,r0
|L27.182|
        CBZ      r7,|L27.206|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r7
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        B        |L27.32|
|L27.206|
        MOV      r0,#0xffffffff
        STR      r0,[sp,#0]
        LSLS     r0,r5,#9
        STR      r0,[sp,#4]
        MOVS     r0,#0x90
        STR      r0,[sp,#8]
        MOVS     r0,#0
        STR      r0,[sp,#0xc]
        STR      r0,[sp,#0x10]
        MOVS     r0,#1
        STR      r0,[sp,#0x14]
        MOV      r1,sp
        LDR      r0,[r4,#0]
        BL       SDMMC_ConfigData
        MOVS     r0,#0
        B        |L27.32|
|L27.242|
        MOVS     r0,#2
        B        |L27.32|
        ENDP


        AREA ||i.SD_DMAError||, CODE, READONLY, ALIGN=1

SD_DMAError PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        LDR      r4,[r6,#0x38]
        MOV      r0,r6
        BL       HAL_DMA_GetError
        CMP      r0,#2
        BEQ      |L28.100|
        LDR      r0,[r4,#0x3c]
        LDR      r0,[r0,#0x54]
        CMP      r0,#1
        BEQ      |L28.32|
        LDR      r0,[r4,#0x40]
        LDR      r0,[r0,#0x54]
        CMP      r0,#1
        BNE      |L28.94|
|L28.32|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x3c]
        BIC      r0,r0,#0x13a
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x3c]
        LDR      r0,[r4,#0x38]
        ORR      r0,r0,#0x40000000
        STR      r0,[r4,#0x38]
        MOV      r0,r4
        BL       HAL_SD_GetCardState
        MOV      r5,r0
        CMP      r5,#6
        BEQ      |L28.76|
        CMP      r5,#5
        BNE      |L28.88|
|L28.76|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStopTransfer
        LDR      r1,[r4,#0x38]
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x38]
|L28.88|
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
|L28.94|
        MOV      r0,r4
        BL       HAL_SD_ErrorCallback
|L28.100|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SD_DMAReceiveCplt||, CODE, READONLY, ALIGN=1

SD_DMAReceiveCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x38]
        MOVS     r6,#0
        LDR      r0,[r4,#0x30]
        CMP      r0,#0x82
        BNE      |L29.36|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStopTransfer
        MOV      r6,r0
        CBZ      r6,|L29.36|
        LDR      r0,[r4,#0x38]
        ORRS     r0,r0,r6
        STR      r0,[r4,#0x38]
        MOV      r0,r4
        BL       HAL_SD_ErrorCallback
|L29.36|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x2c]
        BIC      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x2c]
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        MOV      r0,r4
        BL       HAL_SD_RxCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SD_DMARxAbort||, CODE, READONLY, ALIGN=1

SD_DMARxAbort PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        LDR      r4,[r6,#0x38]
        LDR      r0,[r4,#0x3c]
        CBZ      r0,|L30.14|
        MOVS     r0,#0
        STR      r0,[r4,#0x3c]
|L30.14|
        LDR      r0,[r4,#0x40]
        CBNZ     r0,|L30.74|
        MOV      r0,r4
        BL       HAL_SD_GetCardState
        MOV      r5,r0
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        CMP      r5,#6
        BEQ      |L30.44|
        CMP      r5,#5
        BNE      |L30.74|
|L30.44|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStopTransfer
        LDR      r1,[r4,#0x38]
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x38]
        LDR      r0,[r4,#0x38]
        CBZ      r0,|L30.68|
        MOV      r0,r4
        BL       HAL_SD_AbortCallback
        B        |L30.74|
|L30.68|
        MOV      r0,r4
        BL       HAL_SD_ErrorCallback
|L30.74|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SD_DMATransmitCplt||, CODE, READONLY, ALIGN=1

SD_DMATransmitCplt PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x38]
        LDR      r2,[r0,#0]
        LDR      r2,[r2,#0x3c]
        ORR      r2,r2,#0x100
        LDR      r3,[r0,#0]
        STR      r2,[r3,#0x3c]
        BX       lr
        ENDP


        AREA ||i.SD_DMATxAbort||, CODE, READONLY, ALIGN=1

SD_DMATxAbort PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        LDR      r4,[r6,#0x38]
        LDR      r0,[r4,#0x40]
        CBZ      r0,|L32.14|
        MOVS     r0,#0
        STR      r0,[r4,#0x40]
|L32.14|
        LDR      r0,[r4,#0x3c]
        CBNZ     r0,|L32.74|
        MOV      r0,r4
        BL       HAL_SD_GetCardState
        MOV      r5,r0
        MOVS     r0,#0
        STR      r0,[r4,#0x38]
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        CMP      r5,#6
        BEQ      |L32.44|
        CMP      r5,#5
        BNE      |L32.74|
|L32.44|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStopTransfer
        LDR      r1,[r4,#0x38]
        ORRS     r0,r0,r1
        STR      r0,[r4,#0x38]
        LDR      r0,[r4,#0x38]
        CBZ      r0,|L32.68|
        MOV      r0,r4
        BL       HAL_SD_AbortCallback
        B        |L32.74|
|L32.68|
        MOV      r0,r4
        BL       HAL_SD_ErrorCallback
|L32.74|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SD_FindSCR||, CODE, READONLY, ALIGN=1

SD_FindSCR PROC
        PUSH     {r4-r8,lr}
        SUB      sp,sp,#0x20
        MOV      r4,r0
        MOV      r6,r1
        MOVS     r5,#0
        BL       HAL_GetTick
        MOV      r8,r0
        MOVS     r7,#0
        MOVS     r0,#0
        STR      r0,[sp,#0]
        STR      r0,[sp,#4]
        MOVS     r1,#8
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdBlockLength
        MOV      r5,r0
        CBZ      r5,|L33.46|
        MOV      r0,r5
|L33.40|
        ADD      sp,sp,#0x20
        POP      {r4-r8,pc}
|L33.46|
        MOVS     r2,#0x50
        LDRH     r2,[r2,r4]
        LSLS     r1,r2,#16
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdAppCommand
        MOV      r5,r0
        CBZ      r5,|L33.66|
        MOV      r0,r5
        B        |L33.40|
|L33.66|
        MOV      r0,#0xffffffff
        STR      r0,[sp,#8]
        MOVS     r0,#8
        STR      r0,[sp,#0xc]
        MOVS     r0,#0x30
        STR      r0,[sp,#0x10]
        MOVS     r0,#2
        STR      r0,[sp,#0x14]
        MOVS     r0,#0
        STR      r0,[sp,#0x18]
        MOVS     r0,#1
        STR      r0,[sp,#0x1c]
        ADD      r1,sp,#8
        LDR      r0,[r4,#0]
        BL       SDMMC_ConfigData
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdSendSCR
        MOV      r5,r0
        CBZ      r5,|L33.114|
        MOV      r0,r5
        B        |L33.40|
|L33.114|
        B        |L33.156|
|L33.116|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x200000
        CBZ      r0,|L33.138|
        LDR      r0,[r4,#0]
        BL       SDMMC_ReadFIFO
        STR      r0,[sp,r7,LSL #2]
        ADDS     r7,r7,#1
|L33.138|
        BL       HAL_GetTick
        SUB      r0,r0,r8
        ADDS     r0,r0,#1
        CBNZ     r0,|L33.156|
        MOV      r0,#0x80000000
        B        |L33.40|
|L33.156|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        MOV      r1,#0x42a
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L33.116|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#8
        CBZ      r0,|L33.188|
        MOVS     r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        B        |L33.40|
|L33.188|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#2
        CBZ      r0,|L33.206|
        MOVS     r0,#2
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        B        |L33.40|
|L33.206|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x20
        CBZ      r0,|L33.224|
        MOVS     r0,#0x20
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        B        |L33.40|
|L33.224|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        LDR      r0,[sp,#0]
        LSLS     r0,r0,#24
        LDR      r1,[sp,#0]
        AND      r1,r1,#0xff00
        ORR      r0,r0,r1,LSL #8
        LDR      r1,[sp,#0]
        AND      r1,r1,#0xff0000
        ORR      r0,r0,r1,LSR #8
        LDR      r1,[sp,#0]
        ORR      r0,r0,r1,LSR #24
        STR      r0,[r6,#4]
        LDR      r0,[sp,#4]
        LSLS     r0,r0,#24
        LDR      r1,[sp,#4]
        AND      r1,r1,#0xff00
        ORR      r0,r0,r1,LSL #8
        LDR      r1,[sp,#4]
        AND      r1,r1,#0xff0000
        ORR      r0,r0,r1,LSR #8
        LDR      r1,[sp,#4]
        ORR      r0,r0,r1,LSR #24
        STR      r0,[r6,#0]
        MOVS     r0,#0
        B        |L33.40|
        ENDP


        AREA ||i.SD_InitCard||, CODE, READONLY, ALIGN=1

SD_InitCard PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x3c
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r0,#1
        STR      r0,[sp,#0xc]
        LDR      r0,[r4,#0]
        BL       SDMMC_GetPowerState
        CBNZ     r0,|L34.28|
        MOV      r0,#0x4000000
|L34.24|
        ADD      sp,sp,#0x3c
        POP      {r4,r5,pc}
|L34.28|
        LDR      r0,[r4,#0x44]
        CMP      r0,#3
        BEQ      |L34.90|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdSendCID
        MOV      r5,r0
        CBZ      r5,|L34.48|
        MOV      r0,r5
        B        |L34.24|
|L34.48|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        STR      r0,[r4,#0x74]
        MOVS     r1,#4
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        STR      r0,[r4,#0x78]
        MOVS     r1,#8
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        STR      r0,[r4,#0x7c]
        MOVS     r1,#0xc
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        MOVS     r1,#0x80
        STR      r0,[r1,r4]
|L34.90|
        LDR      r0,[r4,#0x44]
        CMP      r0,#3
        BEQ      |L34.112|
        ADD      r1,sp,#0xc
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdSetRelAdd
        MOV      r5,r0
        CBZ      r5,|L34.112|
        MOV      r0,r5
        B        |L34.24|
|L34.112|
        LDR      r0,[r4,#0x44]
        CMP      r0,#3
        BEQ      |L34.184|
        LDRH     r1,[sp,#0xc]
        STR      r1,[r4,#0x50]
        MOVS     r2,#0x50
        LDRH     r2,[r2,r4]
        LSLS     r1,r2,#16
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdSendCSD
        MOV      r5,r0
        CBZ      r5,|L34.144|
        MOV      r0,r5
        B        |L34.24|
|L34.144|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        STR      r0,[r4,#0x64]
        MOVS     r1,#4
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        STR      r0,[r4,#0x68]
        MOVS     r1,#8
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        STR      r0,[r4,#0x6c]
        MOVS     r1,#0xc
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        STR      r0,[r4,#0x70]
|L34.184|
        MOVS     r1,#4
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        LSRS     r1,r0,#20
        STR      r1,[r4,#0x4c]
        ADD      r1,sp,#0x10
        MOV      r0,r4
        BL       HAL_SD_GetCardCSD
        MOVS     r0,#0x50
        LDRH     r0,[r0,r4]
        LSLS     r1,r0,#16
        MOV      r2,r1
        MOVS     r3,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdSelDesel
        MOV      r5,r0
        CBZ      r5,|L34.228|
        MOV      r0,r5
        B        |L34.24|
|L34.228|
        LDRD     r1,r2,[r4,#0x10]
        LDR      r0,[r4,#0x18]
        STRD     r1,r2,[sp,#0]
        STR      r0,[sp,#8]
        LDM      r4,{r0-r3}
        BL       SDMMC_Init
        MOVS     r0,#0
        B        |L34.24|
        ENDP


        AREA ||i.SD_PowerOFF||, CODE, READONLY, ALIGN=1

SD_PowerOFF PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        BL       SDMMC_PowerState_OFF
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.SD_PowerON||, CODE, READONLY, ALIGN=1

SD_PowerON PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOVS     r6,#0
        MOVS     r7,#0
        MOVS     r5,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdGoIdleState
        MOV      r5,r0
        CBZ      r5,|L36.28|
        MOV      r0,r5
|L36.26|
        POP      {r3-r7,pc}
|L36.28|
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdOperCond
        MOV      r5,r0
        CBZ      r5,|L36.130|
        MOVS     r1,#0
        STR      r1,[r4,#0x48]
        B        |L36.120|
|L36.44|
        LDR      r0,[sp,#0]
        ADDS     r1,r0,#1
        STR      r1,[sp,#0]
        MOV      r1,#0xffff
        CMP      r0,r1
        BNE      |L36.64|
        MOV      r0,#0x1000000
        B        |L36.26|
|L36.64|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdAppCommand
        MOV      r5,r0
        CBZ      r5,|L36.82|
        MOV      r0,#0x10000000
        B        |L36.26|
|L36.82|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdAppOperCommand
        MOV      r5,r0
        CBZ      r5,|L36.100|
        MOV      r0,#0x10000000
        B        |L36.26|
|L36.100|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        MOV      r6,r0
        MOVS     r0,#1
        EOR      r0,r0,r6,LSR #31
        EOR      r7,r0,#1
|L36.120|
        CMP      r7,#0
        BEQ      |L36.44|
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
        B        |L36.234|
|L36.130|
        MOVS     r1,#1
        STR      r1,[r4,#0x48]
        B        |L36.210|
|L36.136|
        LDR      r0,[sp,#0]
        ADDS     r1,r0,#1
        STR      r1,[sp,#0]
        MOV      r1,#0xffff
        CMP      r0,r1
        BNE      |L36.156|
        MOV      r0,#0x1000000
        B        |L36.26|
|L36.156|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdAppCommand
        MOV      r5,r0
        CBZ      r5,|L36.172|
        MOV      r0,r5
        B        |L36.26|
|L36.172|
        MOV      r1,#0x40000000
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdAppOperCommand
        MOV      r5,r0
        CBZ      r5,|L36.190|
        MOV      r0,r5
        B        |L36.26|
|L36.190|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        MOV      r6,r0
        MOVS     r0,#1
        EOR      r0,r0,r6,LSR #31
        EOR      r7,r0,#1
|L36.210|
        CMP      r7,#0
        BEQ      |L36.136|
        AND      r0,r6,#0x40000000
        CMP      r0,#0x40000000
        BNE      |L36.230|
        MOVS     r0,#1
        STR      r0,[r4,#0x44]
        B        |L36.234|
|L36.230|
        MOVS     r0,#0
        STR      r0,[r4,#0x44]
|L36.234|
        MOVS     r0,#0
        B        |L36.26|
        ENDP


        AREA ||i.SD_Read_IT||, CODE, READONLY, ALIGN=1

SD_Read_IT PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0
        LDR      r6,[r4,#0x28]
        NOP      
        B        |L37.24|
|L37.12|
        LDR      r0,[r4,#0]
        BL       SDMMC_ReadFIFO
        STR      r0,[r6,r5,LSL #2]
        ADDS     r5,r5,#1
|L37.24|
        CMP      r5,#8
        BCC      |L37.12|
        LDR      r0,[r4,#0x28]
        ADDS     r0,r0,#0x20
        STR      r0,[r4,#0x28]
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SD_SendSDStatus||, CODE, READONLY, ALIGN=1

SD_SendSDStatus PROC
        PUSH     {r4-r8,lr}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        MOV      r5,r1
        MOVS     r6,#0
        BL       HAL_GetTick
        MOV      r8,r0
        MOVS     r7,#0
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        AND      r0,r0,#0x2000000
        CMP      r0,#0x2000000
        BNE      |L38.48|
        MOV      r0,#0x800
|L38.42|
        ADD      sp,sp,#0x18
        POP      {r4-r8,pc}
|L38.48|
        MOVS     r1,#0x40
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdBlockLength
        MOV      r6,r0
        CBZ      r6,|L38.68|
        LDR      r0,[r4,#0x38]
        STR      r0,[r4,#0x38]
        MOV      r0,r6
        B        |L38.42|
|L38.68|
        MOVS     r2,#0x50
        LDRH     r2,[r2,r4]
        LSLS     r1,r2,#16
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdAppCommand
        MOV      r6,r0
        CBZ      r6,|L38.92|
        LDR      r0,[r4,#0x38]
        STR      r0,[r4,#0x38]
        MOV      r0,r6
        B        |L38.42|
|L38.92|
        MOV      r0,#0xffffffff
        STR      r0,[sp,#0]
        MOVS     r0,#0x40
        STR      r0,[sp,#4]
        MOVS     r0,#0x60
        STR      r0,[sp,#8]
        MOVS     r0,#2
        STR      r0,[sp,#0xc]
        MOVS     r0,#0
        STR      r0,[sp,#0x10]
        MOVS     r0,#1
        STR      r0,[sp,#0x14]
        MOV      r1,sp
        LDR      r0,[r4,#0]
        BL       SDMMC_ConfigData
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdStatusRegister
        MOV      r6,r0
        CBZ      r6,|L38.144|
        LDR      r0,[r4,#0x38]
        STR      r0,[r4,#0x38]
        MOV      r0,r6
        B        |L38.42|
|L38.144|
        B        |L38.196|
|L38.146|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x8000
        CBZ      r0,|L38.178|
        MOVS     r7,#0
        B        |L38.172|
|L38.160|
        LDR      r0,[r4,#0]
        BL       SDMMC_ReadFIFO
        STR      r0,[r5,r7,LSL #2]
        ADDS     r7,r7,#1
|L38.172|
        CMP      r7,#8
        BCC      |L38.160|
        ADDS     r5,r5,#0x20
|L38.178|
        BL       HAL_GetTick
        SUB      r0,r0,r8
        ADDS     r0,r0,#1
        CBNZ     r0,|L38.196|
        MOV      r0,#0x80000000
        B        |L38.42|
|L38.196|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        MOV      r1,#0x42a
        ANDS     r0,r0,r1
        CMP      r0,#0
        BEQ      |L38.146|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#8
        CBZ      r0,|L38.224|
        MOVS     r0,#8
        B        |L38.42|
|L38.224|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#2
        CBZ      r0,|L38.238|
        MOVS     r0,#2
        B        |L38.42|
|L38.238|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x20
        CBZ      r0,|L38.252|
        MOVS     r0,#0x20
        B        |L38.42|
|L38.252|
        B        |L38.282|
|L38.254|
        LDR      r0,[r4,#0]
        BL       SDMMC_ReadFIFO
        STR      r0,[r5,#0]
        ADDS     r5,r5,#4
        BL       HAL_GetTick
        SUB      r0,r0,r8
        ADDS     r0,r0,#1
        CBNZ     r0,|L38.282|
        MOV      r0,#0x80000000
        B        |L38.42|
|L38.282|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x34]
        AND      r0,r0,#0x200000
        CMP      r0,#0
        BNE      |L38.254|
        MOV      r0,#0x5ff
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x38]
        MOVS     r0,#0
        B        |L38.42|
        ENDP


        AREA ||i.SD_SendStatus||, CODE, READONLY, ALIGN=1

SD_SendStatus PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOVS     r6,#0
        CBNZ     r5,|L39.16|
        MOV      r0,#0x8000000
|L39.14|
        POP      {r4-r6,pc}
|L39.16|
        MOVS     r2,#0x50
        LDRH     r2,[r2,r4]
        LSLS     r1,r2,#16
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdSendStatus
        MOV      r6,r0
        CBZ      r6,|L39.36|
        MOV      r0,r6
        B        |L39.14|
|L39.36|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        STR      r0,[r5,#0]
        MOVS     r0,#0
        B        |L39.14|
        ENDP


        AREA ||i.SD_WideBus_Disable||, CODE, READONLY, ALIGN=1

SD_WideBus_Disable PROC
        PUSH     {r2-r6,lr}
        MOV      r4,r0
        MOVS     r0,#0
        STR      r0,[sp,#0]
        STR      r0,[sp,#4]
        MOVS     r5,#0
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        AND      r0,r0,#0x2000000
        CMP      r0,#0x2000000
        BNE      |L40.36|
        MOV      r0,#0x800
|L40.34|
        POP      {r2-r6,pc}
|L40.36|
        MOV      r1,sp
        MOV      r0,r4
        BL       SD_FindSCR
        MOV      r5,r0
        CBZ      r5,|L40.52|
        MOV      r0,r5
        B        |L40.34|
|L40.52|
        LDR      r0,[sp,#4]
        AND      r0,r0,#0x10000
        CBZ      r0,|L40.100|
        MOVS     r2,#0x50
        LDRH     r2,[r2,r4]
        LSLS     r1,r2,#16
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdAppCommand
        MOV      r5,r0
        CBZ      r5,|L40.80|
        MOV      r0,r5
        B        |L40.34|
|L40.80|
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdBusWidth
        MOV      r5,r0
        CBZ      r5,|L40.96|
        MOV      r0,r5
        B        |L40.34|
|L40.96|
        MOVS     r0,#0
        B        |L40.34|
|L40.100|
        MOV      r0,#0x4000000
        B        |L40.34|
        ENDP


        AREA ||i.SD_WideBus_Enable||, CODE, READONLY, ALIGN=1

SD_WideBus_Enable PROC
        PUSH     {r2-r6,lr}
        MOV      r4,r0
        MOVS     r0,#0
        STR      r0,[sp,#0]
        STR      r0,[sp,#4]
        MOVS     r5,#0
        MOVS     r1,#0
        LDR      r0,[r4,#0]
        BL       SDMMC_GetResponse
        AND      r0,r0,#0x2000000
        CMP      r0,#0x2000000
        BNE      |L41.36|
        MOV      r0,#0x800
|L41.34|
        POP      {r2-r6,pc}
|L41.36|
        MOV      r1,sp
        MOV      r0,r4
        BL       SD_FindSCR
        MOV      r5,r0
        CBZ      r5,|L41.52|
        MOV      r0,r5
        B        |L41.34|
|L41.52|
        LDR      r0,[sp,#4]
        AND      r0,r0,#0x40000
        CBZ      r0,|L41.100|
        MOVS     r2,#0x50
        LDRH     r2,[r2,r4]
        LSLS     r1,r2,#16
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdAppCommand
        MOV      r5,r0
        CBZ      r5,|L41.80|
        MOV      r0,r5
        B        |L41.34|
|L41.80|
        MOVS     r1,#2
        LDR      r0,[r4,#0]
        BL       SDMMC_CmdBusWidth
        MOV      r5,r0
        CBZ      r5,|L41.96|
        MOV      r0,r5
        B        |L41.34|
|L41.96|
        MOVS     r0,#0
        B        |L41.34|
|L41.100|
        MOV      r0,#0x4000000
        B        |L41.34|
        ENDP


        AREA ||i.SD_Write_IT||, CODE, READONLY, ALIGN=1

SD_Write_IT PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0
        LDR      r6,[r4,#0x20]
        NOP      
        B        |L42.24|
|L42.12|
        ADD      r1,r6,r5,LSL #2
        LDR      r0,[r4,#0]
        BL       SDMMC_WriteFIFO
        ADDS     r5,r5,#1
|L42.24|
        CMP      r5,#8
        BCC      |L42.12|
        LDR      r0,[r4,#0x20]
        ADDS     r0,r0,#0x20
        STR      r0,[r4,#0x20]
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_sd.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f7xx_hal_sd_c_b96143bd____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___18_stm32f7xx_hal_sd_c_b96143bd____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f7xx_hal_sd_c_b96143bd____REVSH|
#line 402
|__asm___18_stm32f7xx_hal_sd_c_b96143bd____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f7xx_hal_sd_c_b96143bd____RRX|
#line 587
|__asm___18_stm32f7xx_hal_sd_c_b96143bd____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_SD_Abort [CODE]
        EXPORT HAL_SD_AbortCallback [CODE,WEAK]
        EXPORT HAL_SD_Abort_IT [CODE]
        EXPORT HAL_SD_ConfigWideBusOperation [CODE]
        EXPORT HAL_SD_DeInit [CODE]
        EXPORT HAL_SD_Erase [CODE]
        EXPORT HAL_SD_ErrorCallback [CODE,WEAK]
        EXPORT HAL_SD_GetCardCID [CODE]
        EXPORT HAL_SD_GetCardCSD [CODE]
        EXPORT HAL_SD_GetCardInfo [CODE]
        EXPORT HAL_SD_GetCardState [CODE]
        EXPORT HAL_SD_GetCardStatus [CODE]
        EXPORT HAL_SD_GetError [CODE]
        EXPORT HAL_SD_GetState [CODE]
        EXPORT HAL_SD_IRQHandler [CODE]
        EXPORT HAL_SD_Init [CODE]
        EXPORT HAL_SD_InitCard [CODE]
        EXPORT HAL_SD_MspDeInit [CODE,WEAK]
        EXPORT HAL_SD_MspInit [CODE,WEAK]
        EXPORT HAL_SD_ReadBlocks [CODE]
        EXPORT HAL_SD_ReadBlocks_DMA [CODE]
        EXPORT HAL_SD_ReadBlocks_IT [CODE]
        EXPORT HAL_SD_RxCpltCallback [CODE,WEAK]
        EXPORT HAL_SD_TxCpltCallback [CODE,WEAK]
        EXPORT HAL_SD_WriteBlocks [CODE]
        EXPORT HAL_SD_WriteBlocks_DMA [CODE]
        EXPORT HAL_SD_WriteBlocks_IT [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT SDMMC_GetPowerState [CODE]
        IMPORT SDMMC_CmdSendCID [CODE]
        IMPORT SDMMC_GetResponse [CODE]
        IMPORT SDMMC_CmdSetRelAdd [CODE]
        IMPORT SDMMC_CmdSendCSD [CODE]
        IMPORT SDMMC_CmdSelDesel [CODE]
        IMPORT SDMMC_Init [CODE]
        IMPORT SDMMC_CmdGoIdleState [CODE]
        IMPORT SDMMC_CmdOperCond [CODE]
        IMPORT SDMMC_CmdAppCommand [CODE]
        IMPORT SDMMC_CmdAppOperCommand [CODE]
        IMPORT SDMMC_PowerState_ON [CODE]
        IMPORT HAL_Delay [CODE]
        IMPORT SDMMC_PowerState_OFF [CODE]
        IMPORT HAL_GetTick [CODE]
        IMPORT SDMMC_CmdBlockLength [CODE]
        IMPORT SDMMC_ConfigData [CODE]
        IMPORT SDMMC_CmdReadMultiBlock [CODE]
        IMPORT SDMMC_CmdReadSingleBlock [CODE]
        IMPORT SDMMC_ReadFIFO [CODE]
        IMPORT SDMMC_CmdStopTransfer [CODE]
        IMPORT SDMMC_CmdWriteMultiBlock [CODE]
        IMPORT SDMMC_CmdWriteSingleBlock [CODE]
        IMPORT SDMMC_WriteFIFO [CODE]
        IMPORT SDMMC_CmdSendStatus [CODE]
        IMPORT HAL_DMA_GetError [CODE]
        IMPORT HAL_DMA_Start_IT [CODE]
        IMPORT SDMMC_CmdSDEraseStartAdd [CODE]
        IMPORT SDMMC_CmdSDEraseEndAdd [CODE]
        IMPORT SDMMC_CmdErase [CODE]
        IMPORT HAL_DMA_Abort_IT [CODE]
        IMPORT SDMMC_CmdStatusRegister [CODE]
        IMPORT SDMMC_CmdSendSCR [CODE]
        IMPORT SDMMC_CmdBusWidth [CODE]
        IMPORT HAL_DMA_Abort [CODE]

        KEEP SD_DMAError
        KEEP SD_DMAReceiveCplt
        KEEP SD_DMARxAbort
        KEEP SD_DMATransmitCplt
        KEEP SD_DMATxAbort
        KEEP SD_FindSCR
        KEEP SD_InitCard
        KEEP SD_PowerOFF
        KEEP SD_PowerON
        KEEP SD_Read_IT
        KEEP SD_SendSDStatus
        KEEP SD_SendStatus
        KEEP SD_WideBus_Disable
        KEEP SD_WideBus_Enable
        KEEP SD_Write_IT

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
