; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\stm32f7xx_hal.o --depend=cnn_1\stm32f7xx_hal.d --cpu=Cortex-M7 --fpu=SoftVFP --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\stm32f7xx_hal.crf ../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_DBGMCU_DisableDBGSleepMode||, CODE, READONLY, ALIGN=2

HAL_DBGMCU_DisableDBGSleepMode PROC
        LDR      r0,|L1.12|
        LDR      r1,[r0,#4]
        BIC      r1,r1,#1
        STR      r1,[r0,#4]
        BX       lr
        ENDP

|L1.12|
        DCD      0xe0042000

        AREA ||i.HAL_DBGMCU_DisableDBGStandbyMode||, CODE, READONLY, ALIGN=2

HAL_DBGMCU_DisableDBGStandbyMode PROC
        LDR      r0,|L2.12|
        LDR      r1,[r0,#4]
        BIC      r1,r1,#4
        STR      r1,[r0,#4]
        BX       lr
        ENDP

|L2.12|
        DCD      0xe0042000

        AREA ||i.HAL_DBGMCU_DisableDBGStopMode||, CODE, READONLY, ALIGN=2

HAL_DBGMCU_DisableDBGStopMode PROC
        LDR      r0,|L3.12|
        LDR      r1,[r0,#4]
        BIC      r1,r1,#2
        STR      r1,[r0,#4]
        BX       lr
        ENDP

|L3.12|
        DCD      0xe0042000

        AREA ||i.HAL_DBGMCU_EnableDBGSleepMode||, CODE, READONLY, ALIGN=2

HAL_DBGMCU_EnableDBGSleepMode PROC
        LDR      r0,|L4.12|
        LDR      r1,[r0,#4]
        ORR      r1,r1,#1
        STR      r1,[r0,#4]
        BX       lr
        ENDP

|L4.12|
        DCD      0xe0042000

        AREA ||i.HAL_DBGMCU_EnableDBGStandbyMode||, CODE, READONLY, ALIGN=2

HAL_DBGMCU_EnableDBGStandbyMode PROC
        LDR      r0,|L5.12|
        LDR      r1,[r0,#4]
        ORR      r1,r1,#4
        STR      r1,[r0,#4]
        BX       lr
        ENDP

|L5.12|
        DCD      0xe0042000

        AREA ||i.HAL_DBGMCU_EnableDBGStopMode||, CODE, READONLY, ALIGN=2

HAL_DBGMCU_EnableDBGStopMode PROC
        LDR      r0,|L6.12|
        LDR      r1,[r0,#4]
        ORR      r1,r1,#2
        STR      r1,[r0,#4]
        BX       lr
        ENDP

|L6.12|
        DCD      0xe0042000

        AREA ||i.HAL_DeInit||, CODE, READONLY, ALIGN=2

HAL_DeInit PROC
        PUSH     {r4-r6,lr}
        LDR      r6,|L7.48|
        MOVS     r1,#0
        LDR      r2,|L7.48|
        MOV      r0,#0xffffffff
        ADDS     r5,r6,#4
        SUBS     r2,r2,#0x10
        ADDS     r4,r2,#4
        STR      r0,[r6,#0]
        ADDS     r3,r4,#4
        STR      r1,[r6,#0]
        STR      r0,[r5,#0]
        STR      r1,[r5,#0]
        STR      r0,[r2,#0]
        STR      r1,[r2,#0]
        STR      r0,[r4,#0]
        STR      r1,[r4,#0]
        STR      r0,[r3,#0]
        STR      r1,[r3,#0]
        BL       HAL_MspDeInit
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP

|L7.48|
        DCD      0x40023820

        AREA ||i.HAL_Delay||, CODE, READONLY, ALIGN=1

HAL_Delay PROC
        PUSH     {r0,r4,r5,lr}
        BL       HAL_GetTick
        MOV      r4,r0
|L8.8|
        BL       HAL_GetTick
        LDR      r1,[sp,#0]
        SUBS     r0,r0,r4
        CMP      r0,r1
        BCC      |L8.8|
        POP      {r3-r5,pc}
        ENDP


        AREA ||i.HAL_DisableCompensationCell||, CODE, READONLY, ALIGN=2

HAL_DisableCompensationCell PROC
        LDR      r0,|L9.12|
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L9.12|
        DCD      0x40013820

        AREA ||i.HAL_DisableFMCMemorySwapping||, CODE, READONLY, ALIGN=2

HAL_DisableFMCMemorySwapping PROC
        LDR      r0,|L10.12|
        LDR      r1,[r0,#0]
        BIC      r1,r1,#0xc00
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L10.12|
        DCD      0x40013800

        AREA ||i.HAL_EnableCompensationCell||, CODE, READONLY, ALIGN=2

HAL_EnableCompensationCell PROC
        LDR      r0,|L11.12|
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L11.12|
        DCD      0x40013820

        AREA ||i.HAL_EnableFMCMemorySwapping||, CODE, READONLY, ALIGN=2

HAL_EnableFMCMemorySwapping PROC
        LDR      r0,|L12.12|
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x400
        STR      r1,[r0,#0]
        BX       lr
        ENDP

|L12.12|
        DCD      0x40013800

        AREA ||i.HAL_GetDEVID||, CODE, READONLY, ALIGN=2

HAL_GetDEVID PROC
        LDR      r0,|L13.12|
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#0,#12
        BX       lr
        ENDP

        DCW      0x0000
|L13.12|
        DCD      0xe0042000

        AREA ||i.HAL_GetHalVersion||, CODE, READONLY, ALIGN=2

HAL_GetHalVersion PROC
        LDR      r0,|L14.4|
        BX       lr
        ENDP

|L14.4|
        DCD      0x01020200

        AREA ||i.HAL_GetREVID||, CODE, READONLY, ALIGN=2

HAL_GetREVID PROC
        LDR      r0,|L15.8|
        LDR      r0,[r0,#0]
        LSRS     r0,r0,#16
        BX       lr
        ENDP

|L15.8|
        DCD      0xe0042000

        AREA ||i.HAL_GetTick||, CODE, READONLY, ALIGN=2

HAL_GetTick PROC
        LDR      r0,|L16.8|
        LDR      r0,[r0,#0]  ; uwTick
        BX       lr
        ENDP

        DCW      0x0000
|L16.8|
        DCD      ||.data||

        AREA ||i.HAL_IncTick||, CODE, READONLY, ALIGN=2

HAL_IncTick PROC
        LDR      r0,|L17.12|
        LDR      r1,[r0,#0]  ; uwTick
        ADDS     r1,r1,#1
        STR      r1,[r0,#0]  ; uwTick
        BX       lr
        ENDP

        DCW      0x0000
|L17.12|
        DCD      ||.data||

        AREA ||i.HAL_Init||, CODE, READONLY, ALIGN=1

HAL_Init PROC
        MOVS     r0,#3
        PUSH     {r4,lr}
        BL       HAL_NVIC_SetPriorityGrouping
        MOVS     r0,#0
        BL       HAL_InitTick
        BL       HAL_MspInit
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_InitTick||, CODE, READONLY, ALIGN=2

HAL_InitTick PROC
        LDR      r1,|L19.36|
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r0,#0x3e8
        LDR      r1,[r1,#0]  ; SystemCoreClock
        UDIV     r0,r1,r0
        BL       HAL_SYSTICK_Config
        MOVS     r2,#0
        MOV      r1,r4
        SUBS     r0,r2,#1
        BL       HAL_NVIC_SetPriority
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L19.36|
        DCD      SystemCoreClock

        AREA ||i.HAL_MspDeInit||, CODE, READONLY, ALIGN=1

HAL_MspDeInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_MspInit||, CODE, READONLY, ALIGN=1

HAL_MspInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_ResumeTick||, CODE, READONLY, ALIGN=1

HAL_ResumeTick PROC
        MOV      r0,#0xe000e000
        LDR      r1,[r0,#0x10]
        ORR      r1,r1,#2
        STR      r1,[r0,#0x10]
        BX       lr
        ENDP


        AREA ||i.HAL_SuspendTick||, CODE, READONLY, ALIGN=1

HAL_SuspendTick PROC
        MOV      r0,#0xe000e000
        LDR      r1,[r0,#0x10]
        BIC      r1,r1,#2
        STR      r1,[r0,#0x10]
        BX       lr
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

uwTick
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_stm32f7xx_hal_c_HAL_Init____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___15_stm32f7xx_hal_c_HAL_Init____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_stm32f7xx_hal_c_HAL_Init____REVSH|
#line 402
|__asm___15_stm32f7xx_hal_c_HAL_Init____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_stm32f7xx_hal_c_HAL_Init____RRX|
#line 587
|__asm___15_stm32f7xx_hal_c_HAL_Init____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_DBGMCU_DisableDBGSleepMode [CODE]
        EXPORT HAL_DBGMCU_DisableDBGStandbyMode [CODE]
        EXPORT HAL_DBGMCU_DisableDBGStopMode [CODE]
        EXPORT HAL_DBGMCU_EnableDBGSleepMode [CODE]
        EXPORT HAL_DBGMCU_EnableDBGStandbyMode [CODE]
        EXPORT HAL_DBGMCU_EnableDBGStopMode [CODE]
        EXPORT HAL_DeInit [CODE]
        EXPORT HAL_Delay [CODE,WEAK]
        EXPORT HAL_DisableCompensationCell [CODE]
        EXPORT HAL_DisableFMCMemorySwapping [CODE]
        EXPORT HAL_EnableCompensationCell [CODE]
        EXPORT HAL_EnableFMCMemorySwapping [CODE]
        EXPORT HAL_GetDEVID [CODE]
        EXPORT HAL_GetHalVersion [CODE]
        EXPORT HAL_GetREVID [CODE]
        EXPORT HAL_GetTick [CODE,WEAK]
        EXPORT HAL_IncTick [CODE,WEAK]
        EXPORT HAL_Init [CODE]
        EXPORT HAL_InitTick [CODE,WEAK]
        EXPORT HAL_MspDeInit [CODE,WEAK]
        EXPORT HAL_MspInit [CODE,WEAK]
        EXPORT HAL_ResumeTick [CODE,WEAK]
        EXPORT HAL_SuspendTick [CODE,WEAK]
        EXPORT uwTick [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_SYSTICK_Config [CODE]
        IMPORT HAL_NVIC_SetPriority [CODE]
        IMPORT SystemCoreClock [DATA]
        IMPORT HAL_NVIC_SetPriorityGrouping [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
