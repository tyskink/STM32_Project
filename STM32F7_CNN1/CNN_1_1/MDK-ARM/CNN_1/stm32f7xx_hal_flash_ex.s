; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\stm32f7xx_hal_flash_ex.o --depend=cnn_1\stm32f7xx_hal_flash_ex.d --cpu=Cortex-M7 --fpu=SoftVFP --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\stm32f7xx_hal_flash_ex.crf ../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash_ex.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.FLASH_Erase_Sector||, CODE, READONLY, ALIGN=2

FLASH_Erase_Sector PROC
        MOV      r2,#0
        PUSH     {r4,lr}
        CBZ      r1,|L1.20|
        CMP      r1,#1
        BEQ      |L1.80|
        CMP      r1,#2
        BEQ      |L1.86|
        MOV      r2,#0x300
|L1.20|
        LDR      r1,|L1.92|
        MOVS     r4,#0x78
        LDR      r3,[r1,#0]
        RBIT     r4,r4
        BIC      r3,r3,#0x300
        STR      r3,[r1,#0]
        LDR      r3,[r1,#0]
        CLZ      r4,r4
        LSLS     r0,r0,r4
        ORRS     r3,r3,r2
        STR      r3,[r1,#0]
        ORR      r0,r0,#2
        LDR      r2,[r1,#0]
        BIC      r2,r2,#0xf8
        STR      r2,[r1,#0]
        LDR      r2,[r1,#0]
        ORRS     r2,r2,r0
        STR      r2,[r1,#0]
        LDR      r0,[r1,#0]
        ORR      r0,r0,#0x10000
        STR      r0,[r1,#0]
        DSB      
        POP      {r4,pc}
|L1.80|
        MOV      r2,#0x100
        B        |L1.20|
|L1.86|
        MOV      r2,#0x200
        B        |L1.20|
        ENDP

|L1.92|
        DCD      0x40023c10

        AREA ||i.FLASH_MassErase||, CODE, READONLY, ALIGN=2

FLASH_MassErase PROC
        LDR      r1,|L2.40|
        MOV      r3,#0x10000
        LDR      r2,[r1,#0]
        ORR      r3,r3,r0,LSL #8
        BIC      r0,r2,#0x300
        STR      r0,[r1,#0]
        LDR      r0,[r1,#0]
        ORR      r0,r0,#4
        STR      r0,[r1,#0]
        LDR      r0,[r1,#0]
        ORRS     r0,r0,r3
        STR      r0,[r1,#0]
        DSB      
        BX       lr
        ENDP

        DCW      0x0000
|L2.40|
        DCD      0x40023c10

        AREA ||i.FLASH_OB_BootAddressConfig||, CODE, READONLY, ALIGN=2

FLASH_OB_BootAddressConfig PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r1
        MOV      r5,r0
        MOV      r0,#0xc350
        BL       FLASH_WaitForLastOperation
        CMP      r0,#0
        BNE      |L3.32|
        LDR      r2,|L3.44|
        CMP      r5,#0x10
        LDR      r1,[r2,#0]
        BEQ      |L3.34|
        BFI      r1,r4,#16,#16
|L3.30|
        STR      r1,[r2,#0]
|L3.32|
        POP      {r4-r6,pc}
|L3.34|
        BFC      r1,#0,#16
        ORRS     r1,r1,r4
        B        |L3.30|
        ENDP

        DCW      0x0000
|L3.44|
        DCD      0x40023c18

        AREA ||i.FLASH_OB_GetBootAddress||, CODE, READONLY, ALIGN=2

FLASH_OB_GetBootAddress PROC
        CMP      r0,#0x10
        LDR      r0,|L4.16|
        LDR      r0,[r0,#0]
        BEQ      |L4.12|
        LSRS     r0,r0,#16
        BX       lr
|L4.12|
        UXTH     r0,r0
        BX       lr
        ENDP

|L4.16|
        DCD      0x40023c18

        AREA ||i.HAL_FLASHEx_Erase||, CODE, READONLY, ALIGN=2

HAL_FLASHEx_Erase PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        LDR      r0,|L5.132|
        MOV      r7,r1
        LDRB     r1,[r0,#0x14]  ; pFlash
        CMP      r1,#1
        BEQ      |L5.36|
        MOVS     r1,#1
        MOV      r9,#0xc350
        MOV      r8,r0
        STRB     r1,[r0,#0x14]
        MOV      r0,r9
        BL       FLASH_WaitForLastOperation
        CBZ      r0,|L5.42|
        B        |L5.122|
|L5.36|
        MOVS     r0,#2
|L5.38|
        POP      {r4-r10,pc}
|L5.42|
        MOV      r1,#0xffffffff
        STR      r1,[r7,#0]
        LDR      r1,[r4,#0]
        LDR      r5,|L5.136|
        CMP      r1,#1
        BEQ      |L5.60|
        LDR      r6,[r4,#4]
        B        |L5.112|
|L5.60|
        LDRB     r0,[r4,#0xc]
        BL       FLASH_MassErase
        MOV      r0,r9
        BL       FLASH_WaitForLastOperation
        LDR      r1,[r5,#0]
        BIC      r1,r1,#4
        STR      r1,[r5,#0]
        B        |L5.122|
|L5.82|
        LDRB     r1,[r4,#0xc]
        MOV      r0,r6
        BL       FLASH_Erase_Sector
        MOV      r0,r9
        BL       FLASH_WaitForLastOperation
        LDR      r1,[r5,#0]
        BIC      r1,r1,#0x7a
        STR      r1,[r5,#0]
        CBZ      r0,|L5.110|
        STR      r6,[r7,#0]
        B        |L5.122|
|L5.110|
        ADDS     r6,r6,#1
|L5.112|
        LDRD     r2,r1,[r4,#4]
        ADD      r1,r1,r2
        CMP      r1,r6
        BHI      |L5.82|
|L5.122|
        MOVS     r2,#0
        STRB     r2,[r8,#0x14]
        B        |L5.38|
        ENDP

        DCW      0x0000
|L5.132|
        DCD      pFlash
|L5.136|
        DCD      0x40023c10

        AREA ||i.HAL_FLASHEx_Erase_IT||, CODE, READONLY, ALIGN=2

HAL_FLASHEx_Erase_IT PROC
        LDR      r1,|L6.92|
        PUSH     {r4-r8,lr}
        LDRB     r2,[r1,#0x14]  ; pFlash
        MOVS     r4,#0
        CMP      r2,#1
        BEQ      |L6.76|
        LDR      r2,|L6.96|
        MOVS     r3,#1
        STRB     r3,[r1,#0x14]
        LDR      r5,[r2,#0]
        ORR      r5,r5,#0x1000000
        STR      r5,[r2,#0]
        LDR      r5,[r2,#0]
        MOVS     r6,#0xf3
        SUBS     r7,r2,#4
        ORR      r5,r5,#0x2000000
        STR      r5,[r2,#0]
        STR      r6,[r7,#0]
        LDR      r2,[r0,#0]
        CMP      r2,#1
        BEQ      |L6.80|
        STRB     r3,[r1,#0]
        LDR      r2,[r0,#8]
        STR      r2,[r1,#4]  ; pFlash
        LDR      r2,[r0,#4]
        STR      r2,[r1,#0xc]  ; pFlash
        LDRB     r2,[r0,#0xc]
        STRB     r2,[r1,#8]
        LDRB     r1,[r0,#0xc]
        LDR      r0,[r0,#4]
        BL       FLASH_Erase_Sector
|L6.70|
        MOV      r0,r4
|L6.72|
        POP      {r4-r8,pc}
|L6.76|
        MOVS     r0,#2
        B        |L6.72|
|L6.80|
        MOVS     r2,#2
        STRB     r2,[r1,#0]
        LDRB     r0,[r0,#0xc]
        BL       FLASH_MassErase
        B        |L6.70|
        ENDP

|L6.92|
        DCD      pFlash
|L6.96|
        DCD      0x40023c10

        AREA ||i.HAL_FLASHEx_OBGetConfig||, CODE, READONLY, ALIGN=2

HAL_FLASHEx_OBGetConfig PROC
        PUSH     {r4,lr}
        LDR      r1,|L7.72|
        MOV      r4,r0
        MOVS     r0,#0x3f
        STR      r0,[r4,#0]
        LDR      r0,[r1,#0]
        ADDS     r2,r1,#1
        AND      r0,r0,#0xff0000
        STR      r0,[r4,#8]
        LDRB     r3,[r2,#0]
        MOVS     r0,#0xaa
        CMP      r3,#0xaa
        BEQ      |L7.36|
        LDRB     r0,[r2,#0]
        CMP      r0,#0xcc
        BEQ      |L7.36|
        MOVS     r0,#0x55
|L7.36|
        STR      r0,[r4,#0xc]
        LDR      r2,|L7.76|
        LDR      r0,[r1,#0]
        ANDS     r0,r0,r2
        STR      r0,[r4,#0x14]
        LDR      r0,[r1,#0]
        AND      r0,r0,#0xc
        STR      r0,[r4,#0x10]
        MOVS     r0,#0x10
        BL       FLASH_OB_GetBootAddress
        STR      r0,[r4,#0x18]
        MOVS     r0,#0x20
        BL       FLASH_OB_GetBootAddress
        STR      r0,[r4,#0x1c]
        POP      {r4,pc}
        ENDP

|L7.72|
        DCD      0x40023c14
|L7.76|
        DCD      0xc00000f0

        AREA ||i.HAL_FLASHEx_OBProgram||, CODE, READONLY, ALIGN=2

HAL_FLASHEx_OBProgram PROC
        PUSH     {r4-r12,lr}
        LDR      r1,|L8.224|
        MOV      r4,r0
        MOVS     r0,#1
        LDRB     r2,[r1,#0x14]  ; pFlash
        CMP      r2,#1
        BEQ      |L8.48|
        MOVS     r2,#1
        STRB     r2,[r1,#0x14]
        LDRB     r1,[r4,#0]
        LDR      r5,|L8.228|
        LSLS     r1,r1,#31
        BEQ      |L8.72|
        LDR      r0,[r4,#4]
        LDR      r6,[r4,#8]
        CMP      r0,#1
        MOV      r0,#0xc350
        BEQ      |L8.54|
        BL       FLASH_WaitForLastOperation
        CBZ      r0,|L8.66|
        B        |L8.72|
|L8.48|
        MOVS     r0,#2
|L8.50|
        POP      {r4-r12,pc}
|L8.54|
        BL       FLASH_WaitForLastOperation
        CBNZ     r0,|L8.72|
        LDR      r1,[r5,#0]
        BICS     r1,r1,r6
        B        |L8.70|
|L8.66|
        LDR      r1,[r5,#0]
        ORRS     r1,r1,r6
|L8.70|
        STR      r1,[r5,#0]
|L8.72|
        LDRB     r1,[r4,#0]
        LSLS     r1,r1,#30
        BPL      |L8.96|
        LDRB     r6,[r4,#0xc]
        MOV      r0,#0xc350
        BL       FLASH_WaitForLastOperation
        CBNZ     r0,|L8.96|
        LDR      r1,|L8.228|
        ADDS     r1,r1,#1
        STRB     r6,[r1,#0]
|L8.96|
        LDRB     r1,[r4,#0]
        LSLS     r1,r1,#29
        BPL      |L8.166|
        LDR      r0,[r4,#0x14]
        AND      r11,r0,#0x10
        AND      r6,r0,#0x20
        AND      r10,r0,#0x40
        AND      r9,r0,#0x80
        AND      r8,r0,#0x80000000
        AND      r7,r0,#0x40000000
        MOV      r0,#0xc350
        BL       FLASH_WaitForLastOperation
        CBNZ     r0,|L8.166|
        LDR      r1,[r5,#0]
        ORR      r6,r6,r11
        ORR      r6,r6,r10
        LDR      r2,|L8.232|
        ORR      r6,r6,r9
        ORR      r6,r6,r8
        BICS     r1,r1,r2
        ORRS     r6,r6,r7
        ORRS     r1,r1,r6
        STR      r1,[r5,#0]
|L8.166|
        LDRB     r1,[r4,#0]
        MOVS     r6,#0
        LSLS     r1,r1,#28
        BPL      |L8.188|
        LDRB     r1,[r4,#0x10]
        MOV      r0,r6
        LDR      r2,[r5,#0]
        BIC      r2,r2,#0xc
        ORRS     r2,r2,r1
        STR      r2,[r5,#0]
|L8.188|
        LDRB     r1,[r4,#0]
        LSLS     r1,r1,#27
        BPL      |L8.202|
        LDR      r1,[r4,#0x18]
        MOVS     r0,#0x10
        BL       FLASH_OB_BootAddressConfig
|L8.202|
        LDRB     r1,[r4,#0]
        LSLS     r1,r1,#26
        BPL      |L8.216|
        LDR      r1,[r4,#0x1c]
        MOVS     r0,#0x20
        BL       FLASH_OB_BootAddressConfig
|L8.216|
        LDR      r1,|L8.224|
        STRB     r6,[r1,#0x14]
        B        |L8.50|
        ENDP

        DCW      0x0000
|L8.224|
        DCD      pFlash
|L8.228|
        DCD      0x40023c14
|L8.232|
        DCD      0xc00000f0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash_ex.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___24_stm32f7xx_hal_flash_ex_c_6648b60e____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___24_stm32f7xx_hal_flash_ex_c_6648b60e____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___24_stm32f7xx_hal_flash_ex_c_6648b60e____REVSH|
#line 402
|__asm___24_stm32f7xx_hal_flash_ex_c_6648b60e____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___24_stm32f7xx_hal_flash_ex_c_6648b60e____RRX|
#line 587
|__asm___24_stm32f7xx_hal_flash_ex_c_6648b60e____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT FLASH_Erase_Sector [CODE]
        EXPORT HAL_FLASHEx_Erase [CODE]
        EXPORT HAL_FLASHEx_Erase_IT [CODE]
        EXPORT HAL_FLASHEx_OBGetConfig [CODE]
        EXPORT HAL_FLASHEx_OBProgram [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT FLASH_WaitForLastOperation [CODE]
        IMPORT pFlash [DATA]

        KEEP FLASH_MassErase
        KEEP FLASH_OB_BootAddressConfig
        KEEP FLASH_OB_GetBootAddress

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
