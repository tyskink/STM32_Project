; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\stm32f7xx_hal_dma.o --depend=cnn_1\stm32f7xx_hal_dma.d --cpu=Cortex-M7.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\stm32f7xx_hal_dma.crf ../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.DMA_CalcBaseAndBitshift||, CODE, READONLY, ALIGN=2

DMA_CalcBaseAndBitshift PROC
        MOV      r1,r0
        LDRB     r0,[r1,#0]
        SUBS     r0,r0,#0x10
        MOVS     r3,#0x18
        UDIV     r2,r0,r3
        LDR      r0,|L1.48|
        LDRB     r0,[r0,r2]
        STR      r0,[r1,#0x5c]
        CMP      r2,#3
        BLS      |L1.34|
        LDR      r0,[r1,#0]
        BFC      r0,#0,#10
        ADDS     r0,r0,#4
        STR      r0,[r1,#0x58]
        B        |L1.42|
|L1.34|
        LDR      r0,[r1,#0]
        BFC      r0,#0,#10
        STR      r0,[r1,#0x58]
|L1.42|
        LDR      r0,[r1,#0x58]
        BX       lr
        ENDP

        DCW      0x0000
|L1.48|
        DCD      flagBitshiftOffset

        AREA ||i.DMA_CheckFifoParam||, CODE, READONLY, ALIGN=1

DMA_CheckFifoParam PROC
        MOV      r1,r0
        MOVS     r0,#0
        LDR      r2,[r1,#0x28]
        LDR      r3,[r1,#0x18]
        CBNZ     r3,|L2.62|
        CBZ      r2,|L2.26|
        CMP      r2,#1
        BEQ      |L2.44|
        CMP      r2,#2
        BEQ      |L2.28|
        CMP      r2,#3
        BNE      |L2.58|
        B        |L2.56|
|L2.26|
        NOP      
|L2.28|
        LDR      r3,[r1,#0x2c]
        AND      r3,r3,#0x1000000
        CMP      r3,#0x1000000
        BNE      |L2.42|
        MOVS     r0,#1
|L2.42|
        B        |L2.60|
|L2.44|
        LDR      r3,[r1,#0x2c]
        CMP      r3,#0x1800000
        BNE      |L2.54|
        MOVS     r0,#1
|L2.54|
        B        |L2.60|
|L2.56|
        B        |L2.60|
|L2.58|
        NOP      
|L2.60|
        B        |L2.168|
|L2.62|
        LDR      r3,[r1,#0x18]
        CMP      r3,#0x2000
        BNE      |L2.124|
        CBZ      r2,|L2.86|
        CMP      r2,#1
        BEQ      |L2.92|
        CMP      r2,#2
        BEQ      |L2.88|
        CMP      r2,#3
        BNE      |L2.120|
        B        |L2.108|
|L2.86|
        NOP      
|L2.88|
        MOVS     r0,#1
        B        |L2.122|
|L2.92|
        LDR      r3,[r1,#0x2c]
        AND      r3,r3,#0x1000000
        CMP      r3,#0x1000000
        BNE      |L2.106|
        MOVS     r0,#1
|L2.106|
        B        |L2.122|
|L2.108|
        LDR      r3,[r1,#0x2c]
        CMP      r3,#0x1800000
        BNE      |L2.118|
        MOVS     r0,#1
|L2.118|
        B        |L2.122|
|L2.120|
        NOP      
|L2.122|
        B        |L2.168|
|L2.124|
        CBZ      r2,|L2.140|
        CMP      r2,#1
        BEQ      |L2.142|
        CMP      r2,#2
        BEQ      |L2.144|
        CMP      r2,#3
        BNE      |L2.164|
        B        |L2.148|
|L2.140|
        NOP      
|L2.142|
        NOP      
|L2.144|
        MOVS     r0,#1
        B        |L2.166|
|L2.148|
        LDR      r3,[r1,#0x2c]
        AND      r3,r3,#0x1000000
        CMP      r3,#0x1000000
        BNE      |L2.162|
        MOVS     r0,#1
|L2.162|
        B        |L2.166|
|L2.164|
        NOP      
|L2.166|
        NOP      
|L2.168|
        BX       lr
        ENDP


        AREA ||i.DMA_SetConfig||, CODE, READONLY, ALIGN=1

DMA_SetConfig PROC
        PUSH     {r4,r5,lr}
        LDR      r4,[r0,#0]
        LDR      r4,[r4,#0]
        BIC      r4,r4,#0x40000
        LDR      r5,[r0,#0]
        STR      r4,[r5,#0]
        LDR      r4,[r0,#0]
        STR      r3,[r4,#4]
        LDR      r4,[r0,#8]
        CMP      r4,#0x40
        BNE      |L3.34|
        LDR      r4,[r0,#0]
        STR      r2,[r4,#8]
        LDR      r4,[r0,#0]
        STR      r1,[r4,#0xc]
        B        |L3.42|
|L3.34|
        LDR      r4,[r0,#0]
        STR      r1,[r4,#8]
        LDR      r4,[r0,#0]
        STR      r2,[r4,#0xc]
|L3.42|
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.HAL_DMA_Abort||, CODE, READONLY, ALIGN=1

HAL_DMA_Abort PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x58]
        BL       HAL_GetTick
        MOV      r6,r0
        LDRB     r0,[r4,#0x35]
        CMP      r0,#2
        BEQ      |L4.38|
        MOVS     r0,#0x80
        STR      r0,[r4,#0x54]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#1
|L4.36|
        POP      {r4-r6,pc}
|L4.38|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x16
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x14]
        BIC      r0,r0,#0x80
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x14]
        LDR      r0,[r4,#0x40]
        CBNZ     r0,|L4.70|
        LDR      r0,[r4,#0x48]
        CBZ      r0,|L4.82|
|L4.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
|L4.82|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L4.128|
|L4.96|
        BL       HAL_GetTick
        SUBS     r0,r0,r6
        CMP      r0,#5
        BLS      |L4.128|
        MOVS     r0,#0x20
        STR      r0,[r4,#0x54]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#3
        STRB     r0,[r4,#0x35]
        B        |L4.36|
|L4.128|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#1
        CMP      r0,#0
        BNE      |L4.96|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x3f
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#1
        STRB     r0,[r4,#0x35]
        MOVS     r0,#0
        B        |L4.36|
        ENDP


        AREA ||i.HAL_DMA_Abort_IT||, CODE, READONLY, ALIGN=1

HAL_DMA_Abort_IT PROC
        MOV      r1,r0
        LDRB     r0,[r1,#0x35]
        CMP      r0,#2
        BEQ      |L5.18|
        MOVS     r0,#0x80
        STR      r0,[r1,#0x54]
        MOVS     r0,#1
|L5.16|
        BX       lr
|L5.18|
        MOVS     r0,#5
        STRB     r0,[r1,#0x35]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        MOVS     r0,#0
        B        |L5.16|
        ENDP


        AREA ||i.HAL_DMA_DeInit||, CODE, READONLY, ALIGN=1

HAL_DMA_DeInit PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        CBNZ     r4,|L6.10|
        MOVS     r0,#1
|L6.8|
        POP      {r4-r6,pc}
|L6.10|
        LDRB     r0,[r4,#0x35]
        CMP      r0,#2
        BNE      |L6.20|
        B        |L6.8|
|L6.20|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x10]
        MOVS     r0,#0x21
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x14]
        MOV      r0,r4
        BL       DMA_CalcBaseAndBitshift
        MOV      r5,r0
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x3f
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        MOVS     r0,#0
        STR      r0,[r4,#0x54]
        STRB     r0,[r4,#0x35]
        NOP      
        STRB     r0,[r4,#0x34]
        NOP      
        NOP      
        B        |L6.8|
        ENDP


        AREA ||i.HAL_DMA_GetError||, CODE, READONLY, ALIGN=1

HAL_DMA_GetError PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x54]
        BX       lr
        ENDP


        AREA ||i.HAL_DMA_GetState||, CODE, READONLY, ALIGN=1

HAL_DMA_GetState PROC
        MOV      r1,r0
        LDRB     r0,[r1,#0x35]
        BX       lr
        ENDP


        AREA ||i.HAL_DMA_IRQHandler||, CODE, READONLY, ALIGN=2

HAL_DMA_IRQHandler PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDR      r0,|L9.576|
        LDR      r0,[r0,#0]  ; SystemCoreClock
        MOV      r1,#0x2580
        UDIV     r7,r0,r1
        LDR      r5,[r4,#0x58]
        LDR      r6,[r5,#0]
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#8
        LSLS     r0,r0,r1
        ANDS     r0,r0,r6
        CBZ      r0,|L9.76|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#4
        CBZ      r0,|L9.76|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#4
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#8
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        LDR      r0,[r4,#0x54]
        ORR      r0,r0,#1
        STR      r0,[r4,#0x54]
|L9.76|
        LDRB     r1,[r4,#0x5c]
        LDR      r0,|L9.580|
        LSLS     r0,r0,r1
        ANDS     r0,r0,r6
        CBZ      r0,|L9.116|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x14]
        AND      r0,r0,#0x80
        CBZ      r0,|L9.116|
        LDRB     r1,[r4,#0x5c]
        LDR      r0,|L9.580|
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        LDR      r0,[r4,#0x54]
        ORR      r0,r0,#2
        STR      r0,[r4,#0x54]
|L9.116|
        LDRB     r1,[r4,#0x5c]
        LDR      r0,|L9.580|
        ADDS     r0,r0,#3
        LSLS     r0,r0,r1
        ANDS     r0,r0,r6
        CBZ      r0,|L9.160|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#2
        CBZ      r0,|L9.160|
        LDRB     r1,[r4,#0x5c]
        LDR      r0,|L9.580|
        ADDS     r0,r0,#3
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        LDR      r0,[r4,#0x54]
        ORR      r0,r0,#4
        STR      r0,[r4,#0x54]
|L9.160|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x10
        LSLS     r0,r0,r1
        ANDS     r0,r0,r6
        CBZ      r0,|L9.268|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#8
        CBZ      r0,|L9.268|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x10
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x40000
        CBZ      r0,|L9.236|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x80000
        CBNZ     r0,|L9.224|
        LDR      r0,[r4,#0x40]
        CBZ      r0,|L9.268|
        MOV      r0,r4
        LDR      r1,[r4,#0x40]
        BLX      r1
        B        |L9.268|
|L9.224|
        LDR      r0,[r4,#0x48]
        CBZ      r0,|L9.268|
        MOV      r0,r4
        LDR      r1,[r4,#0x48]
        BLX      r1
        B        |L9.268|
|L9.236|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x100
        CBNZ     r0,|L9.258|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
|L9.258|
        LDR      r0,[r4,#0x40]
        CBZ      r0,|L9.268|
        MOV      r0,r4
        LDR      r1,[r4,#0x40]
        BLX      r1
|L9.268|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x20
        LSLS     r0,r0,r1
        ANDS     r0,r0,r6
        CMP      r0,#0
        BEQ      |L9.486|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x10
        CMP      r0,#0
        BEQ      |L9.486|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x20
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        LDRB     r0,[r4,#0x35]
        CMP      r0,#5
        BNE      |L9.394|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x16
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x14]
        BIC      r0,r0,#0x80
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x14]
        LDR      r0,[r4,#0x40]
        CBNZ     r0,|L9.344|
        LDR      r0,[r4,#0x48]
        CBZ      r0,|L9.356|
|L9.344|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
|L9.356|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x3f
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#1
        STRB     r0,[r4,#0x35]
        LDR      r0,[r4,#0x50]
        CBZ      r0,|L9.392|
        MOV      r0,r4
        LDR      r1,[r4,#0x50]
        BLX      r1
|L9.392|
        POP      {r3-r7,pc}
|L9.394|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x40000
        CBZ      r0,|L9.438|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x80000
        CBNZ     r0,|L9.426|
        LDR      r0,[r4,#0x44]
        CBZ      r0,|L9.424|
        MOV      r0,r4
        LDR      r1,[r4,#0x44]
        BLX      r1
|L9.424|
        B        |L9.486|
|L9.426|
        LDR      r0,[r4,#0x3c]
        CBZ      r0,|L9.486|
        MOV      r0,r4
        LDR      r1,[r4,#0x3c]
        BLX      r1
        B        |L9.486|
|L9.438|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x100
        CBNZ     r0,|L9.476|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x10
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#1
        STRB     r0,[r4,#0x35]
|L9.476|
        LDR      r0,[r4,#0x3c]
        CBZ      r0,|L9.486|
        MOV      r0,r4
        LDR      r1,[r4,#0x3c]
        BLX      r1
|L9.486|
        LDR      r0,[r4,#0x54]
        CBZ      r0,|L9.570|
        LDR      r0,[r4,#0x54]
        AND      r0,r0,#1
        CBZ      r0,|L9.560|
        MOVS     r0,#5
        STRB     r0,[r4,#0x35]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        NOP      
|L9.518|
        LDR      r0,[sp,#0]
        ADDS     r0,r0,#1
        STR      r0,[sp,#0]
        CMP      r0,r7
        BLS      |L9.530|
        B        |L9.542|
|L9.530|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#1
        CMP      r0,#0
        BNE      |L9.518|
|L9.542|
        NOP      
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#1
        STRB     r0,[r4,#0x35]
|L9.560|
        LDR      r0,[r4,#0x4c]
        CBZ      r0,|L9.570|
        MOV      r0,r4
        LDR      r1,[r4,#0x4c]
        BLX      r1
|L9.570|
        NOP      
        B        |L9.392|
        ENDP

        DCW      0x0000
|L9.576|
        DCD      SystemCoreClock
|L9.580|
        DCD      0x00800001

        AREA ||i.HAL_DMA_Init||, CODE, READONLY, ALIGN=2

HAL_DMA_Init PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOVS     r5,#0
        BL       HAL_GetTick
        MOV      r7,r0
        CBNZ     r4,|L10.22|
        MOVS     r0,#1
|L10.18|
        POP      {r4-r8,pc}
|L10.22|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L10.28|
        NOP      
|L10.28|
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#2
        STRB     r0,[r4,#0x35]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L10.80|
|L10.58|
        BL       HAL_GetTick
        SUBS     r0,r0,r7
        CMP      r0,#5
        BLS      |L10.80|
        MOVS     r0,#0x20
        STR      r0,[r4,#0x54]
        MOVS     r0,#3
        STRB     r0,[r4,#0x35]
        B        |L10.18|
|L10.80|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#1
        CMP      r0,#0
        BNE      |L10.58|
        LDR      r0,[r4,#0]
        LDR      r5,[r0,#0]
        LDR      r0,|L10.232|
        ANDS     r5,r5,r0
        LDRD     r0,r1,[r4,#4]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0xc]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x10]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x14]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x18]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x1c]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x20]
        ORRS     r0,r0,r1
        ORRS     r5,r5,r0
        LDR      r0,[r4,#0x24]
        CMP      r0,#4
        BNE      |L10.146|
        LDRD     r0,r1,[r4,#0x2c]
        ORRS     r0,r0,r1
        ORRS     r5,r5,r0
|L10.146|
        LDR      r0,[r4,#0]
        STR      r5,[r0,#0]
        LDR      r0,[r4,#0]
        LDR      r5,[r0,#0x14]
        BIC      r5,r5,#7
        LDR      r0,[r4,#0x24]
        ORRS     r5,r5,r0
        LDR      r0,[r4,#0x24]
        CMP      r0,#4
        BNE      |L10.196|
        LDR      r0,[r4,#0x28]
        ORRS     r5,r5,r0
        LDR      r0,[r4,#0x2c]
        CBZ      r0,|L10.196|
        MOV      r0,r4
        BL       DMA_CheckFifoParam
        CBZ      r0,|L10.196|
        MOVS     r0,#0x40
        STR      r0,[r4,#0x54]
        MOVS     r0,#1
        STRB     r0,[r4,#0x35]
        B        |L10.18|
|L10.196|
        LDR      r0,[r4,#0]
        STR      r5,[r0,#0x14]
        MOV      r0,r4
        BL       DMA_CalcBaseAndBitshift
        MOV      r6,r0
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x3f
        LSLS     r0,r0,r1
        STR      r0,[r6,#8]
        MOVS     r0,#0
        STR      r0,[r4,#0x54]
        MOVS     r0,#1
        STRB     r0,[r4,#0x35]
        MOVS     r0,#0
        B        |L10.18|
        ENDP

|L10.232|
        DCD      0xf010803f

        AREA ||i.HAL_DMA_PollForTransfer||, CODE, READONLY, ALIGN=2

HAL_DMA_PollForTransfer PROC
        PUSH     {r4-r12,lr}
        MOV      r4,r0
        MOV      r8,r1
        MOV      r7,r2
        MOV      r10,#0
        BL       HAL_GetTick
        MOV      r11,r0
        LDRB     r0,[r4,#0x35]
        CMP      r0,#2
        BEQ      |L11.48|
        MOVS     r0,#0x80
        STR      r0,[r4,#0x54]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#1
|L11.44|
        POP      {r4-r12,pc}
|L11.48|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x100
        CBZ      r0,|L11.68|
        MOV      r0,#0x100
        STR      r0,[r4,#0x54]
        MOVS     r0,#1
        B        |L11.44|
|L11.68|
        CMP      r8,#0
        BNE      |L11.86|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x20
        LSL      r9,r0,r1
        B        |L11.96|
|L11.86|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x10
        LSL      r9,r0,r1
|L11.96|
        LDR      r5,[r4,#0x58]
        LDR      r6,[r5,#0]
        B        |L11.240|
|L11.102|
        ADDS     r0,r7,#1
        CBZ      r0,|L11.144|
        CBZ      r7,|L11.120|
        BL       HAL_GetTick
        SUB      r0,r0,r11
        CMP      r0,r7
        BLS      |L11.144|
|L11.120|
        MOVS     r0,#0x20
        STR      r0,[r4,#0x54]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#1
        STRB     r0,[r4,#0x35]
        MOVS     r0,#3
        B        |L11.44|
|L11.144|
        LDR      r6,[r5,#0]
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#8
        LSLS     r0,r0,r1
        ANDS     r0,r0,r6
        CBZ      r0,|L11.176|
        LDR      r0,[r4,#0x54]
        ORR      r0,r0,#1
        STR      r0,[r4,#0x54]
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#8
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
|L11.176|
        LDRB     r1,[r4,#0x5c]
        LDR      r0,|L11.352|
        LSLS     r0,r0,r1
        ANDS     r0,r0,r6
        CBZ      r0,|L11.206|
        LDR      r0,[r4,#0x54]
        ORR      r0,r0,#2
        STR      r0,[r4,#0x54]
        LDRB     r1,[r4,#0x5c]
        LDR      r0,|L11.352|
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
|L11.206|
        LDRB     r1,[r4,#0x5c]
        LDR      r0,|L11.352|
        ADDS     r0,r0,#3
        LSLS     r0,r0,r1
        ANDS     r0,r0,r6
        CBZ      r0,|L11.240|
        LDR      r0,[r4,#0x54]
        ORR      r0,r0,#4
        STR      r0,[r4,#0x54]
        LDRB     r1,[r4,#0x5c]
        LDR      r0,|L11.352|
        ADDS     r0,r0,#3
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
|L11.240|
        AND      r0,r6,r9
        CBNZ     r0,|L11.256|
        LDR      r0,[r4,#0x54]
        AND      r0,r0,#1
        CMP      r0,#0
        BEQ      |L11.102|
|L11.256|
        LDR      r0,[r4,#0x54]
        CBZ      r0,|L11.302|
        LDR      r0,[r4,#0x54]
        AND      r0,r0,#1
        CBZ      r0,|L11.302|
        MOV      r0,r4
        BL       HAL_DMA_Abort
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x30
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#1
        STRB     r0,[r4,#0x35]
        B        |L11.44|
|L11.302|
        CMP      r8,#0
        BNE      |L11.336|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x30
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOVS     r0,#1
        STRB     r0,[r4,#0x35]
        B        |L11.346|
|L11.336|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x10
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
|L11.346|
        MOV      r0,r10
        B        |L11.44|
        ENDP

        DCW      0x0000
|L11.352|
        DCD      0x00800001

        AREA ||i.HAL_DMA_RegisterCallback||, CODE, READONLY, ALIGN=1

HAL_DMA_RegisterCallback PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        MOVS     r4,#0
        NOP      
        LDRB     r0,[r3,#0x34]
        CMP      r0,#1
        BNE      |L12.20|
        MOVS     r0,#2
|L12.18|
        POP      {r4,pc}
|L12.20|
        MOVS     r0,#1
        STRB     r0,[r3,#0x34]
        NOP      
        LDRB     r0,[r3,#0x35]
        CMP      r0,#1
        BNE      |L12.78|
        CMP      r1,#6
        BCS      |L12.74|
        TBB      [pc,r1]
        DCB      0x03,0x05,0x07,0x09
        DCB      0x0b,0x0d
        STR      r2,[r3,#0x3c]
        B        |L12.76|
        STR      r2,[r3,#0x40]
        B        |L12.76|
        STR      r2,[r3,#0x44]
        B        |L12.76|
        STR      r2,[r3,#0x48]
        B        |L12.76|
        STR      r2,[r3,#0x4c]
        B        |L12.76|
        STR      r2,[r3,#0x50]
        B        |L12.76|
|L12.74|
        NOP      
|L12.76|
        B        |L12.80|
|L12.78|
        MOVS     r4,#1
|L12.80|
        NOP      
        MOVS     r0,#0
        STRB     r0,[r3,#0x34]
        NOP      
        MOV      r0,r4
        B        |L12.18|
        ENDP


        AREA ||i.HAL_DMA_Start||, CODE, READONLY, ALIGN=1

HAL_DMA_Start PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOV      r8,#0
        NOP      
        LDRB     r0,[r4,#0x34]
        CMP      r0,#1
        BNE      |L13.32|
        MOVS     r0,#2
|L13.28|
        POP      {r4-r8,pc}
|L13.32|
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        NOP      
        LDRB     r0,[r4,#0x35]
        CMP      r0,#1
        BNE      |L13.84|
        MOVS     r0,#2
        STRB     r0,[r4,#0x35]
        MOVS     r0,#0
        STR      r0,[r4,#0x54]
        MOV      r3,r7
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       DMA_SetConfig
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L13.98|
|L13.84|
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOV      r8,#2
|L13.98|
        MOV      r0,r8
        B        |L13.28|
        ENDP


        AREA ||i.HAL_DMA_Start_IT||, CODE, READONLY, ALIGN=1

HAL_DMA_Start_IT PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOV      r8,#0
        LDR      r9,[r4,#0x58]
        NOP      
        LDRB     r0,[r4,#0x34]
        CMP      r0,#1
        BNE      |L14.36|
        MOVS     r0,#2
|L14.32|
        POP      {r4-r10,pc}
|L14.36|
        MOVS     r0,#1
        STRB     r0,[r4,#0x34]
        NOP      
        LDRB     r0,[r4,#0x35]
        CMP      r0,#1
        BNE      |L14.140|
        MOVS     r0,#2
        STRB     r0,[r4,#0x35]
        MOVS     r0,#0
        STR      r0,[r4,#0x54]
        MOV      r3,r7
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       DMA_SetConfig
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x3f
        LSLS     r0,r0,r1
        STR      r0,[r9,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x16
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x14]
        ORR      r0,r0,#0x80
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x14]
        LDR      r0,[r4,#0x40]
        CBZ      r0,|L14.126|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
|L14.126|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L14.154|
|L14.140|
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x34]
        NOP      
        MOV      r8,#2
|L14.154|
        MOV      r0,r8
        B        |L14.32|
        ENDP


        AREA ||i.HAL_DMA_UnRegisterCallback||, CODE, READONLY, ALIGN=1

HAL_DMA_UnRegisterCallback PROC
        MOV      r2,r0
        MOVS     r3,#0
        NOP      
        LDRB     r0,[r2,#0x34]
        CMP      r0,#1
        BNE      |L15.18|
        MOVS     r0,#2
|L15.16|
        BX       lr
|L15.18|
        MOVS     r0,#1
        STRB     r0,[r2,#0x34]
        NOP      
        LDRB     r0,[r2,#0x35]
        CMP      r0,#1
        BNE      |L15.108|
        CMP      r1,#7
        BCS      |L15.102|
        TBB      [pc,r1]
        DCB      0x04,0x07
        DCB      0x0a,0x0d,0x10,0x13
        DCB      0x16,0x00
        MOVS     r0,#0
        STR      r0,[r2,#0x3c]
        B        |L15.106|
        MOVS     r0,#0
        STR      r0,[r2,#0x40]
        B        |L15.106|
        MOVS     r0,#0
        STR      r0,[r2,#0x44]
        B        |L15.106|
        MOVS     r0,#0
        STR      r0,[r2,#0x48]
        B        |L15.106|
        MOVS     r0,#0
        STR      r0,[r2,#0x4c]
        B        |L15.106|
        MOVS     r0,#0
        STR      r0,[r2,#0x50]
        B        |L15.106|
        MOVS     r0,#0
        STR      r0,[r2,#0x3c]
        STR      r0,[r2,#0x40]
        STR      r0,[r2,#0x44]
        STR      r0,[r2,#0x48]
        STR      r0,[r2,#0x4c]
        STR      r0,[r2,#0x50]
        B        |L15.106|
|L15.102|
        MOVS     r3,#1
        NOP      
|L15.106|
        B        |L15.110|
|L15.108|
        MOVS     r3,#1
|L15.110|
        NOP      
        MOVS     r0,#0
        STRB     r0,[r2,#0x34]
        NOP      
        MOV      r0,r3
        B        |L15.16|
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=0

flagBitshiftOffset
        DCB      0x00,0x06,0x10,0x16
        DCB      0x00,0x06,0x10,0x16

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f7xx_hal_dma_c_c25f65ec____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___19_stm32f7xx_hal_dma_c_c25f65ec____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f7xx_hal_dma_c_c25f65ec____REVSH|
#line 402
|__asm___19_stm32f7xx_hal_dma_c_c25f65ec____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f7xx_hal_dma_c_c25f65ec____RRX|
#line 587
|__asm___19_stm32f7xx_hal_dma_c_c25f65ec____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_DMA_Abort [CODE]
        EXPORT HAL_DMA_Abort_IT [CODE]
        EXPORT HAL_DMA_DeInit [CODE]
        EXPORT HAL_DMA_GetError [CODE]
        EXPORT HAL_DMA_GetState [CODE]
        EXPORT HAL_DMA_IRQHandler [CODE]
        EXPORT HAL_DMA_Init [CODE]
        EXPORT HAL_DMA_PollForTransfer [CODE]
        EXPORT HAL_DMA_RegisterCallback [CODE]
        EXPORT HAL_DMA_Start [CODE]
        EXPORT HAL_DMA_Start_IT [CODE]
        EXPORT HAL_DMA_UnRegisterCallback [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GetTick [CODE]
        IMPORT SystemCoreClock [DATA]

        KEEP DMA_CalcBaseAndBitshift
        KEEP DMA_CheckFifoParam
        KEEP DMA_SetConfig
        KEEP flagBitshiftOffset

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
