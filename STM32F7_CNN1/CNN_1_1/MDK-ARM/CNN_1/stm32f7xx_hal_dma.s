; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\stm32f7xx_hal_dma.o --depend=cnn_1\stm32f7xx_hal_dma.d --cpu=Cortex-M7 --fpu=SoftVFP --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\stm32f7xx_hal_dma.crf ../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.DMA_CalcBaseAndBitshift||, CODE, READONLY, ALIGN=2

DMA_CalcBaseAndBitshift PROC
        LDR      r1,[r0,#0]
        MOVS     r3,#0x18
        UXTB     r2,r1
        SUBS     r2,r2,#0x10
        UDIV     r2,r2,r3
        LDR      r3,|L1.36|
        BFC      r1,#0,#10
        CMP      r2,#3
        LDRB     r3,[r3,r2]
        STR      r3,[r0,#0x5c]
        BLS      |L1.28|
        ADDS     r1,r1,#4
|L1.28|
        STR      r1,[r0,#0x58]
        MOV      r0,r1
        BX       lr
        ENDP

        DCW      0x0000
|L1.36|
        DCD      ||.constdata||

        AREA ||i.DMA_CheckFifoParam||, CODE, READONLY, ALIGN=1

DMA_CheckFifoParam PROC
        PUSH     {r4,lr}
        LDR      r3,[r0,#0x18]
        MOV      r4,#0x1800000
        LDR      r2,[r0,#0x28]
        MOV      r1,r0
        MOVS     r0,#0
        CBZ      r3,|L2.38|
        CMP      r3,#0x2000
        BEQ      |L2.66|
        CBZ      r2,|L2.54|
        CMP      r2,#1
        BEQ      |L2.54|
        CMP      r2,#2
        BEQ      |L2.54|
        CMP      r2,#3
        BNE      |L2.56|
        B        |L2.48|
|L2.38|
        CBZ      r2,|L2.48|
        CMP      r2,#1
        BEQ      |L2.58|
        CMP      r2,#2
        BNE      |L2.56|
|L2.48|
        LDR      r1,[r1,#0x2c]
        LSLS     r1,r1,#7
        BPL      |L2.56|
|L2.54|
        MOVS     r0,#1
|L2.56|
        POP      {r4,pc}
|L2.58|
        LDR      r1,[r1,#0x2c]
        CMP      r1,r4
        BEQ      |L2.54|
        POP      {r4,pc}
|L2.66|
        CMP      r2,#0
        BEQ      |L2.54|
        CMP      r2,#1
        BEQ      |L2.48|
        CMP      r2,#2
        BEQ      |L2.54|
        CMP      r2,#3
        BEQ      |L2.58|
        POP      {r4,pc}
        ENDP


        AREA ||i.DMA_SetConfig||, CODE, READONLY, ALIGN=1

DMA_SetConfig PROC
        PUSH     {r4,r5,lr}
        LDR      r4,[r0,#0]
        LDR      r5,[r4,#0]
        BIC      r5,r5,#0x40000
        STR      r5,[r4,#0]
        LDR      r4,[r0,#0]
        STR      r3,[r4,#4]
        LDR      r3,[r0,#8]
        CMP      r3,#0x40
        LDR      r3,[r0,#0]
        BEQ      |L3.32|
        STR      r1,[r3,#8]
        LDR      r0,[r0,#0]
        STR      r2,[r0,#0xc]
        POP      {r4,r5,pc}
|L3.32|
        STR      r2,[r3,#8]
        LDR      r0,[r0,#0]
        STR      r1,[r0,#0xc]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.HAL_DMA_Abort||, CODE, READONLY, ALIGN=1

HAL_DMA_Abort PROC
        PUSH     {r4-r8,lr}
        LDR      r7,[r0,#0x58]
        MOV      r4,r0
        BL       HAL_GetTick
        MOV      r6,r0
        LDRB     r0,[r4,#0x35]
        MOVS     r5,#0
        CMP      r0,#2
        BEQ      |L4.38|
        MOVS     r0,#0x80
        STR      r0,[r4,#0x54]
        MOVS     r0,#1
        STRB     r5,[r4,#0x34]
|L4.34|
        POP      {r4-r8,pc}
|L4.38|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#0x16
        STR      r1,[r0,#0]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0x14]
        BIC      r1,r1,#0x80
        STR      r1,[r0,#0x14]
        LDR      r0,[r4,#0x40]
        CBNZ     r0,|L4.66|
        LDR      r0,[r4,#0x48]
        CBZ      r0,|L4.76|
|L4.66|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#8
        STR      r1,[r0,#0]
|L4.76|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        B        |L4.114|
|L4.88|
        BL       HAL_GetTick
        SUBS     r0,r0,r6
        CMP      r0,#5
        BLS      |L4.114|
        MOVS     r1,#0x20
        STR      r1,[r4,#0x54]
        MOVS     r0,#3
        STRB     r5,[r4,#0x34]
        STRB     r0,[r4,#0x35]
        B        |L4.34|
|L4.114|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSLS     r0,r0,#31
        BNE      |L4.88|
        LDRB     r2,[r4,#0x5c]
        MOVS     r0,#0x3f
        MOVS     r1,#1
        LSLS     r0,r0,r2
        STR      r0,[r7,#8]
        STRB     r5,[r4,#0x34]
        STRB     r1,[r4,#0x35]
        MOVS     r0,#0
        B        |L4.34|
        ENDP


        AREA ||i.HAL_DMA_Abort_IT||, CODE, READONLY, ALIGN=1

HAL_DMA_Abort_IT PROC
        LDRB     r1,[r0,#0x35]
        CMP      r1,#2
        BEQ      |L5.16|
        MOVS     r1,#0x80
        STR      r1,[r0,#0x54]
        MOVS     r0,#1
        BX       lr
|L5.16|
        MOVS     r1,#5
        STRB     r1,[r0,#0x35]
        LDR      r0,[r0,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.HAL_DMA_DeInit||, CODE, READONLY, ALIGN=1

HAL_DMA_DeInit PROC
        PUSH     {r4-r6,lr}
        MOVS     r4,r0
        BEQ      |L6.82|
        LDRB     r0,[r4,#0x35]
        CMP      r0,#2
        BEQ      |L6.80|
        LDR      r0,[r4,#0]
        MOVS     r5,#0
        MOVS     r2,#0x21
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        LDR      r0,[r4,#0]
        STR      r5,[r0,#0]
        LDR      r0,[r4,#0]
        STR      r5,[r0,#4]
        LDR      r0,[r4,#0]
        STR      r5,[r0,#8]
        LDR      r0,[r4,#0]
        STR      r5,[r0,#0xc]
        LDR      r0,[r4,#0]
        STR      r5,[r0,#0x10]
        LDR      r0,[r4,#0]
        STR      r2,[r0,#0x14]
        MOV      r0,r4
        BL       DMA_CalcBaseAndBitshift
        LDRB     r2,[r4,#0x5c]
        MOVS     r1,#0x3f
        LSLS     r1,r1,r2
        STR      r1,[r0,#8]
        STR      r5,[r4,#0x54]
        STRB     r5,[r4,#0x35]
        MOVS     r0,#0
        STRB     r5,[r4,#0x34]
|L6.80|
        POP      {r4-r6,pc}
|L6.82|
        MOVS     r0,#1
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.HAL_DMA_GetError||, CODE, READONLY, ALIGN=1

HAL_DMA_GetError PROC
        LDR      r0,[r0,#0x54]
        BX       lr
        ENDP


        AREA ||i.HAL_DMA_GetState||, CODE, READONLY, ALIGN=1

HAL_DMA_GetState PROC
        LDRB     r0,[r0,#0x35]
        BX       lr
        ENDP


        AREA ||i.HAL_DMA_IRQHandler||, CODE, READONLY, ALIGN=2

HAL_DMA_IRQHandler PROC
        PUSH     {r3-r9,lr}
        MOV      r4,r0
        MOV      r8,#0
        LDR      r3,|L9.416|
        MOVS     r0,#8
        STR      r8,[sp,#0]
        MOV      r2,#0x2580
        LDR      r5,[r4,#0x58]
        LDRB     r1,[r4,#0x5c]
        LDR      r3,[r3,#0]  ; SystemCoreClock
        LDR      r6,[r5,#0]
        UDIV     r7,r3,r2
        LSL      r1,r0,r1
        TST      r1,r6
        BEQ      |L9.76|
        LDR      r1,[r4,#0]
        LDR      r2,[r1,#0]
        LSLS     r2,r2,#29
        BPL      |L9.76|
        LDR      r2,[r1,#0]
        BIC      r2,r2,#4
        STR      r2,[r1,#0]
        LDRB     r1,[r4,#0x5c]
        LSLS     r0,r0,r1
        STR      r0,[r5,#8]
        LDR      r0,[r4,#0x54]
        ORR      r0,r0,#1
        STR      r0,[r4,#0x54]
|L9.76|
        LDRB     r1,[r4,#0x5c]
        LDR      r0,|L9.420|
        LSLS     r0,r0,r1
        TST      r0,r6
        BEQ      |L9.106|
        LDR      r1,[r4,#0]
        LDR      r1,[r1,#0x14]
        LSLS     r1,r1,#24
        BPL      |L9.106|
        STR      r0,[r5,#8]
        LDR      r0,[r4,#0x54]
        ORR      r0,r0,#2
        STR      r0,[r4,#0x54]
|L9.106|
        LDR      r0,|L9.420|
        LDRB     r1,[r4,#0x5c]
        ADDS     r0,r0,#3
        LSLS     r0,r0,r1
        TST      r0,r6
        BEQ      |L9.138|
        LDR      r1,[r4,#0]
        LDR      r1,[r1,#0]
        LSLS     r1,r1,#30
        BPL      |L9.138|
        STR      r0,[r5,#8]
        LDR      r0,[r4,#0x54]
        ORR      r0,r0,#4
        STR      r0,[r4,#0x54]
|L9.138|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x10
        LSLS     r0,r0,r1
        TST      r0,r6
        BEQ      |L9.200|
        LDR      r1,[r4,#0]
        LDR      r1,[r1,#0]
        LSLS     r1,r1,#28
        BPL      |L9.200|
        STR      r0,[r5,#8]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        LSLS     r1,r1,#13
        BPL      |L9.178|
        LDR      r0,[r0,#0]
        LSLS     r0,r0,#12
        BPL      |L9.192|
        LDR      r1,[r4,#0x48]
        B        |L9.194|
|L9.178|
        LDR      r1,[r0,#0]
        LSLS     r1,r1,#23
        BMI      |L9.192|
        LDR      r1,[r0,#0]
        BIC      r1,r1,#8
        STR      r1,[r0,#0]
|L9.192|
        LDR      r1,[r4,#0x40]
|L9.194|
        CBZ      r1,|L9.200|
        MOV      r0,r4
        BLX      r1
|L9.200|
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x20
        MOV      r9,#1
        LSLS     r0,r0,r1
        TST      r0,r6
        BEQ      |L9.316|
        LDR      r1,[r4,#0]
        LDR      r1,[r1,#0]
        LSLS     r1,r1,#27
        BPL      |L9.316|
        STR      r0,[r5,#8]
        LDRB     r0,[r4,#0x35]
        CMP      r0,#5
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BEQ      |L9.252|
        LSLS     r1,r1,#13
        BPL      |L9.386|
        LDR      r0,[r0,#0]
        LSLS     r0,r0,#12
        BMI      |L9.308|
        LDR      r1,[r4,#0x44]
        B        |L9.310|
|L9.252|
        BIC      r1,r1,#0x16
        STR      r1,[r0,#0]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0x14]
        BIC      r1,r1,#0x80
        STR      r1,[r0,#0x14]
        LDR      r0,[r4,#0x40]
        CBNZ     r0,|L9.276|
        LDR      r0,[r4,#0x48]
        CBZ      r0,|L9.286|
|L9.276|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#8
        STR      r1,[r0,#0]
|L9.286|
        LDRB     r3,[r4,#0x5c]
        MOVS     r2,#0x3f
        LSLS     r2,r2,r3
        STR      r2,[r5,#8]
        STRB     r8,[r4,#0x34]
        STRB     r9,[r4,#0x35]
        LDR      r1,[r4,#0x50]
        B        |L9.372|
|L9.308|
        LDR      r1,[r4,#0x3c]
|L9.310|
        CBZ      r1,|L9.316|
        MOV      r0,r4
        BLX      r1
|L9.316|
        LDR      r0,[r4,#0x54]
        CMP      r0,#0
        BEQ      |L9.410|
        LDR      r0,[r4,#0x54]
        LSLS     r0,r0,#31
        BEQ      |L9.370|
        MOVS     r0,#5
        STRB     r0,[r4,#0x35]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
|L9.344|
        LDR      r0,[sp,#0]
        ADDS     r0,r0,#1
        STR      r0,[sp,#0]
        CMP      r0,r7
        BHI      |L9.362|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSLS     r0,r0,#31
        BNE      |L9.344|
|L9.362|
        STRB     r8,[r4,#0x34]
        STRB     r9,[r4,#0x35]
|L9.370|
        LDR      r1,[r4,#0x4c]
|L9.372|
        CMP      r1,#0
        BEQ      |L9.410|
        ADD      sp,sp,#4
        MOV      r0,r4
        POP      {r4-r9,lr}
        BX       r1
|L9.386|
        LDR      r1,[r0,#0]
        LSLS     r1,r1,#23
        BMI      |L9.308|
        LDR      r3,[r0,#0]
        BIC      r3,r3,#0x10
        STR      r3,[r0,#0]
        STRB     r8,[r4,#0x34]
        STRB     r9,[r4,#0x35]
        B        |L9.308|
|L9.410|
        POP      {r3-r9,pc}
        ENDP

        DCW      0x0000
|L9.416|
        DCD      SystemCoreClock
|L9.420|
        DCD      0x00800001

        AREA ||i.HAL_DMA_Init||, CODE, READONLY, ALIGN=2

HAL_DMA_Init PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        BL       HAL_GetTick
        MOV      r5,r0
        CBZ      r4,|L10.40|
        MOV      r9,#0
        STRB     r9,[r4,#0x34]
        MOVS     r1,#2
        STRB     r1,[r4,#0x35]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        B        |L10.70|
|L10.40|
        MOVS     r0,#1
|L10.42|
        POP      {r4-r10,pc}
        NOP      
|L10.48|
        BL       HAL_GetTick
        SUBS     r0,r0,r5
        CMP      r0,#5
        BLS      |L10.70|
        MOVS     r1,#0x20
        STR      r1,[r4,#0x54]
        MOVS     r0,#3
        STRB     r0,[r4,#0x35]
        B        |L10.42|
|L10.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSLS     r0,r0,#31
        BNE      |L10.48|
        LDRD     r2,r0,[r4,#0]
        LDRD     r5,r1,[r4,#8]
        LDRD     r3,r12,[r4,#0x10]
        ORRS     r0,r0,r5
        ADD      r5,r4,#0x18
        ORRS     r1,r1,r3
        ORRS     r0,r0,r1
        LDR      r1,[r2,#0]
        LDM      r5,{r5-r8}
        ORR      r0,r0,r12
        LDR      r3,|L10.224|
        ORRS     r0,r0,r5
        ANDS     r1,r1,r3
        ORR      r0,r0,r6
        ORR      r0,r0,r7
        CMP      r8,#4
        ORR      r0,r0,r1
        BNE      |L10.142|
        LDRD     r1,r3,[r4,#0x2c]
        ORRS     r1,r1,r3
        ORRS     r0,r0,r1
|L10.142|
        STR      r0,[r2,#0]
        LDR      r0,[r4,#0]
        MOVS     r6,#1
        LDR      r5,[r4,#0x24]
        LDR      r0,[r0,#0x14]
        CMP      r5,#4
        BIC      r0,r0,#7
        ORR      r5,r5,r0
        BNE      |L10.190|
        LDRD     r0,r1,[r4,#0x28]
        ORRS     r5,r5,r0
        CBZ      r1,|L10.190|
        MOV      r0,r4
        BL       DMA_CheckFifoParam
        CBZ      r0,|L10.190|
        MOVS     r0,#0x40
        STR      r0,[r4,#0x54]
        STRB     r6,[r4,#0x35]
        B        |L10.40|
|L10.190|
        LDR      r0,[r4,#0]
        STR      r5,[r0,#0x14]
        MOV      r0,r4
        BL       DMA_CalcBaseAndBitshift
        LDRB     r3,[r4,#0x5c]
        MOVS     r2,#0x3f
        LSLS     r2,r2,r3
        STR      r2,[r0,#8]
        STR      r9,[r4,#0x54]
        STRB     r6,[r4,#0x35]
        MOVS     r0,#0
        B        |L10.42|
        ENDP

        DCW      0x0000
|L10.224|
        DCD      0xf010803f

        AREA ||i.HAL_DMA_PollForTransfer||, CODE, READONLY, ALIGN=2

HAL_DMA_PollForTransfer PROC
        PUSH     {r0-r2,r4-r11,lr}
        SUB      sp,sp,#8
        MOV      r4,r0
        MOVS     r0,#0
        MOV      r9,r1
        STR      r0,[sp,#4]
        BL       HAL_GetTick
        STR      r0,[sp,#0]
        LDRB     r0,[r4,#0x35]
        MOVS     r7,#0
        CMP      r0,#2
        BEQ      |L11.40|
        MOVS     r0,#0x80
        STR      r0,[r4,#0x54]
        STRB     r7,[r4,#0x34]
        B        |L11.258|
|L11.40|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSLS     r0,r0,#23
        BPL      |L11.56|
        MOV      r0,#0x100
        STR      r0,[r4,#0x54]
        B        |L11.258|
|L11.56|
        LDRB     r0,[r4,#0x5c]
        CMP      r9,#0
        MOV      r11,#0x20
        MOV      r10,#0x10
        BEQ      |L11.90|
        LSL      r6,r10,r0
        NOP      
|L11.80|
        LDR      r5,[r4,#0x58]
        MOV      r8,#1
        LDR      r0,[r5,#0]
        B        |L11.214|
|L11.90|
        LSL      r6,r11,r0
        B        |L11.80|
|L11.96|
        LDR      r0,[sp,#0x10]
        ADDS     r0,r0,#1
        BEQ      |L11.140|
        LDR      r0,[sp,#0x10]
        CBZ      r0,|L11.120|
        BL       HAL_GetTick
        LDR      r1,[sp,#0]
        SUBS     r1,r0,r1
        LDR      r0,[sp,#0x10]
        CMP      r1,r0
        BLS      |L11.140|
|L11.120|
        STR      r11,[r4,#0x54]
        STRB     r7,[r4,#0x34]
        STRB     r8,[r4,#0x35]
        MOVS     r0,#3
|L11.134|
        ADD      sp,sp,#0x14
        POP      {r4-r11,pc}
|L11.140|
        LDRB     r2,[r4,#0x5c]
        MOVS     r1,#8
        LDR      r0,[r5,#0]
        LSL      r2,r1,r2
        TST      r2,r0
        BEQ      |L11.166|
        LDR      r1,[r4,#0x54]
        ORR      r1,r1,#1
        STR      r1,[r4,#0x54]
        STR      r2,[r5,#8]
|L11.166|
        LDRB     r2,[r4,#0x5c]
        LDR      r1,|L11.296|
        LSL      r2,r1,r2
        TST      r2,r0
        BEQ      |L11.190|
        LDR      r1,[r4,#0x54]
        ORR      r1,r1,#2
        STR      r1,[r4,#0x54]
        STR      r2,[r5,#8]
|L11.190|
        LDR      r1,|L11.296|
        LDRB     r2,[r4,#0x5c]
        ADDS     r1,r1,#3
        LSLS     r1,r1,r2
        TST      r1,r0
        BEQ      |L11.214|
        LDR      r2,[r4,#0x54]
        ORR      r2,r2,#4
        STR      r2,[r4,#0x54]
        STR      r1,[r5,#8]
|L11.214|
        TST      r0,r6
        BNE      |L11.224|
        LDR      r0,[r4,#0x54]
        LSLS     r0,r0,#31
        BEQ      |L11.96|
|L11.224|
        LDR      r0,[r4,#0x54]
        MOVS     r6,#0x30
        CBZ      r0,|L11.262|
        LDR      r0,[r4,#0x54]
        LSLS     r0,r0,#31
        BEQ      |L11.262|
        MOV      r0,r4
        BL       HAL_DMA_Abort
        LDRB     r1,[r4,#0x5c]
        LSLS     r6,r6,r1
        STR      r6,[r5,#8]
        STRB     r7,[r4,#0x34]
        STRB     r8,[r4,#0x35]
|L11.258|
        MOVS     r0,#1
        B        |L11.134|
|L11.262|
        LDRB     r1,[r4,#0x5c]
        CMP      r9,#0
        BEQ      |L11.282|
        LSL      r0,r10,r1
        STR      r0,[r5,#8]
|L11.278|
        LDR      r0,[sp,#4]
        B        |L11.134|
|L11.282|
        LSLS     r6,r6,r1
        STR      r6,[r5,#8]
        STRB     r7,[r4,#0x34]
        STRB     r8,[r4,#0x35]
        B        |L11.278|
        ENDP

|L11.296|
        DCD      0x00800001

        AREA ||i.HAL_DMA_RegisterCallback||, CODE, READONLY, ALIGN=1

HAL_DMA_RegisterCallback PROC
        PUSH     {r4,r5,lr}
        LDRB     r4,[r0,#0x34]
        MOVS     r3,#0
        CMP      r4,#1
        BEQ      |L12.38|
        LDRB     r5,[r0,#0x35]
        MOVS     r4,#1
        STRB     r4,[r0,#0x34]
        CMP      r5,#1
        BEQ      |L12.42|
        MOVS     r3,#1
|L12.28|
        MOVS     r1,#0
        STRB     r1,[r0,#0x34]
        MOV      r0,r3
        POP      {r4,r5,pc}
|L12.38|
        MOVS     r0,#2
        POP      {r4,r5,pc}
|L12.42|
        CMP      r1,#6
        BCS      |L12.28|
        TBB      [pc,r1]
        DCB      0x03,0x05
        DCB      0x07,0x09,0x0b,0x0d
        STR      r2,[r0,#0x3c]
        B        |L12.28|
        STR      r2,[r0,#0x40]
        B        |L12.28|
        STR      r2,[r0,#0x44]
        B        |L12.28|
        STR      r2,[r0,#0x48]
        B        |L12.28|
        STR      r2,[r0,#0x4c]
        B        |L12.28|
        STR      r2,[r0,#0x50]
        B        |L12.28|
        ENDP


        AREA ||i.HAL_DMA_Start||, CODE, READONLY, ALIGN=1

HAL_DMA_Start PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0x34]
        MOVS     r5,#0
        CMP      r0,#1
        BEQ      |L13.44|
        LDRB     r7,[r4,#0x35]
        MOVS     r6,#1
        MOVS     r0,#0
        STRB     r6,[r4,#0x34]
        CMP      r7,#1
        BEQ      |L13.48|
        MOVS     r5,#2
        STRB     r0,[r4,#0x34]
|L13.38|
        MOV      r0,r5
|L13.40|
        POP      {r4-r8,pc}
|L13.44|
        MOVS     r0,#2
        B        |L13.40|
|L13.48|
        MOVS     r6,#2
        STRB     r6,[r4,#0x35]
        STR      r0,[r4,#0x54]
        MOV      r0,r4
        BL       DMA_SetConfig
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
        B        |L13.38|
        ENDP


        AREA ||i.HAL_DMA_Start_IT||, CODE, READONLY, ALIGN=1

HAL_DMA_Start_IT PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0x34]
        MOVS     r5,#0
        CMP      r0,#1
        LDR      r6,[r4,#0x58]
        BEQ      |L14.48|
        LDRB     r12,[r4,#0x35]
        MOVS     r7,#1
        MOVS     r0,#0
        STRB     r7,[r4,#0x34]
        CMP      r12,#1
        BEQ      |L14.52|
        MOVS     r5,#2
        STRB     r0,[r4,#0x34]
|L14.42|
        MOV      r0,r5
|L14.44|
        POP      {r4-r8,pc}
|L14.48|
        MOVS     r0,#2
        B        |L14.44|
|L14.52|
        MOVS     r7,#2
        STRB     r7,[r4,#0x35]
        STR      r0,[r4,#0x54]
        MOV      r0,r4
        BL       DMA_SetConfig
        LDRB     r1,[r4,#0x5c]
        MOVS     r0,#0x3f
        LSLS     r0,r0,r1
        STR      r0,[r6,#8]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x16
        STR      r1,[r0,#0]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0x14]
        ORR      r1,r1,#0x80
        STR      r1,[r0,#0x14]
        LDR      r0,[r4,#0x40]
        CBZ      r0,|L14.110|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#8
        STR      r1,[r0,#0]
|L14.110|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
        B        |L14.42|
        ENDP


        AREA ||i.HAL_DMA_UnRegisterCallback||, CODE, READONLY, ALIGN=1

HAL_DMA_UnRegisterCallback PROC
        PUSH     {r4,r5,lr}
        LDRB     r2,[r0,#0x34]
        MOVS     r3,#0
        CMP      r2,#1
        BEQ      |L15.30|
        LDRB     r5,[r0,#0x35]
        MOVS     r4,#1
        MOVS     r2,#0
        STRB     r4,[r0,#0x34]
        CMP      r5,#1
        BEQ      |L15.34|
        B        |L15.86|
|L15.30|
        MOVS     r0,#2
        POP      {r4,r5,pc}
|L15.34|
        CMP      r1,#7
        BCS      |L15.86|
        TBB      [pc,r1]
        DCB      0x04,0x06
        DCB      0x08,0x0a,0x0c,0x0e
        DCB      0x10,0x00
        STR      r2,[r0,#0x3c]
        B        |L15.88|
        STR      r2,[r0,#0x40]
        B        |L15.88|
        STR      r2,[r0,#0x44]
        B        |L15.88|
        STR      r2,[r0,#0x48]
        B        |L15.88|
        STR      r2,[r0,#0x4c]
        B        |L15.88|
|L15.70|
        STR      r2,[r0,#0x50]
        B        |L15.88|
        STR      r2,[r0,#0x3c]
        STR      r2,[r0,#0x40]
        STR      r2,[r0,#0x44]
        STR      r2,[r0,#0x48]
        STR      r2,[r0,#0x4c]
        B        |L15.70|
|L15.86|
        MOVS     r3,#1
|L15.88|
        STRB     r2,[r0,#0x34]
        MOV      r0,r3
        POP      {r4,r5,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=0

flagBitshiftOffset
        DCB      0x00,0x06,0x10,0x16
        DCB      0x00,0x06,0x10,0x16

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f7xx_hal_dma_c_c25f65ec____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___19_stm32f7xx_hal_dma_c_c25f65ec____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f7xx_hal_dma_c_c25f65ec____REVSH|
#line 402
|__asm___19_stm32f7xx_hal_dma_c_c25f65ec____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f7xx_hal_dma_c_c25f65ec____RRX|
#line 587
|__asm___19_stm32f7xx_hal_dma_c_c25f65ec____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_DMA_Abort [CODE]
        EXPORT HAL_DMA_Abort_IT [CODE]
        EXPORT HAL_DMA_DeInit [CODE]
        EXPORT HAL_DMA_GetError [CODE]
        EXPORT HAL_DMA_GetState [CODE]
        EXPORT HAL_DMA_IRQHandler [CODE]
        EXPORT HAL_DMA_Init [CODE]
        EXPORT HAL_DMA_PollForTransfer [CODE]
        EXPORT HAL_DMA_RegisterCallback [CODE]
        EXPORT HAL_DMA_Start [CODE]
        EXPORT HAL_DMA_Start_IT [CODE]
        EXPORT HAL_DMA_UnRegisterCallback [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GetTick [CODE]
        IMPORT SystemCoreClock [DATA]

        KEEP DMA_CalcBaseAndBitshift
        KEEP DMA_CheckFifoParam
        KEEP DMA_SetConfig
        KEEP flagBitshiftOffset

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
