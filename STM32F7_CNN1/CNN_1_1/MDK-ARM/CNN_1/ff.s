; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\ff.o --depend=cnn_1\ff.d --cpu=Cortex-M7 --fpu=SoftVFP --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\ff.crf ../Middlewares/Third_Party/FatFs/src/ff.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.check_fs||, CODE, READONLY, ALIGN=2

check_fs PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOVS     r2,#0
        SUBS     r0,r2,#1
        STRB     r2,[r4,#0x204]
        STR      r0,[r4,#0x22c]
        MOV      r0,r4
        BL       move_window
        CBZ      r0,|L1.28|
        MOVS     r0,#3
        POP      {r4,pc}
|L1.28|
        LDRH     r0,[r4,#0x1fe]
        SUB      r1,r0,#0xaa00
        SUBS     r1,r1,#0x55
        BEQ      |L1.44|
        MOVS     r0,#2
        POP      {r4,pc}
|L1.44|
        LDRH     r2,[r4,#0x37]
        LDRB     r1,[r4,#0x36]
        LDR      r0,|L1.92|
        ORR      r1,r1,r2,LSL #8
        CMP      r0,r1,LSL #8
        BEQ      |L1.82|
        LDRH     r2,[r4,#0x53]
        LDRB     r1,[r4,#0x52]
        ORR      r1,r1,r2,LSL #8
        CMP      r0,r1,LSL #8
        BNE      |L1.86|
|L1.82|
        MOVS     r0,#0
        POP      {r4,pc}
|L1.86|
        MOVS     r0,#1
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L1.92|
        DCD      0x54414600

        AREA ||i.chk_chr||, CODE, READONLY, ALIGN=1

chk_chr PROC
        B        |L2.4|
|L2.2|
        ADDS     r0,r0,#1
|L2.4|
        LDRB     r2,[r0,#0]
        CBZ      r2,|L2.12|
        CMP      r2,r1
        BNE      |L2.2|
|L2.12|
        UXTB     r0,r2
        BX       lr
        ENDP


        AREA ||i.chk_lock||, CODE, READONLY, ALIGN=2

chk_lock PROC
        PUSH     {r4-r7,lr}
        LDR      r3,|L3.104|
        MOVS     r2,#0
        MOV      r4,r2
|L3.8|
        ADD      r6,r2,r2,LSL #1
        LDR      r5,[r3,r6,LSL #2]
        CBZ      r5,|L3.52|
        LDR      r7,[r0,#0x200]
        CMP      r5,r7
        BNE      |L3.54|
        ADD      r5,r3,r6,LSL #2
        LDR      r7,[r0,#0x208]
        LDR      r6,[r5,#4]
        CMP      r6,r7
        BNE      |L3.54|
        LDRH     r5,[r5,#8]
        LDRH     r6,[r0,#0x206]
        CMP      r5,r6
        BEQ      |L3.60|
        B        |L3.54|
|L3.52|
        MOVS     r4,#1
|L3.54|
        ADDS     r2,r2,#1
        CMP      r2,#0xa
        BCC      |L3.8|
|L3.60|
        CMP      r2,#0xa
        BEQ      |L3.68|
        CBNZ     r1,|L3.98|
        B        |L3.78|
|L3.68|
        CBNZ     r4,|L3.94|
        CMP      r1,#2
        BEQ      |L3.94|
        MOVS     r0,#0x12
        POP      {r4-r7,pc}
|L3.78|
        ADD      r0,r2,r2,LSL #1
        ADD      r0,r3,r0,LSL #2
        LDRH     r0,[r0,#0xa]
        CMP      r0,#0x100
        BEQ      |L3.98|
|L3.94|
        MOVS     r0,#0
        POP      {r4-r7,pc}
|L3.98|
        MOVS     r0,#0x10
        POP      {r4-r7,pc}
        ENDP

        DCW      0x0000
|L3.104|
        DCD      ||.bss||

        AREA ||i.clear_lock||, CODE, READONLY, ALIGN=2

clear_lock PROC
        PUSH     {r4,r5,lr}
        LDR      r2,|L4.32|
        MOVS     r4,#0
        MOV      r1,r4
|L4.8|
        ADD      r3,r1,r1,LSL #1
        LDR      r5,[r2,r3,LSL #2]
        CMP      r5,r0
        BNE      |L4.24|
        STR      r4,[r2,r3,LSL #2]
|L4.24|
        ADDS     r1,r1,#1
        CMP      r1,#0xa
        BCC      |L4.8|
        POP      {r4,r5,pc}
        ENDP

|L4.32|
        DCD      ||.bss||

        AREA ||i.clmt_clust||, CODE, READONLY, ALIGN=1

clmt_clust PROC
        LDR      r2,[r0,#0x200]
        LSRS     r1,r1,#9
        LDR      r0,[r0,#0x224]
        LDRB     r2,[r2,#0x202]
        UDIV     r1,r1,r2
|L5.18|
        ADDS     r0,r0,#4
        LDM      r0!,{r2}
        CBZ      r2,|L5.32|
        CMP      r1,r2
        BCC      |L5.36|
        SUBS     r1,r1,r2
        B        |L5.18|
|L5.32|
        MOVS     r0,#0
        BX       lr
|L5.36|
        LDR      r0,[r0,#0]
        ADD      r0,r0,r1
        BX       lr
        ENDP


        AREA ||i.clust2sect||, CODE, READONLY, ALIGN=1

clust2sect PROC
        LDR      r2,[r0,#0x214]
        SUBS     r1,r1,#2
        SUBS     r2,r2,#2
        CMP      r2,r1
        BHI      |L6.16|
        MOVS     r0,#0
        BX       lr
|L6.16|
        LDR      r2,[r0,#0x228]
        LDRB     r0,[r0,#0x202]
        MLA      r0,r1,r0,r2
        BX       lr
        ENDP


        AREA ||i.create_chain||, CODE, READONLY, ALIGN=1

create_chain PROC
        PUSH     {r4-r8,lr}
        MOVS     r7,r1
        MOV      r5,r0
        BEQ      |L7.24|
        BL       get_fat
        CMP      r0,#2
        BCS      |L7.42|
        MOVS     r0,#1
|L7.20|
        POP      {r4-r8,pc}
|L7.24|
        LDR      r6,[r5,#0x20c]
        CBZ      r6,|L7.38|
        LDR      r0,[r5,#0x214]
        CMP      r0,r6
        BHI      |L7.56|
|L7.38|
        MOVS     r6,#1
        B        |L7.56|
|L7.42|
        ADDS     r1,r0,#1
        BEQ      |L7.20|
        LDR      r1,[r5,#0x214]
        CMP      r1,r0
        BHI      |L7.20|
        MOV      r6,r7
|L7.56|
        MOV      r4,r6
|L7.58|
        LDR      r0,[r5,#0x214]
        ADDS     r4,r4,#1
        CMP      r0,r4
        BHI      |L7.76|
        CMP      r6,#2
        MOV      r4,#2
        BCC      |L7.98|
|L7.76|
        MOV      r1,r4
        MOV      r0,r5
        BL       get_fat
        CBZ      r0,|L7.102|
        ADDS     r1,r0,#1
        BEQ      |L7.20|
        CMP      r0,#1
        BEQ      |L7.20|
        CMP      r4,r6
        BNE      |L7.58|
|L7.98|
        MOVS     r0,#0
        B        |L7.20|
|L7.102|
        MVN      r2,#0xf0000000
        MOV      r1,r4
        MOV      r0,r5
        BL       put_fat
        CBNZ     r0,|L7.130|
        CBZ      r7,|L7.140|
        MOV      r2,r4
        MOV      r1,r7
        MOV      r0,r5
        BL       put_fat
        CBZ      r0,|L7.140|
|L7.130|
        CMP      r0,#1
        BEQ      |L7.172|
        MOVS     r4,#1
|L7.136|
        MOV      r0,r4
        B        |L7.20|
|L7.140|
        LDR      r0,[r5,#0x210]
        STR      r4,[r5,#0x20c]
        ADDS     r1,r0,#1
        BEQ      |L7.136|
        LDRB     r1,[r5,#0x205]
        SUBS     r0,r0,#1
        STR      r0,[r5,#0x210]
        ORR      r1,r1,#1
        STRB     r1,[r5,#0x205]
        B        |L7.136|
|L7.172|
        MOV      r4,#0xffffffff
        B        |L7.136|
        ENDP


        AREA ||i.create_name||, CODE, READONLY, ALIGN=2

create_name PROC
        PUSH     {r3-r11,lr}
        LDR      r5,[r1,#0]
        MOV      r8,r1
        MOV      r10,r0
        B        |L8.14|
|L8.12|
        ADDS     r5,r5,#1
|L8.14|
        LDRB     r0,[r5,#0]
        CMP      r0,#0x2f
        BEQ      |L8.12|
        CMP      r0,#0x5c
        BEQ      |L8.12|
        LDR      r7,[r10,#0x220]
        MOVS     r4,#0
        MOV      r6,r4
|L8.32|
        LDRB     r0,[r5,r6]
        ADDS     r6,r6,#1
        CMP      r0,#0x20
        BCC      |L8.88|
        CMP      r0,#0x2f
        BEQ      |L8.88|
        CMP      r0,#0x5c
        BEQ      |L8.88|
        CMP      r4,#0xff
        BCS      |L8.154|
        MOVS     r1,#1
        BL       ff_convert
        MOVS     r9,r0
        BEQ      |L8.154|
        CMP      r9,#0x80
        BCS      |L8.80|
        MOV      r1,r0
        ADR      r0,|L8.492|
        BL       chk_chr
        CBNZ     r0,|L8.154|
|L8.80|
        STRH     r9,[r7,r4,LSL #1]
        ADDS     r4,r4,#1
        B        |L8.32|
|L8.88|
        ADDS     r1,r5,r6
        STR      r1,[r8,#0]
        CMP      r0,#0x20
        BCS      |L8.102|
        MOVS     r5,#4
        B        |L8.150|
|L8.102|
        MOVS     r5,#0
        B        |L8.150|
        NOP      
|L8.108|
        ADD      r0,r7,r4,LSL #1
        LDRH     r0,[r0,#-2]
        CMP      r0,#0x20
        BEQ      |L8.148|
        CMP      r0,#0x2e
        BEQ      |L8.148|
        CBZ      r4,|L8.154|
        MOVS     r0,#0
        STRH     r0,[r7,r4,LSL #1]
        LDR      r0,[r10,#0x218]
        MOVS     r2,#0xb
        MOVS     r1,#0x20
        BL       mem_set
        MOVS     r6,#0
        B        |L8.162|
|L8.148|
        SUBS     r4,r4,#1
|L8.150|
        CMP      r4,#0
        BNE      |L8.108|
|L8.154|
        MOVS     r0,#6
|L8.156|
        POP      {r3-r11,pc}
|L8.160|
        ADDS     r6,r6,#1
|L8.162|
        LDRH     r0,[r7,r6,LSL #1]
        CMP      r0,#0x20
        BEQ      |L8.160|
        CMP      r0,#0x2e
        BEQ      |L8.160|
        CBZ      r6,|L8.184|
        ORR      r5,r5,#3
        B        |L8.184|
|L8.182|
        SUBS     r4,r4,#1
|L8.184|
        CBZ      r4,|L8.198|
        ADD      r0,r7,r4,LSL #1
        LDRH     r0,[r0,#-2]
        CMP      r0,#0x2e
        BNE      |L8.182|
|L8.198|
        MOVS     r0,#0
        MOV      r11,#8
        MOV      r9,r0
        STR      r0,[sp,#0]
|L8.208|
        LDRH     r0,[r7,r6,LSL #1]
        ADD      r6,r6,#1
        MOVS     r8,r0
        BEQ      |L8.296|
        CMP      r8,#0x20
        BEQ      |L8.238|
        CMP      r8,#0x2e
        BNE      |L8.244|
        CMP      r6,r4
        BEQ      |L8.244|
|L8.238|
        ORR      r5,r5,#3
        B        |L8.208|
|L8.244|
        LDR      r0,[sp,#0]
        CMP      r0,r11
        BCS      |L8.254|
        CMP      r6,r4
        BNE      |L8.308|
|L8.254|
        CMP      r11,#0xb
        BEQ      |L8.292|
        CMP      r6,r4
        BEQ      |L8.268|
        ORR      r5,r5,#3
|L8.268|
        BHI      |L8.296|
        LSL      r1,r9,#26
        MOV      r6,r4
        MOV      r0,#8
        MOV      r11,#0xb
        LSR      r9,r1,#24
        STR      r0,[sp,#0]
        B        |L8.208|
|L8.292|
        ORR      r5,r5,#3
|L8.296|
        LDR      r0,[r10,#0x218]
        LDRB     r1,[r0,#0]
        CMP      r1,#0xe5
        BEQ      |L8.418|
        B        |L8.422|
|L8.308|
        CMP      r8,#0x80
        MOV      r0,r8
        BCC      |L8.350|
        MOVS     r1,#0
        BL       ff_convert
        MOVS     r8,r0
        BEQ      |L8.340|
        LDR      r1,|L8.504|
        ADD      r0,r1,r8
        LDRB     r0,[r0,#-0x80]
        MOV      r8,r0
|L8.340|
        CMP      r8,#0
        ORR      r5,r5,#2
        BEQ      |L8.360|
|L8.350|
        MOV      r1,r0
        ADR      r0,|L8.508|
        BL       chk_chr
        CBZ      r0,|L8.368|
|L8.360|
        MOVS     r0,#0x5f
        ORR      r5,r5,#3
        B        |L8.398|
|L8.368|
        SUB      r0,r8,#0x41
        CMP      r0,#0x19
        BHI      |L8.382|
        ORR      r9,r9,#2
        B        |L8.400|
|L8.382|
        SUB      r0,r8,#0x61
        CMP      r0,#0x19
        BHI      |L8.400|
        ADDS     r0,r0,#0x41
        UXTH     r0,r0
        ORR      r9,r9,#1
|L8.398|
        MOV      r8,r0
|L8.400|
        LDR      r2,[r10,#0x218]
        LDR      r1,[sp,#0]
        STRB     r8,[r2,r1]
        LDR      r0,[sp,#0]
        ADDS     r0,r0,#1
        STR      r0,[sp,#0]
        B        |L8.208|
|L8.418|
        MOVS     r1,#5
        STRB     r1,[r0,#0]
|L8.422|
        CMP      r11,#8
        BNE      |L8.436|
        LSL      r0,r9,#26
        LSR      r9,r0,#24
|L8.436|
        UBFX     r0,r9,#2,#2
        CMP      r0,#3
        BEQ      |L8.452|
        MVN      r1,r9
        LSLS     r1,r1,#30
        BNE      |L8.456|
|L8.452|
        ORR      r5,r5,#2
|L8.456|
        LSLS     r1,r5,#30
        BMI      |L8.480|
        AND      r1,r9,#3
        CMP      r1,#1
        BNE      |L8.472|
        ORR      r5,r5,#0x10
|L8.472|
        CMP      r0,#1
        BNE      |L8.480|
        ORR      r5,r5,#8
|L8.480|
        LDR      r0,[r10,#0x218]
        STRB     r5,[r0,#0xb]
        MOVS     r0,#0
        B        |L8.156|
        ENDP

        DCW      0x0000
|L8.492|
        DCB      """*:<>?|",127,0
        DCB      0
        DCB      0
        DCB      0
|L8.504|
        DCD      ||.constdata||
|L8.508|
        DCB      "+,;=[]",0
        DCB      0

        AREA ||i.dir_find||, CODE, READONLY, ALIGN=2

dir_find PROC
        PUSH     {r2-r12,lr}
        MOVS     r1,#0
        MOV      r5,r0
        BL       dir_sdi
        CMP      r0,#0
        BNE      |L9.242|
        MOVS     r0,#0xff
        STR      r0,[sp,#0]
        MOV      r10,#0xffff
        MOV.W    r9,r0
        STRH     r10,[r5,#0x224]
|L9.32|
        LDR      r1,[r5,#0x210]
        LDR      r0,[r5,#0x200]
        BL       move_window
        MOVS     r6,r0
        BNE      |L9.82|
        LDR      r4,[r5,#0x214]
        LDRB     r0,[r4,#0]
        CBZ      r0,|L9.80|
        LDRB     r1,[r4,#0xb]
        CMP      r0,#0xe5
        AND      r1,r1,#0x3f
        BEQ      |L9.74|
        LSLS     r2,r1,#28
        BPL      |L9.84|
        CMP      r1,#0xf
        BEQ      |L9.96|
|L9.74|
        MOV      r9,#0xff
        B        |L9.300|
|L9.80|
        MOVS     r6,#4
|L9.82|
        B        |L9.318|
|L9.84|
        CMP      r1,#0xf
        BEQ      |L9.96|
        CMP      r9,#0
        BEQ      |L9.250|
        B        |L9.262|
|L9.96|
        LDR      r1,[r5,#0x220]
        CBZ      r1,|L9.204|
        LSLS     r2,r0,#25
        BPL      |L9.124|
        LDRH     r3,[r5,#0x206]
        BIC      r0,r0,#0x40
        LDRB     r2,[r4,#0xd]
        MOV      r9,r0
        STR      r2,[sp,#0]
        STRH     r3,[r5,#0x224]
|L9.124|
        CMP      r0,r9
        BNE      |L9.234|
        LDRB     r2,[r4,#0xd]
        LDR      r0,[sp,#0]
        CMP      r2,r0
        BNE      |L9.234|
        STR      r1,[sp,#4]
        MOVS     r7,#0
        LDRB     r0,[r4,#0]
        MOV      r8,r4
        MOVS     r4,#1
        LDR      r11,|L9.324|
        BIC      r0,r0,#0x40
        SUBS     r0,r0,#1
        ADD      r1,r0,r0,LSL #2
        ADD      r6,r1,r0,LSL #3
|L9.164|
        LDRB     r1,[r11,r7]
        ADD      r0,r1,r8
        LDRH     r0,[r0,#0]
        CBZ      r4,|L9.206|
        BL       ff_wtoupper
        CMP      r6,#0xff
        MOV      r4,r0
        BCS      |L9.234|
        LDR      r0,[sp,#4]
        LDRH     r0,[r0,r6,LSL #1]
        ADDS     r6,r6,#1
        BL       ff_wtoupper
        CMP      r0,r4
        BNE      |L9.234|
        B        |L9.210|
|L9.204|
        B        |L9.304|
|L9.206|
        CMP      r0,r10
        BNE      |L9.234|
|L9.210|
        ADDS     r7,r7,#1
        CMP      r7,#0xd
        BCC      |L9.164|
        LDRB     r0,[r8,#0]
        LSLS     r0,r0,#25
        BPL      |L9.244|
        CBZ      r4,|L9.244|
        LDR      r0,[sp,#4]
        LDRH     r0,[r0,r6,LSL #1]
        CBZ      r0,|L9.244|
|L9.234|
        MOVS     r0,#0xff
|L9.236|
        AND      r9,r0,#0xff
        B        |L9.304|
|L9.242|
        B        |L9.320|
|L9.244|
        SUB      r0,r9,#1
        B        |L9.236|
|L9.250|
        MOV      r0,r4
        BL       sum_sfn
        LDR      r1,[sp,#0]
        CMP      r0,r1
        BEQ      |L9.318|
|L9.262|
        LDR      r0,[r5,#0x218]
        LDRB     r1,[r0,#0xb]
        LSLS     r1,r1,#31
        BNE      |L9.296|
        MOVS     r1,#0xa
        B        |L9.280|
|L9.276|
        SUBS     r1,r1,#1
        BCC      |L9.294|
|L9.280|
        LDRB     r2,[r4],#1
        LDRB     r3,[r0],#1
        SUBS     r2,r2,r3
        BEQ      |L9.276|
        B        |L9.296|
|L9.294|
        CBZ      r2,|L9.318|
|L9.296|
        MOV      r9,#0xff
|L9.300|
        STRH     r10,[r5,#0x224]
|L9.304|
        MOVS     r1,#0
        MOV      r0,r5
        BL       dir_next
        MOVS     r6,r0
        BEQ      |L9.32|
|L9.318|
        MOV      r0,r6
|L9.320|
        POP      {r2-r12,pc}
        ENDP

|L9.324|
        DCD      ||.constdata||+0x80

        AREA ||i.dir_next||, CODE, READONLY, ALIGN=2

dir_next PROC
        PUSH     {r4-r8,lr}
        LDRH     r6,[r0,#0x206]
        MOV      r4,r0
        MOV      r7,r1
        ADDS     r6,r6,#1
        LSLS     r0,r6,#16
        LSRS     r0,r0,#16
        BEQ      |L10.132|
        LDR      r0,[r4,#0x210]
        CBZ      r0,|L10.130|
        LSLS     r1,r6,#28
        BNE      |L10.262|
        LDR      r1,[r4,#0x20c]
        ADDS     r0,r0,#1
        STR      r0,[r4,#0x210]
        LDR      r0,[r4,#0x200]
        CBZ      r1,|L10.60|
        LDRB     r2,[r0,#0x202]
        SUBS     r2,r2,#1
        TST      r2,r6,LSR #4
        BEQ      |L10.70|
        B        |L10.262|
|L10.60|
        LDRH     r0,[r0,#0x208]
        CMP      r0,r6
        BLS      |L10.132|
        B        |L10.262|
|L10.70|
        BL       get_fat
        CMP      r0,#1
        MOV      r5,r0
        BLS      |L10.142|
        ADDS     r0,r5,#1
        BEQ      |L10.202|
        LDR      r0,[r4,#0x200]
        LDR      r1,[r0,#0x214]
        CMP      r1,r5
        BHI      |L10.244|
        CBZ      r7,|L10.130|
        LDR      r1,[r4,#0x20c]
        BL       create_chain
        MOVS     r5,r0
        BEQ      |L10.138|
        CMP      r5,#1
        BEQ      |L10.142|
        ADDS     r0,r5,#1
        BEQ      |L10.202|
        LDR      r0,[r4,#0x200]
        BL       sync_window
        CBNZ     r0,|L10.202|
        B        |L10.146|
|L10.130|
        B        |L10.132|
|L10.132|
        MOVS     r0,#4
|L10.134|
        POP      {r4-r8,pc}
|L10.138|
        MOVS     r0,#7
        B        |L10.134|
|L10.142|
        MOVS     r0,#2
        B        |L10.134|
|L10.146|
        LDR      r0,[r4,#0x200]
        MOVS     r1,#0
        MOV      r2,#0x200
        BL       mem_set
        LDR      r0,[r4,#0x200]
        MOV      r1,r5
        BL       clust2sect
        LDR      r1,[r4,#0x200]
        MOVS     r7,#0
        MOV      r8,#1
        STR      r0,[r1,#0x22c]
        B        |L10.222|
        NOP      
|L10.188|
        STRB     r8,[r0,#0x204]
        LDR      r0,[r4,#0x200]
        BL       sync_window
        CBZ      r0,|L10.206|
|L10.202|
        MOVS     r0,#1
        B        |L10.134|
|L10.206|
        LDR      r0,[r4,#0x200]
        LDR      r1,[r0,#0x22c]
        ADDS     r1,r1,#1
        STR      r1,[r0,#0x22c]
        ADDS     r7,r7,#1
|L10.222|
        LDR      r0,[r4,#0x200]
        LDRB     r1,[r0,#0x202]
        CMP      r1,r7
        BHI      |L10.188|
        LDR      r1,[r0,#0x22c]
        SUBS     r1,r1,r7
        STR      r1,[r0,#0x22c]
|L10.244|
        STR      r5,[r4,#0x20c]
        MOV      r1,r5
        LDR      r0,[r4,#0x200]
        BL       clust2sect
        STR      r0,[r4,#0x210]
|L10.262|
        AND      r1,r6,#0xf
        LDR      r0,[r4,#0x200]
        STRH     r6,[r4,#0x206]
        ADD      r0,r0,r1,LSL #5
        STR      r0,[r4,#0x214]
        MOVS     r0,#0
        B        |L10.134|
        ENDP


        AREA ||i.dir_register||, CODE, READONLY, ALIGN=2

dir_register PROC
        PUSH     {r0-r12,lr}
        LDR      r7,[r0,#0x218]
        MOVS     r2,#0xc
        LDR      r6,[r0,#0x220]
        MOV      r4,r0
        MOV      r1,r7
        MOV      r0,sp
        BL       mem_cpy
        LDRB     r0,[sp,#0xb]
        LSLS     r0,r0,#31
        BEQ      |L11.86|
        MOVS     r0,#0
        STRB     r0,[r7,#0xb]
        MOVS     r5,#1
        STR      r0,[r4,#0x220]
|L11.42|
        MOV      r3,r5
        MOV      r2,r6
        MOV      r1,sp
        MOV      r0,r7
        BL       gen_numname
        MOV      r0,r4
        BL       dir_find
        CBNZ     r0,|L11.68|
        ADDS     r5,r5,#1
        CMP      r5,#0x64
        BCC      |L11.42|
|L11.68|
        CMP      r5,#0x64
        BEQ      |L11.98|
        CMP      r0,#4
        BNE      |L11.100|
        LDRB     r0,[sp,#0xb]
        STRB     r0,[r7,#0xb]
        STR      r6,[r4,#0x220]
|L11.86|
        LDRB     r0,[sp,#0xb]
        LSLS     r0,r0,#30
        BPL      |L11.126|
        MOVS     r0,#0
        B        |L11.108|
|L11.98|
        MOVS     r0,#7
|L11.100|
        ADD      sp,sp,#0x10
        POP      {r4-r12,pc}
|L11.106|
        ADDS     r0,r0,#1
|L11.108|
        LDRH     r1,[r6,r0,LSL #1]
        CMP      r1,#0
        BNE      |L11.106|
        MOVS     r1,#0xd
        ADDS     r0,r0,#0x19
        UDIV     r6,r0,r1
        B        |L11.128|
|L11.126|
        MOVS     r6,#1
|L11.128|
        MOV      r0,r4
        MOVS     r1,#0
        BL       dir_sdi
        CBNZ     r0,|L11.180|
        MOVS     r7,#0
|L11.140|
        LDR      r1,[r4,#0x210]
        LDR      r0,[r4,#0x200]
        BL       move_window
        CBNZ     r0,|L11.180|
        LDR      r0,[r4,#0x214]
        LDRB     r0,[r0,#0]
        CMP      r0,#0xe5
        BEQ      |L11.186|
        CBZ      r0,|L11.186|
        MOVS     r7,#0
|L11.168|
        MOV      r0,r4
        MOVS     r1,#1
        BL       dir_next
        CMP      r0,#0
        BEQ      |L11.140|
|L11.180|
        CMP      r0,#4
        BEQ      |L11.222|
        B        |L11.224|
|L11.186|
        ADDS     r7,r7,#1
        MOV      r0,r6
        CMP      r7,r6
        BNE      |L11.168|
        SUBS     r6,r0,#1
        MOVS     r10,r6
        BEQ      |L11.392|
        LDRH     r1,[r4,#0x206]
        MOV      r0,r4
        SUB      r1,r1,r10
        BL       dir_sdi
        MOVS     r5,r0
        BEQ      |L11.228|
        B        |L11.454|
|L11.222|
        MOVS     r0,#7
|L11.224|
        MOV      r5,r0
        B        |L11.454|
|L11.228|
        LDR      r0,[r4,#0x218]
        BL       sum_sfn
        STR.W    r0,[sp,#0xc]
|L11.240|
        LDR      r1,[r4,#0x210]
        LDR      r0,[r4,#0x200]
        BL       move_window
        MOVS     r5,r0
        BNE      |L11.454|
        LDR      r1,[r4,#0x214]
        AND      r11,r10,#0xff
        LDR      r2,[sp,#0xc]
        SUB      r3,r11,#1
        LDR      r9,[r4,#0x220]
        MOVS     r7,#0xf
        ADD      r5,r3,r3,LSL #2
        LDR      r6,|L11.460|
        STRB     r2,[r1,#0xd]
        ADD      r5,r5,r3,LSL #3
        STRB     r7,[r1,#0xb]
        ADDS     r2,r1,#1
        STRB     r0,[r1,#0xc]
        MOV      lr,#0xffff
        STRB     r0,[r1,#0x1a]
        MOV      r3,r0
        STRB     r0,[r1,#0x1b]
        B        |L11.310|
|L11.306|
        CMP      r0,r8
        BEQ      |L11.318|
|L11.310|
        LDRH     r0,[r9,r5,LSL #1]
        ADDS     r5,r5,#1
        MOV      r8,lr
|L11.318|
        LDRB     r7,[r6,r3]
        LSR      r12,r0,#8
        STRB     r0,[r1,r7]
        LDRB     r7,[r6,r3]
        STRB     r12,[r7,r2]
        CBNZ     r0,|L11.336|
        MOV      r0,r8
|L11.336|
        ADDS     r3,r3,#1
        CMP      r3,#0xd
        BCC      |L11.306|
        CMP      r0,lr
        BEQ      |L11.352|
        LDRH     r0,[r9,r5,LSL #1]
        CBNZ     r0,|L11.356|
|L11.352|
        ORR      r11,r11,#0x40
|L11.356|
        STRB     r11,[r1,#0]
        LDR      r1,[r4,#0x200]
        MOVS     r0,#1
        STRB     r0,[r1,#0x204]
        MOVS     r1,#0
        MOV      r0,r4
        BL       dir_next
        MOVS     r5,r0
        BNE      |L11.454|
        SUB      r0,r10,#1
        MOVS     r10,r0
        BNE      |L11.240|
|L11.392|
        LDR      r1,[r4,#0x210]
        LDR      r0,[r4,#0x200]
        BL       move_window
        MOVS     r5,r0
        BNE      |L11.454|
        LDR      r0,[r4,#0x214]
        MOVS     r2,#0x20
        MOVS     r1,#0
        ADD      r4,r4,#0x200
        BL       mem_set
        MOVS     r2,#0xb
        LDRD     r0,r1,[r4,#0x14]
        BL       mem_cpy
        LDRD     r1,r0,[r4,#0x14]
        LDRB     r0,[r0,#0xb]
        AND      r0,r0,#0x18
        STRB     r0,[r1,#0xc]
        LDR      r1,[r4,#0]
        MOVS     r0,#1
        STRB     r0,[r1,#0x204]
|L11.454|
        MOV      r0,r5
        B        |L11.100|
        ENDP

        DCW      0x0000
|L11.460|
        DCD      ||.constdata||+0x80

        AREA ||i.dir_sdi||, CODE, READONLY, ALIGN=1

dir_sdi PROC
        PUSH     {r4-r6,lr}
        LDR      r3,[r0,#0x208]
        MOV      r5,r1
        MOV      r4,r0
        STRH     r1,[r0,#0x206]
        CMP      r3,#1
        BEQ      |L12.144|
        LDR      r0,[r4,#0x200]
        LDR      r1,[r0,#0x214]
        CMP      r1,r3
        BLS      |L12.144|
        CBNZ     r3,|L12.46|
        LDRB     r1,[r0,#0x200]
        CMP      r1,#3
        BNE      |L12.54|
        LDR      r3,[r0,#0x224]
        CBZ      r3,|L12.54|
|L12.46|
        LDRB     r0,[r0,#0x202]
        LSLS     r6,r0,#4
        B        |L12.96|
|L12.54|
        LDRH     r1,[r0,#0x208]
        CMP      r1,r5
        BLS      |L12.144|
        LDR      r0,[r0,#0x224]
        B        |L12.110|
|L12.68|
        BL       get_fat
        MOV      r3,r0
        ADDS     r0,r0,#1
        BEQ      |L12.140|
        CMP      r3,#2
        BCC      |L12.144|
        LDR      r0,[r4,#0x200]
        LDR      r0,[r0,#0x214]
        CMP      r0,r3
        BLS      |L12.144|
        SUBS     r5,r5,r6
|L12.96|
        LDR      r0,[r4,#0x200]
        CMP      r5,r6
        MOV      r1,r3
        BCS      |L12.68|
        BL       clust2sect
|L12.110|
        STR      r3,[r4,#0x20c]
        CBZ      r0,|L12.144|
        LDR      r1,[r4,#0x200]
        AND      r2,r5,#0xf
        ADD      r0,r0,r5,LSR #4
        ADD      r1,r1,r2,LSL #5
        STRD     r0,r1,[r4,#0x210]
        MOVS     r0,#0
        POP      {r4-r6,pc}
|L12.140|
        MOVS     r0,#1
        POP      {r4-r6,pc}
|L12.144|
        MOVS     r0,#2
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.f_close||, CODE, READONLY, ALIGN=2

f_close PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        BL       f_sync
        CMP      r0,#0
        BNE      |L13.80|
        MOV      r0,r4
        BL       validate
        CMP      r0,#0
        BNE      |L13.80|
        LDR      r1,[r4,#0x228]
        SUBS     r1,r1,#1
        CMP      r1,#0xa
        BCS      |L13.82|
        LDR      r3,|L13.88|
        ADD      r2,r1,r1,LSL #1
        ADD      r5,r3,r2,LSL #2
        LDRH     r1,[r5,#0xa]
        CMP      r1,#0x100
        BEQ      |L13.68|
        CBZ      r1,|L13.56|
        SUBS     r1,r1,#1
        UXTH     r1,r1
|L13.56|
        STRH     r1,[r5,#0xa]
        CMP      r1,#0
        MOV      r1,#0
        BEQ      |L13.72|
        B        |L13.76|
|L13.68|
        MOVS     r1,#0
        B        |L13.56|
|L13.72|
        STR      r1,[r3,r2,LSL #2]
|L13.76|
        STR      r1,[r4,#0x200]
|L13.80|
        POP      {r4-r6,pc}
|L13.82|
        MOVS     r0,#2
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L13.88|
        DCD      ||.bss||

        AREA ||i.f_lseek||, CODE, READONLY, ALIGN=2

f_lseek PROC
        PUSH     {r2-r12,lr}
        MOV      r5,r1
        MOV      r4,r0
        BL       validate
        MOVS     r9,r0
        BNE      |L14.256|
        LDRB     r0,[r4,#0x207]
        CMP      r0,#0
        BNE      |L14.256|
        LDR      r0,[r4,#0x224]
        MOVS     r7,#1
        MOV      r10,#2
        CMP      r0,#0
        BEQ      |L14.258|
        ADDS     r1,r5,#1
        BEQ      |L14.154|
        LDR      r0,[r4,#0x20c]
        CMP      r0,r5
        BCS      |L14.54|
        MOV      r5,r0
|L14.54|
        STR      r5,[r4,#0x208]
        CMP      r5,#0
|L14.60|
        BEQ      |L14.254|
        SUBS     r1,r5,#1
        MOV      r0,r4
        BL       clmt_clust
        STR      r0,[r4,#0x214]
        MOV      r1,r0
        LDR      r0,[r4,#0x200]
        BL       clust2sect
        CMP      r0,#0
        BEQ      |L14.340|
        LDR      r1,[r4,#0x200]
        SUB      r5,r5,#1
        LDRH     r3,[r4,#0x208]
        LDRB     r2,[r1,#0x202]
        LSLS     r3,r3,#23
        SUB      r2,r2,#1
        AND      r2,r2,r5,LSR #9
        ADD      r5,r2,r0
        BEQ      |L14.60|
        LDR      r2,[r4,#0x218]
        CMP      r2,r5
        BEQ      |L14.60|
        LDRB     r0,[r4,#0x206]
        LSLS     r0,r0,#25
        BPL      |L14.278|
        LDRB     r0,[r1,#0x201]
        MOVS     r3,#1
        MOV      r1,r4
        BL       disk_write
        CMP      r0,#0
        BNE      |L14.388|
        B        |L14.266|
|L14.154|
        LDM      r0!,{r2}
        LDR      r1,[r4,#0x210]
        MOVS     r5,#2
        MOV      r11,r0
        STR      r2,[sp,#0]
        CBZ      r1,|L14.236|
|L14.168|
        MOVS     r6,#0
        STR      r1,[sp,#4]
        ADDS     r5,r5,#2
|L14.174|
        LDR      r0,[r4,#0x200]
        ADDS     r6,r6,#1
        MOV      r8,r1
        BL       get_fat
        CMP      r0,#1
        MOV      r1,r0
        BLS      |L14.340|
        ADDS     r0,r1,#1
        BEQ      |L14.388|
        ADD      r0,r8,#1
        CMP      r1,r0
        BEQ      |L14.174|
        LDR      r0,[sp,#0]
        CMP      r5,r0
        BHI      |L14.224|
        ADD      r0,r11,#4
        STR      r6,[r11,#0]
        LDR      r2,[sp,#4]
        STM      r0!,{r2}
        MOV      r11,r0
|L14.224|
        LDR      r0,[r4,#0x200]
        LDR      r0,[r0,#0x214]
        CMP      r0,r1
        BHI      |L14.168|
|L14.236|
        LDR      r1,[r4,#0x224]
        LDR      r0,[sp,#0]
        CMP      r5,r0
        STR      r5,[r1,#0]
        BHI      |L14.260|
        MOVS     r1,#0
        STR      r1,[r11,#0]
|L14.254|
        B        |L14.648|
|L14.256|
        B        |L14.576|
|L14.258|
        B        |L14.306|
|L14.260|
        MOV      r9,#0x11
        B        |L14.648|
|L14.266|
        LDRB     r0,[r4,#0x206]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#0x206]
|L14.278|
        LDR      r0,[r4,#0x200]
        MOVS     r3,#1
        MOV      r2,r5
        MOV      r1,r4
        LDRB     r0,[r0,#0x201]
        BL       disk_read
        CMP      r0,#0
        BNE      |L14.388|
        STR      r5,[r4,#0x218]
        B        |L14.648|
|L14.306|
        LDR      r0,[r4,#0x20c]
        CMP      r0,r5
        BCS      |L14.324|
        LDRB     r1,[r4,#0x206]
        LSLS     r1,r1,#30
        BMI      |L14.324|
        MOV      r5,r0
|L14.324|
        LDR      r0,[r4,#0x208]
        MOV      r8,#0
        STR      r8,[r4,#0x208]
        CBZ      r5,|L14.424|
        B        |L14.342|
|L14.340|
        B        |L14.570|
|L14.342|
        LDR      r2,[r4,#0x200]
        LDRB     r1,[r2,#0x202]
        LSL      r6,r1,#9
        CBZ      r0,|L14.390|
        SUBS     r1,r5,#1
        SUBS     r0,r0,#1
        UDIV     r1,r1,r6
        UDIV     r3,r0,r6
        CMP      r1,r3
        BCC      |L14.390|
        SUBS     r2,r6,#1
        LDR      r1,[r4,#0x214]
        BICS     r0,r0,r2
        STR      r0,[r4,#0x208]
        SUBS     r5,r5,r0
        B        |L14.422|
|L14.388|
        B        |L14.612|
|L14.390|
        LDR      r1,[r4,#0x210]
        CBNZ     r1,|L14.418|
        MOVS     r1,#0
        MOV      r0,r2
        BL       create_chain
        CMP      r0,#1
        MOV      r1,r0
        BEQ      |L14.570|
        ADDS     r0,r1,#1
        BEQ      |L14.612|
        STR      r1,[r4,#0x210]
|L14.418|
        STR      r1,[r4,#0x214]
|L14.422|
        CBNZ     r1,|L14.494|
|L14.424|
        B        |L14.526|
        NOP      
|L14.428|
        LDRB     r0,[r4,#0x206]
        LSLS     r0,r0,#30
        LDR      r0,[r4,#0x200]
        BPL      |L14.452|
        BL       create_chain
        MOVS     r1,r0
        BNE      |L14.458|
        MOV      r5,r6
        B        |L14.498|
|L14.452|
        BL       get_fat
        MOV      r1,r0
|L14.458|
        ADDS     r0,r1,#1
        BEQ      |L14.612|
        CMP      r1,#1
        BLS      |L14.570|
        LDR      r0,[r4,#0x200]
        LDR      r0,[r0,#0x214]
        CMP      r0,r1
        BLS      |L14.570|
        LDR      r0,[r4,#0x208]
        SUBS     r5,r5,r6
        STR      r1,[r4,#0x214]
        ADD      r0,r0,r6
        STR      r0,[r4,#0x208]
|L14.494|
        CMP      r5,r6
        BHI      |L14.428|
|L14.498|
        LDR      r0,[r4,#0x208]
        LSLS     r2,r5,#23
        ADD      r0,r0,r5
        STR      r0,[r4,#0x208]
        BEQ      |L14.526|
        LDR      r0,[r4,#0x200]
        BL       clust2sect
        CBZ      r0,|L14.570|
        ADD      r8,r0,r5,LSR #9
|L14.526|
        LDRH     r0,[r4,#0x208]
        LSLS     r0,r0,#23
        BEQ      |L14.624|
        LDR      r2,[r4,#0x218]
        CMP      r2,r8
        BEQ      |L14.624|
        LDRB     r0,[r4,#0x206]
        LSLS     r0,r0,#25
        BPL      |L14.592|
        LDR      r0,[r4,#0x200]
        MOVS     r3,#1
        MOV      r1,r4
        LDRB     r0,[r0,#0x201]
        BL       disk_write
        CBNZ     r0,|L14.612|
        B        |L14.580|
|L14.570|
        MOVS     r0,#2
        STRB     r10,[r4,#0x207]
|L14.576|
        POP      {r2-r12,pc}
|L14.580|
        LDRB     r0,[r4,#0x206]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#0x206]
|L14.592|
        LDR      r0,[r4,#0x200]
        MOVS     r3,#1
        MOV      r2,r8
        MOV      r1,r4
        LDRB     r0,[r0,#0x201]
        BL       disk_read
        CBZ      r0,|L14.620|
|L14.612|
        MOVS     r0,#1
        STRB     r7,[r4,#0x207]
        B        |L14.576|
|L14.620|
        STR      r8,[r4,#0x218]
|L14.624|
        LDRD     r0,r1,[r4,#0x208]
        CMP      r0,r1
        BLS      |L14.648|
        LDRB     r1,[r4,#0x206]
        STR      r0,[r4,#0x20c]
        ORR      r0,r1,#0x20
        STRB     r0,[r4,#0x206]
|L14.648|
        MOV      r0,r9
        B        |L14.576|
        ENDP


        AREA ||i.f_mount||, CODE, READONLY, ALIGN=2

f_mount PROC
        PUSH     {r0-r2,r4-r8,lr}
        SUB      sp,sp,#4
        MOV      r8,r2
        LDR      r0,[sp,#8]
        STR      r0,[sp,#0]
        MOV      r0,sp
        BL       get_ldnumber
        MOVS     r4,r0
        BPL      |L15.30|
        MOVS     r0,#0xb
|L15.24|
        ADD      sp,sp,#0x10
        POP      {r4-r8,pc}
|L15.30|
        LDR      r6,|L15.88|
        MOVS     r7,#0
        LDR      r5,[r6,r4,LSL #2]
        CBZ      r5,|L15.50|
        MOV      r0,r5
        BL       clear_lock
        STRB     r7,[r5,#0x200]
|L15.50|
        LDR      r0,[sp,#4]
        CMP      r0,#0
        BEQ      |L15.60|
        STRB     r7,[r0,#0x200]
|L15.60|
        STR      r0,[r6,r4,LSL #2]
        BEQ      |L15.72|
        CMP      r8,#1
        BEQ      |L15.76|
|L15.72|
        MOVS     r0,#0
        B        |L15.24|
|L15.76|
        MOVS     r2,#0
        ADD      r1,sp,#8
        ADD      r0,sp,#4
        BL       find_volume
        B        |L15.24|
        ENDP

|L15.88|
        DCD      ||.data||+0x4

        AREA ||i.f_open||, CODE, READONLY, ALIGN=2

f_open PROC
        PUSH     {r0-r2,r4-r11,lr}
        MOVS     r6,r0
        SUB      sp,sp,#0x238
        BEQ      |L16.42|
        AND      r7,r2,#0x1f
        MOV      r11,#0
        BIC      r2,r7,#1
        STR      r11,[r6,#0x200]
        ADD      r1,sp,#0x23c
        ADD      r0,sp,#0x200
        BL       find_volume
        MOVS     r4,r0
        BEQ      |L16.52|
        B        |L16.524|
|L16.42|
        MOVS     r0,#9
|L16.44|
        ADD      sp,sp,#0x244
        POP      {r4-r11,pc}
|L16.52|
        ADD      r0,sp,#0x22c
        STR      r0,[sp,#0x218]
        LDR      r0,|L16.528|
        LDR      r1,[sp,#0x23c]
        STR      r0,[sp,#0x220]
        MOV      r0,sp
        BL       follow_path
        LDR      r5,[sp,#0x214]
        MOVS     r4,r0
        BNE      |L16.98|
        CBZ      r5,|L16.84|
        LSRS     r0,r7,#1
        BEQ      |L16.88|
        MOVS     r1,#1
        B        |L16.90|
|L16.84|
        MOVS     r4,#6
        B        |L16.98|
|L16.88|
        MOVS     r1,#0
|L16.90|
        MOV      r0,sp
        BL       chk_lock
        MOV      r4,r0
|L16.98|
        TST      r7,#0x1c
        BEQ      |L16.334|
        MOV      r8,#1
        CBZ      r4,|L16.166|
        CMP      r4,#4
        BNE      |L16.156|
        LDR      r1,|L16.528|
        SUBS     r1,r1,#0x78
        MOVS     r0,#0
        B        |L16.128|
|L16.122|
        ADDS     r0,r0,#1
        CMP      r0,#0xa
        BCS      |L16.140|
|L16.128|
        ADD      r2,r0,r0,LSL #1
        LDR      r2,[r1,r2,LSL #2]
        CMP      r2,#0
        BNE      |L16.122|
|L16.140|
        CMP      r0,#0xa
        BEQ      |L16.152|
        MOV      r0,sp
        BL       dir_register
        B        |L16.154|
|L16.152|
        MOVS     r0,#0x12
|L16.154|
        MOV      r4,r0
|L16.156|
        LDR      r5,[sp,#0x214]
        ORR      r7,r7,#8
        CBZ      r4,|L16.186|
        B        |L16.524|
|L16.166|
        LDRB     r0,[r5,#0xb]
        TST      r0,#0x11
        BEQ      |L16.178|
|L16.174|
        MOVS     r4,#7
        B        |L16.524|
|L16.178|
        LSLS     r0,r7,#29
        BPL      |L16.186|
        MOVS     r4,#8
        B        |L16.524|
|L16.186|
        LSLS     r0,r7,#28
        BPL      |L16.434|
        BL       get_fattime
        STRB     r0,[r5,#0xe]
        LSRS     r2,r0,#8
        STRB     r2,[r5,#0xf]
        LSRS     r3,r0,#16
        STRB     r3,[r5,#0x10]
        LSR      r12,r0,#24
        STRB     r12,[r5,#0x11]
        MOV      r1,r5
        STRB     r11,[r5,#0xb]
        STRB     r11,[r5,#0x1c]
        STRB     r11,[r5,#0x1d]
        STRB     r11,[r5,#0x1e]
        STRB     r11,[r5,#0x1f]
        LDR      r0,[sp,#0x200]
        BL       ld_clust
        MOVS     r1,#0
        MOV      r9,r0
        MOV      r0,r5
        BL       st_clust
        LDR      r2,[sp,#0x200]
        CMP      r9,#0
        STRB     r8,[r2,#0x204]
        BEQ      |L16.430|
        LDR      r0,[sp,#0x200]
        CMP      r9,#2
        MOV      r4,r9
        LDR      r0,[r0,#0x22c]
        STR      r0,[sp,#0x228]
        LDR      r8,[sp,#0x200]
        BCC      |L16.336|
        LDR      r0,[r8,#0x214]
        CMP      r0,r4
        BLS      |L16.336|
        B        |L16.372|
|L16.292|
        MOV      r1,r4
        MOV      r0,r8
        BL       get_fat
        MOVS     r10,r0
        BEQ      |L16.380|
        CMP      r10,#1
        BEQ      |L16.336|
        CMP      r10,#0xffffffff
        BEQ      |L16.340|
        MOVS     r2,#0
        MOV      r1,r4
        MOV      r0,r8
        BL       put_fat
        MOVS     r4,r0
        BNE      |L16.524|
        B        |L16.344|
|L16.334|
        B        |L16.404|
|L16.336|
        MOVS     r4,#2
        B        |L16.524|
|L16.340|
        MOVS     r4,#1
        B        |L16.524|
|L16.344|
        LDR      r0,[r8,#0x210]
        ADDS     r1,r0,#1
        BEQ      |L16.370|
        LDRB     r1,[r8,#0x205]
        ADDS     r0,r0,#1
        STR      r0,[r8,#0x210]
        ORR      r2,r1,#1
        STRB     r2,[r8,#0x205]
|L16.370|
        MOV      r4,r10
|L16.372|
        LDR      r0,[r8,#0x214]
        CMP      r0,r4
        BHI      |L16.292|
|L16.380|
        LDR      r1,[sp,#0x200]
        SUB      r0,r9,#1
        STR      r0,[r1,#0x20c]
        LDR      r1,[sp,#0x228]
        LDR      r0,[sp,#0x200]
        BL       move_window
        MOVS     r4,r0
        BEQ      |L16.426|
        B        |L16.524|
|L16.404|
        CBNZ     r4,|L16.524|
        LDRB     r0,[r5,#0xb]
        LSLS     r1,r0,#27
        BPL      |L16.418|
        MOVS     r4,#4
        B        |L16.524|
        B        |L16.434|
|L16.418|
        LSLS     r1,r7,#30
        BPL      |L16.426|
        LSLS     r0,r0,#31
        BNE      |L16.174|
|L16.426|
        LSLS     r0,r7,#28
        BPL      |L16.434|
|L16.430|
        ORR      r7,r7,#0x20
|L16.434|
        LDR      r0,[sp,#0x200]
        LDR      r0,[r0,#0x22c]
        STRD     r0,r5,[r6,#0x21c]
        LSRS     r0,r7,#1
        BEQ      |L16.452|
        MOVS     r1,#1
        B        |L16.454|
|L16.452|
        MOVS     r1,#0
|L16.454|
        MOV      r0,sp
        BL       inc_lock
        CMP      r0,#0
        STR      r0,[r6,#0x228]
        BEQ      |L16.336|
        STRB     r7,[r6,#0x206]
        MOV      r8,r11
        STRB     r11,[r6,#0x207]
        ADD      r6,r6,#0x200
        LDR      r0,[sp,#0x200]
        MOV      r1,r5
        BL       ld_clust
        STR      r0,[r6,#0x10]
        LDR      r2,[r5,#0x1d]
        LDRB     r1,[r5,#0x1c]
        ORR      r1,r1,r2,LSL #8
        STRD     r8,r1,[r6,#8]
        STR      r8,[r6,#0x18]
        STR      r8,[r6,#0x24]
        LDR      r0,[sp,#0x200]
        STR      r0,[r6,#0]
        LDRH     r0,[r0,#0x206]
        STRH     r0,[r6,#4]
|L16.524|
        MOV      r0,r4
        B        |L16.44|
        ENDP

|L16.528|
        DCD      ||.bss||+0x78

        AREA ||i.f_read||, CODE, READONLY, ALIGN=2

f_read PROC
        PUSH     {r3-r11,lr}
        MOV      r5,r2
        MOV      r9,r3
        MOVS     r2,#0
        MOV      r4,r0
        MOV      r8,r1
        STR      r2,[r3,#0]
        BL       validate
        CMP      r0,#0
        BNE      |L17.62|
        LDRB     r0,[r4,#0x207]
        CMP      r0,#0
        BNE      |L17.62|
        LDRB     r0,[r4,#0x206]
        LSLS     r0,r0,#31
        BEQ      |L17.60|
        LDRD     r1,r0,[r4,#0x208]
        MOVS     r7,#1
        MOV      r10,#2
        SUBS     r0,r0,r1
        CMP      r5,r0
        BLS      |L17.58|
        MOV      r5,r0
|L17.58|
        B        |L17.386|
|L17.60|
        MOVS     r0,#7
|L17.62|
        POP      {r3-r11,pc}
        NOP      
|L17.68|
        LDR      r1,[r4,#0x208]
        LSLS     r0,r1,#23
        BNE      |L17.326|
        LDR      r2,[r4,#0x200]
        LDRB     r0,[r2,#0x202]
        SUBS     r0,r0,#1
        AND      r0,r0,r1,LSR #9
        ANDS     r6,r0,#0xff
        BNE      |L17.140|
        CBZ      r1,|L17.112|
        LDR      r0,[r4,#0x224]
        CBZ      r0,|L17.118|
        MOV      r0,r4
        BL       clmt_clust
        B        |L17.128|
|L17.112|
        LDR      r0,[r4,#0x210]
        B        |L17.128|
|L17.118|
        LDR      r1,[r4,#0x214]
        MOV      r0,r2
        BL       get_fat
|L17.128|
        CMP      r0,#2
        BCC      |L17.204|
        ADDS     r1,r0,#1
        BEQ      |L17.318|
        STR      r0,[r4,#0x214]
|L17.140|
        LDR      r1,[r4,#0x214]
        LDR      r0,[r4,#0x200]
        BL       clust2sect
        CBZ      r0,|L17.204|
        LSRS     r1,r5,#9
        MOVS     r11,r1
        ADD      r0,r0,r6
        STR      r0,[sp,#0]
        BEQ      |L17.252|
        LDR      r1,[r4,#0x200]
        ADD      r2,r6,r11
        LDRB     r0,[r1,#0x202]
        CMP      r2,r0
        BLS      |L17.186|
        SUB      r11,r0,r6
|L17.186|
        LDRB     r0,[r1,#0x201]
        LDR      r2,[sp,#0]
        MOV      r3,r11
        MOV      r1,r8
        BL       disk_read
        CBNZ     r0,|L17.318|
        B        |L17.212|
|L17.204|
        MOVS     r0,#2
        STRB     r10,[r4,#0x207]
        B        |L17.62|
|L17.212|
        LDRB     r0,[r4,#0x206]
        LSLS     r0,r0,#25
        BPL      |L17.246|
        LDR      r1,[r4,#0x218]
        LDR      r0,[sp,#0]
        SUBS     r0,r1,r0
        CMP      r0,r11
        BCS      |L17.246|
        ADD      r0,r8,r0,LSL #9
        MOV      r1,r4
        MOV      r2,#0x200
        BL       mem_cpy
|L17.246|
        LSL      r6,r11,#9
        B        |L17.362|
|L17.252|
        LDR      r2,[r4,#0x218]
        CMP      r2,r0
        BEQ      |L17.328|
        LDRB     r0,[r4,#0x206]
        LSLS     r0,r0,#25
        BPL      |L17.298|
        LDR      r0,[r4,#0x200]
        MOVS     r3,#1
        MOV      r1,r4
        LDRB     r0,[r0,#0x201]
        BL       disk_write
        CBNZ     r0,|L17.318|
        LDRB     r0,[r4,#0x206]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#0x206]
|L17.298|
        LDR      r0,[r4,#0x200]
        MOVS     r3,#1
        LDR      r2,[sp,#0]
        MOV      r1,r4
        LDRB     r0,[r0,#0x201]
        BL       disk_read
        CBZ      r0,|L17.328|
|L17.318|
        MOVS     r0,#1
        STRB     r7,[r4,#0x207]
        B        |L17.62|
|L17.326|
        B        |L17.334|
|L17.328|
        LDR      r0,[sp,#0]
        STR      r0,[r4,#0x218]
|L17.334|
        LDRH     r0,[r4,#0x208]
        UBFX     r0,r0,#0,#9
        RSB      r6,r0,#0x200
        CMP      r6,r5
        BLS      |L17.352|
        MOV      r6,r5
|L17.352|
        ADDS     r1,r0,r4
        MOV      r2,r6
        MOV      r0,r8
        BL       mem_cpy
|L17.362|
        LDR      r1,[r4,#0x208]
        SUBS     r5,r5,r6
        ADD      r8,r8,r6
        ADDS     r0,r1,r6
        STR      r0,[r4,#0x208]
        LDR      r0,[r9,#0]
        ADDS     r1,r0,r6
        STR      r1,[r9,#0]
|L17.386|
        CMP      r5,#0
        BNE      |L17.68|
        MOVS     r0,#0
        B        |L17.62|
        ENDP


        AREA ||i.f_sync||, CODE, READONLY, ALIGN=1

f_sync PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        BL       validate
        CMP      r0,#0
        BNE      |L18.48|
        LDRB     r1,[r4,#0x206]
        LSLS     r2,r1,#26
        BPL      |L18.48|
        LSLS     r0,r1,#25
        BPL      |L18.62|
        LDR      r0,[r4,#0x200]
        MOVS     r3,#1
        LDR      r2,[r4,#0x218]
        MOV      r1,r4
        LDRB     r0,[r0,#0x201]
        BL       disk_write
        CBZ      r0,|L18.50|
        MOVS     r0,#1
|L18.48|
        POP      {r4-r6,pc}
|L18.50|
        LDRB     r0,[r4,#0x206]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#0x206]
|L18.62|
        LDR      r1,[r4,#0x21c]
        LDR      r0,[r4,#0x200]
        BL       move_window
        CMP      r0,#0
        BNE      |L18.48|
        LDR      r5,[r4,#0x220]
        LDRB     r0,[r5,#0xb]
        ORR      r0,r0,#0x20
        STRB     r0,[r5,#0xb]
        LDRB     r0,[r4,#0x20c]
        STRB     r0,[r5,#0x1c]
        LDRH     r0,[r4,#0x20c]
        LSRS     r0,r0,#8
        STRB     r0,[r5,#0x1d]
        LDR      r0,[r4,#0x20c]
        LSRS     r0,r0,#16
        STRB     r0,[r5,#0x1e]
        LDR      r0,[r4,#0x20c]
        LSRS     r0,r0,#24
        STRB     r0,[r5,#0x1f]
        LDR      r1,[r4,#0x210]
        ADD      r4,r4,#0x200
        MOV      r0,r5
        BL       st_clust
        BL       get_fattime
        STRB     r0,[r5,#0x16]
        LSRS     r2,r0,#8
        STRB     r2,[r5,#0x17]
        LSRS     r3,r0,#16
        STRB     r3,[r5,#0x18]
        LSRS     r6,r0,#24
        STRB     r6,[r5,#0x19]
        MOVS     r1,#0
        STRB     r1,[r5,#0x12]
        STRB     r1,[r5,#0x13]
        LDRB     r0,[r4,#6]
        BIC      r0,r0,#0x20
        STRB     r0,[r4,#6]
        LDR      r1,[r4,#0]
        MOVS     r0,#1
        STRB     r0,[r1,#0x204]
        LDR      r0,[r4,#0]
        POP      {r4-r6,lr}
        B.W      sync_fs
        ENDP


        AREA ||i.f_write||, CODE, READONLY, ALIGN=2

f_write PROC
        PUSH     {r3-r11,lr}
        MOV      r4,r0
        MOV      r9,r3
        MOVS     r0,#0
        MOV      r5,r2
        MOV      r8,r1
        STR      r0,[r3,#0]
        MOV      r0,r4
        BL       validate
        CMP      r0,#0
        BNE      |L19.44|
        LDRB     r0,[r4,#0x207]
        CMP      r0,#0
        BNE      |L19.44|
        LDRB     r0,[r4,#0x206]
        LSLS     r0,r0,#30
        BMI      |L19.48|
        MOVS     r0,#7
|L19.44|
        POP      {r3-r11,pc}
|L19.48|
        LDR      r0,[r4,#0x208]
        MOVS     r7,#1
        MOV      r10,#2
        ADDS     r1,r0,r5
        CMP      r1,r0
        BCC      |L19.314|
        B        |L19.438|
        NOP      
|L19.68|
        LDR      r1,[r4,#0x208]
        LSLS     r0,r1,#23
        BNE      |L19.316|
        LDR      r2,[r4,#0x200]
        LDRB     r0,[r2,#0x202]
        SUBS     r0,r0,#1
        AND      r0,r0,r1,LSR #9
        ANDS     r6,r0,#0xff
        BNE      |L19.158|
        CBZ      r1,|L19.112|
        LDR      r0,[r4,#0x224]
        CBZ      r0,|L19.122|
        MOV      r0,r4
        BL       clmt_clust
        B        |L19.132|
|L19.112|
        LDR      r0,[r4,#0x210]
        CBNZ     r0,|L19.136|
        MOVS     r1,#0
        B        |L19.126|
|L19.122|
        LDR      r1,[r4,#0x214]
|L19.126|
        MOV      r0,r2
        BL       create_chain
|L19.132|
        CMP      r0,#0
        BEQ      |L19.314|
|L19.136|
        CMP      r0,#1
        BEQ      |L19.264|
        ADDS     r1,r0,#1
        BEQ      |L19.360|
        LDR      r1,[r4,#0x210]
        STR      r0,[r4,#0x214]
        CBNZ     r1,|L19.158|
        STR      r0,[r4,#0x210]
|L19.158|
        LDRB     r0,[r4,#0x206]
        LSLS     r0,r0,#25
        BPL      |L19.200|
        LDR      r0,[r4,#0x200]
        MOVS     r3,#1
        LDR      r2,[r4,#0x218]
        MOV      r1,r4
        LDRB     r0,[r0,#0x201]
        BL       disk_write
        CBNZ     r0,|L19.312|
        LDRB     r0,[r4,#0x206]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#0x206]
|L19.200|
        LDR      r1,[r4,#0x214]
        LDR      r0,[r4,#0x200]
        BL       clust2sect
        CBZ      r0,|L19.264|
        LSRS     r1,r5,#9
        MOVS     r11,r1
        ADD      r0,r0,r6
        STR      r0,[sp,#0]
        BEQ      |L19.324|
        LDR      r1,[r4,#0x200]
        ADD      r2,r6,r11
        LDRB     r0,[r1,#0x202]
        CMP      r2,r0
        BLS      |L19.246|
        SUB      r11,r0,r6
|L19.246|
        LDRB     r0,[r1,#0x201]
        LDR      r2,[sp,#0]
        MOV      r3,r11
        MOV      r1,r8
        BL       disk_write
        CBNZ     r0,|L19.312|
        B        |L19.272|
|L19.264|
        MOVS     r0,#2
        STRB     r10,[r4,#0x207]
        B        |L19.44|
|L19.272|
        LDR      r1,[r4,#0x218]
        LDR      r0,[sp,#0]
        SUBS     r0,r1,r0
        CMP      r0,r11
        BCS      |L19.310|
        ADD      r1,r8,r0,LSL #9
        MOV      r0,r4
        MOV      r2,#0x200
        BL       mem_cpy
        LDRB     r0,[r4,#0x206]
        BIC      r0,r0,#0x40
        STRB     r0,[r4,#0x206]
|L19.310|
        B        |L19.318|
|L19.312|
        B        |L19.360|
|L19.314|
        B        |L19.444|
|L19.316|
        B        |L19.374|
|L19.318|
        LSL      r6,r11,#9
        B        |L19.414|
|L19.324|
        LDR      r1,[r4,#0x218]
        CMP      r1,r0
        BEQ      |L19.368|
        LDRD     r0,r1,[r4,#0x208]
        CMP      r0,r1
        BCS      |L19.368|
        LDR      r0,[r4,#0x200]
        MOVS     r3,#1
        LDR      r2,[sp,#0]
        MOV      r1,r4
        LDRB     r0,[r0,#0x201]
        BL       disk_read
        CBZ      r0,|L19.368|
|L19.360|
        MOVS     r0,#1
        STRB     r7,[r4,#0x207]
        B        |L19.44|
|L19.368|
        LDR      r0,[sp,#0]
        STR      r0,[r4,#0x218]
|L19.374|
        LDRH     r0,[r4,#0x208]
        UBFX     r0,r0,#0,#9
        RSB      r6,r0,#0x200
        CMP      r6,r5
        BLS      |L19.392|
        MOV      r6,r5
|L19.392|
        MOV      r1,r8
        ADD      r0,r0,r4
        MOV      r2,r6
        BL       mem_cpy
        LDRB     r0,[r4,#0x206]
        ORR      r0,r0,#0x40
        STRB     r0,[r4,#0x206]
|L19.414|
        LDR      r1,[r4,#0x208]
        SUBS     r5,r5,r6
        ADD      r8,r8,r6
        ADDS     r0,r1,r6
        STR      r0,[r4,#0x208]
        LDR      r0,[r9,#0]
        ADDS     r1,r0,r6
        STR      r1,[r9,#0]
|L19.438|
        CMP      r5,#0
        BNE      |L19.68|
|L19.444|
        LDRD     r0,r1,[r4,#0x208]
        CMP      r0,r1
        BLS      |L19.456|
        STR      r0,[r4,#0x20c]
|L19.456|
        LDRB     r0,[r4,#0x206]
        ORR      r0,r0,#0x20
        STRB     r0,[r4,#0x206]
        MOVS     r0,#0
        B        |L19.44|
        ENDP


        AREA ||i.find_volume||, CODE, READONLY, ALIGN=2

find_volume PROC
        PUSH     {r0-r10,lr}
        MOV      r9,#0
        MOV      r6,r2
        MOV      r7,r0
        STR      r9,[r0,#0]
        MOV      r0,r1
        BL       get_ldnumber
        MOVS     r5,r0
        BPL      |L20.34|
        MOVS     r0,#0xb
|L20.28|
        ADD      sp,sp,#0x10
        POP      {r4-r10,pc}
|L20.34|
        LDR      r0,|L20.588|
        LDR      r4,[r0,r5,LSL #2]
        CBZ      r4,|L20.84|
        STR      r4,[r7,#0]
        LDRB     r0,[r4,#0x200]
        CBZ      r0,|L20.62|
        LDRB     r0,[r4,#0x201]
        BL       disk_status
        LSLS     r1,r0,#31
        BEQ      |L20.88|
|L20.62|
        STRB     r9,[r4,#0x200]
        UXTB     r0,r5
        STRB     r0,[r4,#0x201]
        BL       disk_initialize
        LSLS     r1,r0,#31
        BEQ      |L20.98|
        MOVS     r0,#3
        B        |L20.28|
|L20.84|
        MOVS     r0,#0xc
        B        |L20.28|
|L20.88|
        CBZ      r6,|L20.94|
        LSLS     r0,r0,#29
        BMI      |L20.104|
|L20.94|
        MOVS     r0,#0
        B        |L20.28|
|L20.98|
        CBZ      r6,|L20.108|
        LSLS     r0,r0,#29
        BPL      |L20.108|
|L20.104|
        MOVS     r0,#0xa
        B        |L20.28|
|L20.108|
        MOVS     r5,#0
        MOV      r0,r4
        MOV      r1,r5
        BL       check_fs
        CMP      r0,#1
        BNE      |L20.194|
        MOVS     r0,#0
        MOV.W    r7,sp
|L20.128|
        ADD      r1,r4,r0,LSL #4
        LDRB     r2,[r1,#0x1c2]
        ADD      r1,r1,#0x1be
        CBZ      r2,|L20.154|
        LDRB     r2,[r1,#8]
        LDR      r1,[r1,#9]
        ORR      r1,r2,r1,LSL #8
        B        |L20.156|
|L20.154|
        MOVS     r1,#0
|L20.156|
        STR      r1,[r7,r0,LSL #2]
        ADDS     r0,r0,#1
        CMP      r0,#4
        BCC      |L20.128|
        MOVS     r6,#0
|L20.168|
        LDR      r5,[r7,r6,LSL #2]
        CBZ      r5,|L20.186|
        MOV      r1,r5
        MOV      r0,r4
        BL       check_fs
        CBNZ     r0,|L20.188|
        B        |L20.206|
|L20.186|
        MOVS     r0,#2
|L20.188|
        ADDS     r6,r6,#1
        CMP      r6,#4
        BCC      |L20.168|
|L20.194|
        CMP      r0,#3
        BEQ      |L20.202|
        CBNZ     r0,|L20.322|
        B        |L20.206|
|L20.202|
        MOVS     r0,#1
        B        |L20.28|
|L20.206|
        LDRH     r0,[r4,#0xb]
        CMP      r0,#0x200
        BNE      |L20.410|
        LDRH     r12,[r4,#0x16]
        CMP      r12,#0
        BNE      |L20.238|
        LDR      r1,[r4,#0x25]
        LDRB     r0,[r4,#0x24]
        ORR      r12,r0,r1,LSL #8
|L20.238|
        LDRB     r1,[r4,#0x10]
        STR      r12,[r4,#0x218]
        CMP      r1,#1
        STRB     r1,[r4,#0x203]
        BEQ      |L20.256|
        CMP      r1,#2
        BNE      |L20.410|
|L20.256|
        MUL      r1,r1,r12
        LDRB     r0,[r4,#0xd]
        STRB     r0,[r4,#0x202]
        CBZ      r0,|L20.322|
        SUBS     r2,r0,#1
        TST      r0,r2
        BNE      |L20.410|
        LDRH     r2,[r4,#0x11]
        STRH     r2,[r4,#0x208]
        LSLS     r3,r2,#28
        BNE      |L20.410|
        LDRH     r6,[r4,#0x13]
        CBNZ     r6,|L20.304|
        LDR      r6,[r4,#0x21]
        LDRB     r3,[r4,#0x20]
        ORR      r6,r3,r6,LSL #8
|L20.304|
        LDRH     r7,[r4,#0xe]
        CBZ      r7,|L20.322|
        ADDS     r3,r7,r1
        ADD      r3,r3,r2,LSR #4
        CMP      r6,r3
        BCC      |L20.410|
        SUBS     r6,r6,r3
        B        |L20.324|
|L20.322|
        B        |L20.410|
|L20.324|
        UDIV     r0,r6,r0
        CBZ      r0,|L20.410|
        MOVS     r6,#1
        MOV      r8,#0xff6
        CMP      r0,r8
        BCC      |L20.342|
        MOVS     r6,#2
|L20.342|
        MOV      r8,#0xfff6
        CMP      r0,r8
        BCC      |L20.352|
        MOVS     r6,#3
|L20.352|
        ADD      r7,r7,r5
        ADDS     r0,r0,#2
        ADD      r3,r3,r5
        STR      r3,[r4,#0x228]
        STR      r0,[r4,#0x214]
        CMP      r6,#3
        STRD     r5,r7,[r4,#0x21c]
        BEQ      |L20.414|
        CBZ      r2,|L20.410|
        CMP      r6,#2
        ADD      r1,r1,r7
        STR      r1,[r4,#0x224]
        BEQ      |L20.438|
        AND      r1,r0,#1
        ADD      r0,r0,r0,LSL #1
        ADD      r0,r1,r0,LSR #1
        NOP      
|L20.400|
        ADD      r0,r0,#0x1ff
        CMP      r12,r0,LSR #9
        BCS      |L20.442|
|L20.410|
        MOVS     r0,#0xd
        B        |L20.28|
|L20.414|
        CMP      r2,#0
        BNE      |L20.410|
        LDR      r2,[r4,#0x2d]
        LSLS     r0,r0,#2
        LDRB     r1,[r4,#0x2c]
        ORR      r1,r1,r2,LSL #8
        STR      r1,[r4,#0x224]
        B        |L20.400|
|L20.438|
        LSLS     r0,r0,#1
        B        |L20.400|
|L20.442|
        MOV      r1,#0xffffffff
        STR      r1,[r4,#0x210]
        MOVS     r0,#0x80
        STR      r1,[r4,#0x20c]
        CMP      r6,#3
        STRB     r0,[r4,#0x205]
        BNE      |L20.562|
        LDRH     r0,[r4,#0x30]
        CMP      r0,#1
        BNE      |L20.562|
        ADDS     r1,r5,#1
        MOV      r0,r4
        BL       move_window
        CBNZ     r0,|L20.562|
        LDRH     r1,[r4,#0x1fe]
        STRB     r9,[r4,#0x205]
        SUB      r2,r1,#0xaa00
        SUBS     r2,r2,#0x55
        BNE      |L20.562|
        LDR      r2,[r4,#1]
        LDRB     r0,[r4,#0]
        LDR      r1,|L20.592|
        ORR      r0,r0,r2,LSL #8
        CMP      r0,r1
        BNE      |L20.562|
        LDR      r2,[r4,#0x1e5]
        LDRB     r0,[r4,#0x1e4]
        LDR      r1,|L20.596|
        ORR      r0,r0,r2,LSL #8
        CMP      r0,r1
        BNE      |L20.562|
        LDR      r2,[r4,#0x1e9]
        LDRB     r0,[r4,#0x1e8]
        LDRB     r1,[r4,#0x1ec]
        ORR      r0,r0,r2,LSL #8
        STR      r0,[r4,#0x210]
        LDR      r0,[r4,#0x1ed]
        ORR      r0,r1,r0,LSL #8
        STR      r0,[r4,#0x20c]
|L20.562|
        LDR      r1,|L20.588|
        STRB     r6,[r4,#0x200]
        SUBS     r1,r1,#4
        LDRH     r0,[r1,#0]  ; Fsid
        ADDS     r0,r0,#1
        STRH     r0,[r1,#0]
        STRH     r0,[r4,#0x206]
        MOV      r0,r4
        BL       clear_lock
        B        |L20.94|
        ENDP

|L20.588|
        DCD      ||.data||+0x4
|L20.592|
        DCD      0x41615252
|L20.596|
        DCD      0x61417272

        AREA ||i.follow_path||, CODE, READONLY, ALIGN=1

follow_path PROC
        PUSH     {r0,r1,r4-r6,lr}
        MOV      r4,r0
        LDR      r0,[sp,#4]
        LDRB     r1,[r0,#0]
        CMP      r1,#0x2f
        BEQ      |L21.16|
        CMP      r1,#0x5c
        BNE      |L21.20|
|L21.16|
        ADDS     r0,r0,#1
        STR      r0,[sp,#4]
|L21.20|
        MOVS     r5,#0
        STR      r5,[r4,#0x208]
        LDR      r0,[sp,#4]
        LDRB     r0,[r0,#0]
        CMP      r0,#0x20
        BCS      |L21.48|
        MOVS     r1,#0
        MOV      r0,r4
        BL       dir_sdi
        STR      r5,[r4,#0x214]
|L21.46|
        POP      {r2-r6,pc}
|L21.48|
        ADD      r1,sp,#4
        MOV      r0,r4
        BL       create_name
        CMP      r0,#0
        BNE      |L21.46|
        MOV      r0,r4
        BL       dir_find
        LDR      r1,[r4,#0x218]
        LDRB     r1,[r1,#0xb]
        CBZ      r0,|L21.86|
        CMP      r0,#4
        BNE      |L21.46|
        LSLS     r1,r1,#29
        BMI      |L21.46|
|L21.82|
        MOVS     r0,#5
|L21.84|
        POP      {r2-r6,pc}
|L21.86|
        LSLS     r1,r1,#29
        BMI      |L21.84|
        LDR      r1,[r4,#0x214]
        LDRB     r0,[r1,#0xb]
        LSLS     r0,r0,#27
        BPL      |L21.82|
        LDR      r0,[r4,#0x200]
        BL       ld_clust
        STR      r0,[r4,#0x208]
        B        |L21.48|
        ENDP


        AREA ||i.gen_numname||, CODE, READONLY, ALIGN=2

gen_numname PROC
        PUSH     {r2-r6,lr}
        MOV      r4,r3
        MOV      r6,r2
        MOVS     r2,#0xb
        MOV      r5,r0
        BL       mem_cpy
        CMP      r4,#5
        BLS      |L22.54|
        LDR      r2,|L22.124|
        B        |L22.48|
|L22.22|
        MOVS     r1,#0
        ADDS     r6,r6,#2
|L22.26|
        MOV      r3,r4
        MOV      r4,r0
        LSRS     r0,r0,#1
        BFI      r4,r3,#1,#31
        LSLS     r3,r4,#15
        BPL      |L22.42|
        EORS     r4,r4,r2
|L22.42|
        ADDS     r1,r1,#1
        CMP      r1,#0x10
        BCC      |L22.26|
|L22.48|
        LDRH     r0,[r6,#0]
        CMP      r0,#0
        BNE      |L22.22|
|L22.54|
        MOVS     r1,#7
        MOV.W    r2,sp
|L22.60|
        AND      r0,r4,#0xf
        ADDS     r0,r0,#0x30
        CMP      r0,#0x39
        BLS      |L22.72|
        ADDS     r0,r0,#7
|L22.72|
        STRB     r0,[r2,r1]
        LSRS     r4,r4,#4
        SUB      r1,r1,#1
        BNE      |L22.60|
        MOVS     r3,#0x7e
        MOVS     r0,#0
        STRB     r3,[r2,r1]
        B        |L22.92|
|L22.90|
        ADDS     r0,r0,#1
|L22.92|
        CMP      r0,r1
        BCS      |L22.102|
        LDRB     r3,[r5,r0]
        CMP      r3,#0x20
        BNE      |L22.90|
|L22.102|
        CMP      r1,#8
        BCS      |L22.112|
        LDRB     r3,[r2,r1]
        ADDS     r1,r1,#1
        B        |L22.114|
|L22.112|
        MOVS     r3,#0x20
|L22.114|
        STRB     r3,[r5,r0]
        ADDS     r0,r0,#1
        CMP      r0,#8
        BCC      |L22.102|
        POP      {r2-r6,pc}
        ENDP

|L22.124|
        DCD      0x00011021

        AREA ||i.get_fat||, CODE, READONLY, ALIGN=1

get_fat PROC
        PUSH     {r4-r8,lr}
        CMP      r1,#2
        MOV      r5,r1
        MOV      r4,r0
        BCC      |L23.40|
        LDR      r0,[r4,#0x214]
        CMP      r0,r5
        BLS      |L23.40|
        LDRB     r0,[r4,#0x200]
        MOV      r6,#0xffffffff
        CMP      r0,#1
        BEQ      |L23.48|
        CMP      r0,#2
        BEQ      |L23.122|
        CMP      r0,#3
        BEQ      |L23.150|
|L23.40|
        MOVS     r6,#1
|L23.42|
        MOV      r0,r6
        POP      {r4-r8,pc}
|L23.48|
        LDR      r0,[r4,#0x220]
        ADD      r7,r5,r5,LSR #1
        ADD      r1,r0,r7,LSR #9
        MOV      r0,r4
        BL       move_window
        CMP      r0,#0
        BNE      |L23.42|
        UBFX     r0,r7,#0,#9
        ADDS     r7,r7,#1
        LDRB     r8,[r4,r0]
        LDR      r0,[r4,#0x220]
        ADD      r1,r0,r7,LSR #9
        MOV      r0,r4
        BL       move_window
        CMP      r0,#0
        BNE      |L23.42|
        UBFX     r0,r7,#0,#9
        LSLS     r1,r5,#31
        LDRB     r2,[r4,r0]
        ORR      r0,r8,r2,LSL #8
        BEQ      |L23.116|
        LSRS     r6,r0,#4
        B        |L23.42|
|L23.116|
        UBFX     r6,r0,#0,#12
        B        |L23.42|
|L23.122|
        LDR      r0,[r4,#0x220]
        ADD      r1,r0,r5,LSR #8
        MOV      r0,r4
        BL       move_window
        CMP      r0,#0
        BNE      |L23.42|
        UXTB     r0,r5
        ADD      r0,r4,r0,LSL #1
        LDRH     r6,[r0,#0]
        B        |L23.42|
|L23.150|
        LDR      r0,[r4,#0x220]
        ADD      r1,r0,r5,LSR #7
        MOV      r0,r4
        BL       move_window
        CMP      r0,#0
        BNE      |L23.42|
        MOV      r0,#0x1ff
        AND      r0,r0,r5,LSL #2
        ADD      r0,r0,r4
        LDRB     r1,[r0,#0]
        LDR      r0,[r0,#1]
        ORR      r0,r1,r0,LSL #8
        BIC      r6,r0,#0xf0000000
        B        |L23.42|
        ENDP


        AREA ||i.get_ldnumber||, CODE, READONLY, ALIGN=1

get_ldnumber PROC
        PUSH     {r4,lr}
        LDR      r2,[r0,#0]
        MOV      r4,r0
        MOV      r0,#0xffffffff
        CMP      r2,#0
        BEQ      |L24.54|
        MOV      r1,r2
        B        |L24.20|
|L24.18|
        ADDS     r1,r1,#1
|L24.20|
        LDRB     r3,[r1,#0]
        CMP      r3,#0x20
        BCC      |L24.56|
        CMP      r3,#0x3a
        BNE      |L24.18|
        LDRB     r3,[r2],#1
        SUBS     r3,r3,#0x30
        CMP      r3,#0xa
        BCS      |L24.54|
        CMP      r2,r1
        BNE      |L24.54|
        CMP      r3,#0
        BNE      |L24.54|
        ADDS     r1,r1,#1
        MOV      r0,r3
        STR      r1,[r4,#0]
|L24.54|
        POP      {r4,pc}
|L24.56|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.inc_lock||, CODE, READONLY, ALIGN=2

inc_lock PROC
        PUSH     {r4-r7,lr}
        LDR      r2,|L25.156|
        MOV      r3,r0
        LDR      r4,[r0,#0x200]
        MOVS     r0,#0
|L25.12|
        ADD      r5,r0,r0,LSL #1
        LDR      r6,[r2,r5,LSL #2]
        CMP      r6,r4
        BNE      |L25.48|
        ADD      r5,r2,r5,LSL #2
        LDR      r6,[r3,#0x208]
        LDR      r7,[r5,#4]
        CMP      r7,r6
        BNE      |L25.48|
        LDRH     r5,[r5,#8]
        LDRH     r6,[r3,#0x206]
        CMP      r5,r6
        BEQ      |L25.54|
|L25.48|
        ADDS     r0,r0,#1
        CMP      r0,#0xa
        BCC      |L25.12|
|L25.54|
        CMP      r0,#0xa
        BNE      |L25.112|
        MOVS     r0,#0
        B        |L25.68|
|L25.62|
        ADDS     r0,r0,#1
        CMP      r0,#0xa
        BCS      |L25.80|
|L25.68|
        ADD      r5,r0,r0,LSL #1
        LDR      r5,[r2,r5,LSL #2]
        CMP      r5,#0
        BNE      |L25.62|
|L25.80|
        CMP      r0,#0xa
        BEQ      |L25.128|
        ADD      r5,r0,r0,LSL #1
        MOVS     r6,#0
        STR      r4,[r2,r5,LSL #2]
        ADD      r4,r2,r5,LSL #2
        LDR      r5,[r3,#0x208]
        STR      r5,[r4,#4]
        LDRH     r3,[r3,#0x206]
        STRH     r3,[r4,#8]
        STRH     r6,[r4,#0xa]
|L25.112|
        CMP      r1,#0
        ADD      r1,r0,r0,LSL #1
        ADD      r1,r2,r1,LSL #2
        LDRH     r1,[r1,#0xa]
        BEQ      |L25.132|
        CBZ      r1,|L25.136|
|L25.128|
        MOVS     r0,#0
        POP      {r4-r7,pc}
|L25.132|
        ADDS     r1,r1,#1
        B        |L25.140|
|L25.136|
        MOV      r1,#0x100
|L25.140|
        ADD      r3,r0,r0,LSL #1
        ADDS     r0,r0,#1
        ADD      r2,r2,r3,LSL #2
        STRH     r1,[r2,#0xa]
        POP      {r4-r7,pc}
        ENDP

        DCW      0x0000
|L25.156|
        DCD      ||.bss||

        AREA ||i.ld_clust||, CODE, READONLY, ALIGN=1

ld_clust PROC
        LDRB     r2,[r0,#0x200]
        LDRH     r0,[r1,#0x1a]
        CMP      r2,#3
        BNE      |L26.16|
        LDRH     r1,[r1,#0x14]
        ORR      r0,r0,r1,LSL #16
|L26.16|
        BX       lr
        ENDP


        AREA ||i.mem_cpy||, CODE, READONLY, ALIGN=2

mem_cpy PROC
        B        |L27.12|
        NOP      
|L27.4|
        LDRB     r3,[r1],#1
        STRB     r3,[r0],#1
|L27.12|
        SUBS     r2,r2,#1
        BCS      |L27.4|
        BX       lr
        ENDP


        AREA ||i.mem_set||, CODE, READONLY, ALIGN=1

mem_set PROC
        UXTB     r1,r1
        B        |L28.8|
|L28.4|
        STRB     r1,[r0],#1
|L28.8|
        SUBS     r2,r2,#1
        BCS      |L28.4|
        BX       lr
        ENDP


        AREA ||i.move_window||, CODE, READONLY, ALIGN=1

move_window PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r0,[r0,#0x22c]
        MOVS     r6,#0
        MOV      r4,r1
        CMP      r0,r4
        BEQ      |L29.50|
        MOV      r0,r5
        BL       sync_window
        MOVS     r6,r0
        BNE      |L29.50|
        LDRB     r0,[r5,#0x201]
        MOVS     r3,#1
        MOV      r2,r4
        MOV      r1,r5
        BL       disk_read
        CBZ      r0,|L29.46|
        SUBS     r4,r6,#1
        MOVS     r6,#1
|L29.46|
        STR      r4,[r5,#0x22c]
|L29.50|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.put_fat||, CODE, READONLY, ALIGN=1

put_fat PROC
        PUSH     {r4-r10,lr}
        CMP      r1,#2
        MOV      r7,r2
        MOV      r5,r1
        MOV      r4,r0
        BCC      |L30.22|
        LDR      r0,[r4,#0x214]
        CMP      r0,r5
        BHI      |L30.28|
|L30.22|
        MOVS     r0,#2
|L30.24|
        POP      {r4-r10,pc}
|L30.28|
        LDRB     r1,[r4,#0x200]
        AND      r8,r7,#0xff
        MOV      r9,#1
        CMP      r1,#1
        BEQ      |L30.108|
        CMP      r1,#2
        BEQ      |L30.210|
        CMP      r1,#3
        BNE      |L30.22|
        LDR      r0,[r4,#0x220]
        ADD      r1,r0,r5,LSR #7
        MOV      r0,r4
        BL       move_window
        CMP      r0,#0
        BNE      |L30.24|
        MOV      r2,#0x1ff
        LSLS     r1,r2,#28
        AND      r2,r2,r5,LSL #2
        ADD      r2,r2,r4
        LDR      r5,[r2,#1]
        AND      r1,r1,r5,LSL #8
        ORRS     r1,r1,r7
        STRB     r1,[r2,#0]
        LSRS     r5,r1,#8
        STRB     r5,[r2,#1]
        LSRS     r6,r1,#16
        STRB     r6,[r2,#2]
        LSRS     r7,r1,#24
        STRB     r7,[r2,#3]
        B        |L30.242|
|L30.108|
        LDR      r0,[r4,#0x220]
        ADD      r6,r5,r5,LSR #1
        ADD      r1,r0,r6,LSR #9
        MOV      r0,r4
        BL       move_window
        CMP      r0,#0
        BNE      |L30.24|
        UBFX     r0,r6,#0,#9
        LSLS     r1,r5,#31
        ADD      r6,r6,#1
        ADD      r0,r0,r4
        BEQ      |L30.152|
        LDRB     r1,[r0,#0]
        BFI      r1,r8,#4,#28
        B        |L30.154|
|L30.152|
        MOV      r1,r7
|L30.154|
        STRB     r1,[r0,#0]
        STRB     r9,[r4,#0x204]
        LDR      r0,[r4,#0x220]
        ADD      r1,r0,r6,LSR #9
        MOV      r0,r4
        BL       move_window
        CMP      r0,#0
        BNE      |L30.24|
        UBFX     r1,r6,#0,#9
        LSLS     r2,r5,#31
        ADD      r1,r1,r4
        BEQ      |L30.194|
        UBFX     r2,r7,#4,#8
        B        |L30.206|
|L30.194|
        LDRB     r2,[r1,#0]
        UBFX     r3,r7,#8,#4
        AND      r2,r2,#0xf0
        ORRS     r2,r2,r3
|L30.206|
        STRB     r2,[r1,#0]
        B        |L30.242|
|L30.210|
        LDR      r0,[r4,#0x220]
        ADD      r1,r0,r5,LSR #8
        MOV      r0,r4
        BL       move_window
        CMP      r0,#0
        BNE      |L30.24|
        UXTB     r1,r5
        LSRS     r5,r7,#8
        ADD      r1,r4,r1,LSL #1
        STRB     r8,[r1,#0]
        STRB     r5,[r1,#1]
|L30.242|
        STRB     r9,[r4,#0x204]
        B        |L30.24|
        ENDP


        AREA ||i.st_clust||, CODE, READONLY, ALIGN=1

st_clust PROC
        PUSH     {r4,lr}
        STRB     r1,[r0,#0x1a]
        LSRS     r2,r1,#8
        STRB     r2,[r0,#0x1b]
        LSRS     r3,r1,#16
        STRB     r3,[r0,#0x14]
        LSRS     r4,r1,#24
        STRB     r4,[r0,#0x15]
        POP      {r4,pc}
        ENDP


        AREA ||i.sum_sfn||, CODE, READONLY, ALIGN=1

sum_sfn PROC
        MOV      r1,r0
        MOVS     r0,#0
        MOVS     r2,#0xb
        PUSH     {r4,lr}
|L32.8|
        LSRS     r4,r0,#1
        LDRB     r3,[r1],#1
        ADD      r0,r4,r0,LSL #7
        ADD      r0,r0,r3
        SUBS     r2,r2,#1
        UXTB     r0,r0
        BNE      |L32.8|
        POP      {r4,pc}
        ENDP


        AREA ||i.sync_fs||, CODE, READONLY, ALIGN=1

sync_fs PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        BL       sync_window
        MOVS     r9,r0
        BNE      |L33.188|
        LDRB     r0,[r4,#0x200]
        CMP      r0,#3
        BNE      |L33.170|
        LDRB     r0,[r4,#0x205]
        CMP      r0,#1
        BNE      |L33.170|
        LSLS     r2,r0,#9
        MOV      r0,r4
        MOVS     r1,#0
        BL       mem_set
        LDRD     r0,r1,[r4,#0x20c]
        LDR      r2,[r4,#0x21c]
        MOV      r12,#0x55
        STRB     r0,[r4,#0x1ec]
        MOVS     r7,#0x52
        STRB     r12,[r4,#0x1fe]
        MOV      r12,#0xaa
        STRB     r1,[r4,#0x1e8]
        MOVS     r3,#0x61
        STRB     r12,[r4,#0x1ff]
        MOVS     r5,#0x41
        STRB     r7,[r4,#0]
        MOVS     r6,#0x72
        STRB     r7,[r4,#1]
        LSRS     r7,r1,#8
        STRB     r3,[r4,#2]
        LSR      r12,r1,#16
        STRB     r5,[r4,#3]
        LSRS     r1,r1,#24
        STRB     r6,[r4,#0x1e4]
        LSR      r8,r0,#8
        STRB     r6,[r4,#0x1e5]
        LSRS     r6,r0,#16
        STRB     r5,[r4,#0x1e6]
        LSRS     r0,r0,#24
        STRB     r3,[r4,#0x1e7]
        ADDS     r2,r2,#1
        STRB     r7,[r4,#0x1e9]
        MOVS     r3,#1
        STRB     r12,[r4,#0x1ea]
        STRB     r1,[r4,#0x1eb]
        MOV      r1,r4
        STRB     r8,[r4,#0x1ed]
        STRB     r6,[r4,#0x1ee]
        STRB     r0,[r4,#0x1ef]
        STR      r2,[r4,#0x22c]
        LDRB     r0,[r4,#0x201]
        BL       disk_write
        MOVS     r0,#0
        STRB     r0,[r4,#0x205]
|L33.170|
        MOVS     r2,#0
        LDRB     r0,[r4,#0x201]
        MOV      r1,r2
        BL       disk_ioctl
        CBZ      r0,|L33.188|
        MOV      r9,#1
|L33.188|
        MOV      r0,r9
        POP      {r4-r10,pc}
        ENDP


        AREA ||i.sync_window||, CODE, READONLY, ALIGN=1

sync_window PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0x204]
        MOVS     r7,#0
        CBZ      r0,|L34.90|
        LDR      r5,[r4,#0x22c]
        MOVS     r3,#1
        LDRB     r0,[r4,#0x201]
        MOV      r1,r4
        MOV      r2,r5
        BL       disk_write
        CBZ      r0,|L34.38|
        MOVS     r7,#1
        B        |L34.90|
|L34.38|
        LDR      r2,[r4,#0x220]
        MOVS     r0,#0
        LDR      r1,[r4,#0x218]
        SUBS     r2,r5,r2
        STRB     r0,[r4,#0x204]
        CMP      r2,r1
        BCS      |L34.90|
        LDRB     r6,[r4,#0x203]
        B        |L34.86|
|L34.64|
        LDR      r0,[r4,#0x218]
        MOVS     r3,#1
        MOV      r1,r4
        ADD      r5,r5,r0
        LDRB     r0,[r4,#0x201]
        MOV      r2,r5
        BL       disk_write
        SUBS     r6,r6,#1
|L34.86|
        CMP      r6,#2
        BCS      |L34.64|
|L34.90|
        MOV      r0,r7
        POP      {r4-r8,pc}
        ENDP


        AREA ||i.validate||, CODE, READONLY, ALIGN=1

validate PROC
        PUSH     {r4,lr}
        CBZ      r0,|L35.40|
        LDR      r1,[r0,#0x200]
        CBZ      r1,|L35.40|
        LDRB     r2,[r1,#0x200]
        CBZ      r2,|L35.40|
        LDRH     r2,[r1,#0x206]
        LDRH     r0,[r0,#0x204]
        CMP      r2,r0
        BNE      |L35.40|
        LDRB     r0,[r1,#0x201]
        BL       disk_status
        LSLS     r0,r0,#31
        BEQ      |L35.42|
|L35.40|
        MOVS     r0,#9
|L35.42|
        POP      {r4,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

Files
        %        120
LfnBuf
        %        512

        AREA ||.constdata||, DATA, READONLY, ALIGN=0

ExCvt
        DCB      0x80,0x9a,0x90,0xb6
        DCB      0x8e,0xb7,0x8f,0x80
        DCB      0xd2,0xd3,0xd4,0xd8
        DCB      0xd7,0xde,0x8e,0x8f
        DCB      0x90,0x92,0x92,0xe2
        DCB      0x99,0xe3,0xea,0xeb
        DCB      0x59,0x99,0x9a,0x9d
        DCB      0x9c,0x9d,0x9e,0x9f
        DCB      0xb5,0xd6,0xe0,0xe9
        DCB      0xa5,0xa5,0xa6,0xa7
        DCB      0xa8,0xa9,0xaa,0xab
        DCB      0xac,0x21,0xae,0xaf
        DCB      0xb0,0xb1,0xb2,0xb3
        DCB      0xb4,0xb5,0xb6,0xb7
        DCB      0xb8,0xb9,0xba,0xbb
        DCB      0xbc,0xbd,0xbe,0xbf
        DCB      0xc0,0xc1,0xc2,0xc3
        DCB      0xc4,0xc5,0xc7,0xc7
        DCB      0xc8,0xc9,0xca,0xcb
        DCB      0xcc,0xcd,0xce,0xcf
        DCB      0xd0,0xd1,0xd2,0xd3
        DCB      0xd4,0xd5,0xd6,0xd7
        DCB      0xd8,0xd9,0xda,0xdb
        DCB      0xdc,0xdd,0xde,0xdf
        DCB      0xe0,0xe1,0xe2,0xe3
        DCB      0xe5,0xe5,0xe6,0xe7
        DCB      0xe7,0xe9,0xea,0xeb
        DCB      0xed,0xed,0xee,0xef
        DCB      0xf0,0xf1,0xf2,0xf3
        DCB      0xf4,0xf5,0xf6,0xf7
        DCB      0xf8,0xf9,0xfa,0xfb
        DCB      0xfc,0xfd,0xfe,0xff
LfnOfs
        DCB      0x01,0x03,0x05,0x07
        DCB      0x09,0x0e,0x10,0x12
        DCB      0x14,0x16,0x18,0x1c
        DCB      0x1e

        AREA ||.data||, DATA, ALIGN=2

Fsid
        DCB      0x00,0x00,0x00,0x00
FatFs
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "../Middlewares/Third_Party/FatFs/src/ff.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___4_ff_c_3f41df3e____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___4_ff_c_3f41df3e____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___4_ff_c_3f41df3e____REVSH|
#line 402
|__asm___4_ff_c_3f41df3e____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___4_ff_c_3f41df3e____RRX|
#line 587
|__asm___4_ff_c_3f41df3e____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT clust2sect [CODE]
        EXPORT f_close [CODE]
        EXPORT f_lseek [CODE]
        EXPORT f_mount [CODE]
        EXPORT f_open [CODE]
        EXPORT f_read [CODE]
        EXPORT f_sync [CODE]
        EXPORT f_write [CODE]
        EXPORT get_fat [CODE]
        EXPORT put_fat [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT disk_write [CODE]
        IMPORT disk_read [CODE]
        IMPORT ff_wtoupper [CODE]
        IMPORT ff_convert [CODE]
        IMPORT disk_status [CODE]
        IMPORT disk_initialize [CODE]
        IMPORT get_fattime [CODE]
        IMPORT disk_ioctl [CODE]

        KEEP check_fs
        KEEP chk_chr
        KEEP chk_lock
        KEEP clear_lock
        KEEP clmt_clust
        KEEP create_chain
        KEEP create_name
        KEEP dir_find
        KEEP dir_next
        KEEP dir_register
        KEEP dir_sdi
        KEEP find_volume
        KEEP follow_path
        KEEP gen_numname
        KEEP get_ldnumber
        KEEP inc_lock
        KEEP ld_clust
        KEEP mem_cpy
        KEEP mem_set
        KEEP move_window
        KEEP st_clust
        KEEP sum_sfn
        KEEP sync_fs
        KEEP sync_window
        KEEP validate
        KEEP Files
        KEEP LfnBuf
        KEEP ExCvt
        KEEP LfnOfs
        KEEP Fsid
        KEEP FatFs

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
