; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\stm32f7xx_hal_uart.o --depend=cnn_1\stm32f7xx_hal_uart.d --cpu=Cortex-M7 --fpu=SoftVFP --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\stm32f7xx_hal_uart.crf ../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_HalfDuplex_EnableReceiver||, CODE, READONLY, ALIGN=1

HAL_HalfDuplex_EnableReceiver PROC
        PUSH     {r4,lr}
        LDRB     r1,[r0,#0x68]
        CMP      r1,#1
        BEQ      |L1.58|
        MOVS     r2,#1
        STRB     r2,[r0,#0x68]
        MOVS     r1,#0x24
        STRB     r1,[r0,#0x69]
        MOVS     r2,#0x20
        MOVS     r3,#0
        LDR      r1,[r0],#0x68
        LDR      r4,[r1,#0]
        BIC      r4,r4,#0xc
        STR      r4,[r1,#0]
        LDR      r1,[r0,#-0x68]
        LDR      r4,[r1,#0]
        ORR      r4,r4,#4
        STR      r4,[r1,#0]
        STRB     r2,[r0,#1]
        STRB     r3,[r0,#0]
        MOV      r0,r3
        POP      {r4,pc}
|L1.58|
        MOVS     r0,#2
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_HalfDuplex_EnableTransmitter||, CODE, READONLY, ALIGN=1

HAL_HalfDuplex_EnableTransmitter PROC
        PUSH     {r4,lr}
        LDRB     r1,[r0,#0x68]
        CMP      r1,#1
        BEQ      |L2.58|
        MOVS     r2,#1
        STRB     r2,[r0,#0x68]
        MOVS     r1,#0x24
        STRB     r1,[r0,#0x69]
        MOVS     r2,#0x20
        MOVS     r3,#0
        LDR      r1,[r0],#0x68
        LDR      r4,[r1,#0]
        BIC      r4,r4,#0xc
        STR      r4,[r1,#0]
        LDR      r1,[r0,#-0x68]
        LDR      r4,[r1,#0]
        ORR      r4,r4,#8
        STR      r4,[r1,#0]
        STRB     r2,[r0,#1]
        STRB     r3,[r0,#0]
        MOV      r0,r3
        POP      {r4,pc}
|L2.58|
        MOVS     r0,#2
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_HalfDuplex_Init||, CODE, READONLY, ALIGN=1

HAL_HalfDuplex_Init PROC
        PUSH     {r4,lr}
        MOVS     r4,r0
        BEQ      |L3.14|
        LDRB     r0,[r4,#0x69]
        CBZ      r0,|L3.18|
        B        |L3.30|
|L3.14|
        MOVS     r0,#1
|L3.16|
        POP      {r4,pc}
|L3.18|
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L3.30|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BEQ      |L3.16|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L3.66|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L3.66|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#4]
        BIC      r1,r1,#0x4800
        STR      r1,[r0,#4]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#8]
        BIC      r1,r1,#0x22
        STR      r1,[r0,#8]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#8]
        ORR      r1,r1,#8
        STR      r1,[r0,#8]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
        MOV      r0,r4
        POP      {r4,lr}
        B.W      UART_CheckIdleState
        ENDP


        AREA ||i.HAL_LIN_Init||, CODE, READONLY, ALIGN=1

HAL_LIN_Init PROC
        PUSH     {r4-r6,lr}
        MOVS     r4,r0
        MOV      r5,r1
        BEQ      |L4.16|
        LDRB     r0,[r4,#0x69]
        CBZ      r0,|L4.20|
        B        |L4.32|
|L4.16|
        MOVS     r0,#1
|L4.18|
        POP      {r4-r6,pc}
|L4.20|
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L4.32|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BEQ      |L4.18|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L4.68|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L4.68|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#4]
        BIC      r1,r1,#0x800
        STR      r1,[r0,#4]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#8]
        BIC      r1,r1,#0x2a
        STR      r1,[r0,#8]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#4]
        ORR      r1,r1,#0x4000
        STR      r1,[r0,#4]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#4]
        BIC      r1,r1,#0x20
        ORRS     r1,r1,r5
        STR      r1,[r0,#4]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
        MOV      r0,r4
        POP      {r4-r6,lr}
        B.W      UART_CheckIdleState
        ENDP


        AREA ||i.HAL_LIN_SendBreak||, CODE, READONLY, ALIGN=1

HAL_LIN_SendBreak PROC
        PUSH     {r4,lr}
        LDRB     r1,[r0,#0x68]
        CMP      r1,#1
        BEQ      |L5.46|
        MOVS     r2,#1
        STRB     r2,[r0,#0x68]
        MOVS     r1,#0x24
        STRB     r1,[r0,#0x69]
        MOVS     r3,#0x20
        MOVS     r2,#0
        LDR      r1,[r0],#0x68
        LDR      r4,[r1,#0x18]
        ORR      r4,r4,#2
        STR      r4,[r1,#0x18]
        STRB     r3,[r0,#1]
        STRB     r2,[r0,#0]
        MOV      r0,r2
        POP      {r4,pc}
|L5.46|
        MOVS     r0,#2
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_MultiProcessorEx_AddressLength_Set||, CODE, READONLY, ALIGN=1

HAL_MultiProcessorEx_AddressLength_Set PROC
        CBZ      r0,|L6.44|
        MOVS     r2,#0x24
        STRB     r2,[r0,#0x69]
        LDR      r2,[r0,#0]
        LDR      r3,[r2,#0]
        BIC      r3,r3,#1
        STR      r3,[r2,#0]
        LDR      r2,[r0,#0]
        LDR      r3,[r2,#4]
        BIC      r3,r3,#0x10
        ORRS     r3,r3,r1
        STR      r3,[r2,#4]
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#0]
        ORR      r2,r2,#1
        STR      r2,[r1,#0]
        B.W      UART_CheckIdleState
|L6.44|
        MOVS     r0,#1
        BX       lr
        ENDP


        AREA ||i.HAL_MultiProcessor_DisableMuteMode||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_DisableMuteMode PROC
        LDRB     r1,[r0,#0x68]
        CMP      r1,#1
        BEQ      |L7.40|
        MOVS     r2,#1
        STRB     r2,[r0,#0x68]
        MOVS     r1,#0x24
        STRB     r1,[r0,#0x69]
        MOVS     r2,#0x20
        LDR      r1,[r0,#0]
        LDR      r3,[r1,#0]
        BIC      r3,r3,#0x2000
        STR      r3,[r1,#0]
        STRB     r2,[r0,#0x69]
        B.W      UART_CheckIdleState
|L7.40|
        MOVS     r0,#2
        BX       lr
        ENDP


        AREA ||i.HAL_MultiProcessor_EnableMuteMode||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_EnableMuteMode PROC
        LDRB     r1,[r0,#0x68]
        CMP      r1,#1
        BEQ      |L8.40|
        MOVS     r2,#1
        STRB     r2,[r0,#0x68]
        MOVS     r1,#0x24
        STRB     r1,[r0,#0x69]
        MOVS     r2,#0x20
        LDR      r1,[r0,#0]
        LDR      r3,[r1,#0]
        ORR      r3,r3,#0x2000
        STR      r3,[r1,#0]
        STRB     r2,[r0,#0x69]
        B.W      UART_CheckIdleState
|L8.40|
        MOVS     r0,#2
        BX       lr
        ENDP


        AREA ||i.HAL_MultiProcessor_EnterMuteMode||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_EnterMuteMode PROC
        LDR      r0,[r0,#0]
        LDR      r1,[r0,#0x18]
        ORR      r1,r1,#4
        STR      r1,[r0,#0x18]
        BX       lr
        ENDP


        AREA ||i.HAL_MultiProcessor_Init||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_Init PROC
        PUSH     {r4-r6,lr}
        MOVS     r4,r0
        MOV      r5,r2
        MOV      r6,r1
        BEQ      |L10.18|
        LDRB     r0,[r4,#0x69]
        CBZ      r0,|L10.22|
        B        |L10.34|
|L10.18|
        MOVS     r0,#1
|L10.20|
        POP      {r4-r6,pc}
|L10.22|
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L10.34|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BEQ      |L10.20|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L10.70|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L10.70|
        LDR      r0,[r4,#0]
        CMP      r5,#0x800
        LDR      r1,[r0,#4]
        BIC      r1,r1,#0x4800
        STR      r1,[r0,#4]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#8]
        BIC      r1,r1,#0x2a
        STR      r1,[r0,#8]
        BNE      |L10.106|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#4]
        BFI      r1,r6,#24,#8
        STR      r1,[r0,#4]
|L10.106|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#0x800
        ORRS     r1,r1,r5
        STR      r1,[r0,#0]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
        MOV      r0,r4
        POP      {r4-r6,lr}
        B.W      UART_CheckIdleState
        ENDP


        AREA ||i.HAL_RS485Ex_Init||, CODE, READONLY, ALIGN=2

HAL_RS485Ex_Init PROC
        PUSH     {r4-r8,lr}
        MOVS     r4,r0
        MOV      r5,r3
        MOV      r6,r2
        MOV      r7,r1
        BEQ      |L11.22|
        LDRB     r0,[r4,#0x69]
        CBZ      r0,|L11.28|
        B        |L11.40|
|L11.22|
        MOVS     r0,#1
|L11.24|
        POP      {r4-r8,pc}
|L11.28|
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L11.40|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BEQ      |L11.24|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L11.76|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L11.76|
        LDR      r0,[r4,#0]
        LSLS     r1,r6,#21
        LDR      r2,|L11.136|
        ORR      r1,r1,r5,LSL #16
        LDR      r3,[r0,#8]
        ORR      r3,r3,#0x4000
        STR      r3,[r0,#8]
        LDR      r0,[r4,#0]
        LDR      r3,[r0,#8]
        BIC      r3,r3,#0x8000
        ORRS     r3,r3,r7
        STR      r3,[r0,#8]
        LDR      r0,[r4,#0]
        LDR      r3,[r0,#0]
        ANDS     r3,r3,r2
        ORRS     r3,r3,r1
        STR      r3,[r0,#0]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
        MOV      r0,r4
        POP      {r4-r8,lr}
        B.W      UART_CheckIdleState
        ENDP

|L11.136|
        DCD      0xfc00ffff

        AREA ||i.HAL_UART_DMAPause||, CODE, READONLY, ALIGN=1

HAL_UART_DMAPause PROC
        LDRB     r1,[r0,#0x68]
        CMP      r1,#1
        BEQ      |L12.24|
        LDRB     r2,[r0,#0x69]
        MOVS     r1,#1
        STRB     r1,[r0,#0x68]
        CMP      r2,#0x21
        BEQ      |L12.28|
        B        |L12.44|
|L12.24|
        MOVS     r0,#2
        BX       lr
|L12.28|
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#8]
        LSLS     r2,r2,#24
        BPL      |L12.44|
        LDR      r2,[r1,#8]
        BIC      r2,r2,#0x80
        STR      r2,[r1,#8]
|L12.44|
        LDRB     r1,[r0,#0x6a]
        CMP      r1,#0x22
        BNE      |L12.88|
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#8]
        LSLS     r2,r2,#25
        BPL      |L12.88|
        LDR      r2,[r1,#0]
        BIC      r2,r2,#0x100
        STR      r2,[r1,#0]
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#8]
        BIC      r2,r2,#1
        STR      r2,[r1,#8]
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#8]
        BIC      r2,r2,#0x40
        STR      r2,[r1,#8]
|L12.88|
        MOVS     r1,#0
        STRB     r1,[r0,#0x68]
        MOV      r0,r1
        BX       lr
        ENDP


        AREA ||i.HAL_UART_DMAResume||, CODE, READONLY, ALIGN=1

HAL_UART_DMAResume PROC
        LDRB     r1,[r0,#0x68]
        CMP      r1,#1
        BEQ      |L13.24|
        LDRB     r2,[r0,#0x69]
        MOVS     r1,#1
        STRB     r1,[r0,#0x68]
        CMP      r2,#0x21
        BEQ      |L13.28|
        B        |L13.38|
|L13.24|
        MOVS     r0,#2
        BX       lr
|L13.28|
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#8]
        ORR      r2,r2,#0x80
        STR      r2,[r1,#8]
|L13.38|
        LDRB     r1,[r0,#0x6a]
        CMP      r1,#0x22
        BNE      |L13.82|
        LDR      r2,[r0,#0]
        MOVS     r1,#8
        STR      r1,[r2,#0x20]
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#0]
        ORR      r2,r2,#0x100
        STR      r2,[r1,#0]
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#8]
        ORR      r2,r2,#1
        STR      r2,[r1,#8]
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#8]
        ORR      r2,r2,#0x40
        STR      r2,[r1,#8]
|L13.82|
        LDR      r0,[r0,#0]
        LDR      r1,[r0,#0]
        LSLS     r1,r1,#31
        BNE      |L13.98|
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
|L13.98|
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.HAL_UART_DMAStop||, CODE, READONLY, ALIGN=1

HAL_UART_DMAStop PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0x69]
        CMP      r0,#0x21
        BNE      |L14.42|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#8]
        LSLS     r1,r1,#24
        BPL      |L14.42|
        LDR      r1,[r0,#8]
        BIC      r1,r1,#0x80
        STR      r1,[r0,#8]
        LDR      r0,[r4,#0x60]
        CBZ      r0,|L14.36|
        BL       HAL_DMA_Abort
|L14.36|
        MOV      r0,r4
        BL       UART_EndTxTransfer
|L14.42|
        LDRB     r0,[r4,#0x6a]
        CMP      r0,#0x22
        BNE      |L14.80|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#8]
        LSLS     r1,r1,#25
        BPL      |L14.80|
        LDR      r1,[r0,#8]
        BIC      r1,r1,#0x40
        STR      r1,[r0,#8]
        LDR      r0,[r4,#0x64]
        CBZ      r0,|L14.74|
        BL       HAL_DMA_Abort
|L14.74|
        MOV      r0,r4
        BL       UART_EndRxTransfer
|L14.80|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_UART_DeInit||, CODE, READONLY, ALIGN=1

HAL_UART_DeInit PROC
        PUSH     {r4-r6,lr}
        MOVS     r4,r0
        BEQ      |L15.60|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        MOVS     r5,#0
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        LDR      r0,[r4,#0]
        STR      r5,[r0,#0]
        LDR      r0,[r4,#0]
        STR      r5,[r0,#4]
        LDR      r0,[r4,#0]
        STR      r5,[r0,#8]
        MOV      r0,r4
        BL       HAL_UART_MspDeInit
        STR      r5,[r4,#0x6c]
        STRB     r5,[r4,#0x69]
        STRB     r5,[r4,#0x6a]
        MOVS     r0,#0
        STRB     r5,[r4,#0x68]
        POP      {r4-r6,pc}
|L15.60|
        MOVS     r0,#1
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.HAL_UART_ErrorCallback||, CODE, READONLY, ALIGN=1

HAL_UART_ErrorCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_GetError||, CODE, READONLY, ALIGN=1

HAL_UART_GetError PROC
        LDR      r0,[r0,#0x6c]
        BX       lr
        ENDP


        AREA ||i.HAL_UART_GetState||, CODE, READONLY, ALIGN=1

HAL_UART_GetState PROC
        LDRB     r1,[r0,#0x69]
        LDRB     r0,[r0,#0x6a]
        ORRS     r0,r0,r1
        BX       lr
        ENDP


        AREA ||i.HAL_UART_IRQHandler||, CODE, READONLY, ALIGN=2

HAL_UART_IRQHandler PROC
        PUSH     {r4-r6,lr}
        LDR      r1,[r0,#0]
        MOV      r4,r0
        LDR      r0,[r1,#0x1c]
        LDR      r2,[r1,#0]
        LDR      r3,[r1,#8]
        TST      r0,#0xf
        BEQ      |L19.204|
        AND      r5,r3,#1
        AND      r6,r2,#0x120
        ORRS     r6,r6,r5
        BEQ      |L19.242|
        LSLS     r6,r0,#31
        BEQ      |L19.50|
        LSLS     r6,r2,#23
        BPL      |L19.50|
        MOVS     r6,#1
        STR      r6,[r1,#0x20]
        LDR      r1,[r4,#0x6c]
        ORR      r1,r1,#1
        STR      r1,[r4,#0x6c]
|L19.50|
        LSLS     r1,r0,#30
        BPL      |L19.72|
        LSLS     r1,r3,#31
        BEQ      |L19.72|
        LDR      r6,[r4,#0]
        MOVS     r1,#2
        STR      r1,[r6,#0x20]
        LDR      r1,[r4,#0x6c]
        ORR      r1,r1,#4
        STR      r1,[r4,#0x6c]
|L19.72|
        LSLS     r1,r0,#29
        BPL      |L19.94|
        LSLS     r1,r3,#31
        BEQ      |L19.94|
        LDR      r3,[r4,#0]
        MOVS     r1,#4
        STR      r1,[r3,#0x20]
        LDR      r1,[r4,#0x6c]
        ORR      r1,r1,#2
        STR      r1,[r4,#0x6c]
|L19.94|
        LSLS     r1,r0,#28
        BPL      |L19.120|
        AND      r1,r2,#0x20
        ORRS     r1,r1,r5
        BEQ      |L19.120|
        LDR      r3,[r4,#0]
        MOVS     r1,#8
        STR      r1,[r3,#0x20]
        LDR      r1,[r4,#0x6c]
        ORR      r1,r1,#8
        STR      r1,[r4,#0x6c]
|L19.120|
        LDR      r1,[r4,#0x6c]
        CMP      r1,#0
        BEQ      |L19.228|
        LSLS     r0,r0,#26
        BPL      |L19.140|
        LSLS     r0,r2,#26
        BPL      |L19.140|
        MOV      r0,r4
        BL       UART_Receive_IT
|L19.140|
        LDR      r0,[r4,#0x6c]
        LSLS     r0,r0,#28
        BMI      |L19.154|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSLS     r0,r0,#25
        BPL      |L19.230|
|L19.154|
        MOV      r0,r4
        BL       UART_EndRxTransfer
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#8]
        LSLS     r1,r1,#25
        BPL      |L19.222|
        LDR      r1,[r0,#8]
        BIC      r1,r1,#0x40
        STR      r1,[r0,#8]
        LDR      r0,[r4,#0x64]
        CBZ      r0,|L19.222|
        LDR      r1,|L19.372|
        STR      r1,[r0,#0x50]
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Abort_IT
        CMP      r0,#0
        BEQ      |L19.228|
        LDR      r0,[r4,#0x64]
        LDR      r1,[r0,#0x50]
        POP      {r4-r6,lr}
        BX       r1
|L19.204|
        LSLS     r3,r0,#26
        BPL      |L19.242|
        LSLS     r3,r2,#26
        BPL      |L19.242|
        MOV      r0,r4
        POP      {r4-r6,lr}
        B.W      UART_Receive_IT
|L19.222|
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
|L19.228|
        POP      {r4-r6,pc}
|L19.230|
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
|L19.240|
        POP      {r4-r6,pc}
|L19.242|
        LSLS     r3,r0,#24
        BPL      |L19.342|
        LSLS     r3,r2,#24
        BPL      |L19.342|
        LDRB     r0,[r4,#0x69]
        CMP      r0,#0x21
        BNE      |L19.240|
        LDRH     r0,[r4,#0x52]
        CBZ      r0,|L19.274|
        LDR      r0,[r4,#8]
        CMP      r0,#0x1000
        BEQ      |L19.294|
        B        |L19.298|
|L19.274|
        LDR      r0,[r1,#0]
        BIC      r0,r0,#0x80
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x40
        STR      r1,[r0,#0]
        POP      {r4-r6,pc}
|L19.294|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L19.324|
|L19.298|
        LDR      r0,[r4,#0x4c]
        ADDS     r1,r0,#1
        STR      r1,[r4,#0x4c]
        LDR      r1,[r4,#0]
        LDRB     r0,[r0,#0]
        STR.W    r0,[r1,#0x28]
|L19.312|
        LDRH     r0,[r4,#0x52]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x52]
|L19.322|
        POP      {r4-r6,pc}
|L19.324|
        LDR      r0,[r4,#0x4c]
        LDRH     r0,[r0,#0]
        UBFX     r0,r0,#0,#9
        STR      r0,[r1,#0x28]
        LDR      r0,[r4,#0x4c]
        ADDS     r0,r0,#2
        STR      r0,[r4,#0x4c]
        B        |L19.312|
|L19.342|
        LSLS     r0,r0,#25
        BPL      |L19.322|
        LSLS     r0,r2,#25
        BPL      |L19.322|
        LDR      r3,[r1,#0]
        MOVS     r2,#0x20
        MOV      r0,r4
        BIC      r3,r3,#0x40
        STR      r3,[r1,#0]
        STRB     r2,[r4,#0x69]
        BL       HAL_UART_TxCpltCallback
        POP      {r4-r6,pc}
        ENDP

|L19.372|
        DCD      UART_DMAAbortOnError

        AREA ||i.HAL_UART_Init||, CODE, READONLY, ALIGN=1

HAL_UART_Init PROC
        PUSH     {r4,lr}
        MOVS     r4,r0
        BEQ      |L20.14|
        LDRB     r0,[r4,#0x69]
        CBZ      r0,|L20.18|
        B        |L20.30|
|L20.14|
        MOVS     r0,#1
|L20.16|
        POP      {r4,pc}
|L20.18|
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L20.30|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        BIC      r1,r1,#1
        STR      r1,[r0,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BEQ      |L20.16|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L20.66|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L20.66|
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#4]
        BIC      r1,r1,#0x4800
        STR      r1,[r0,#4]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#8]
        BIC      r1,r1,#0x2a
        STR      r1,[r0,#8]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#1
        STR      r1,[r0,#0]
        MOV      r0,r4
        POP      {r4,lr}
        B.W      UART_CheckIdleState
        ENDP


        AREA ||i.HAL_UART_MspDeInit||, CODE, READONLY, ALIGN=1

HAL_UART_MspDeInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_MspInit||, CODE, READONLY, ALIGN=1

HAL_UART_MspInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_Receive||, CODE, READONLY, ALIGN=1

HAL_UART_Receive PROC
        PUSH     {r3-r11,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0x6a]
        MOV      r10,r3
        MOV      r6,r2
        MOV      r5,r1
        CMP      r0,#0x20
        BNE      |L23.228|
        CBZ      r5,|L23.82|
        CBZ      r6,|L23.82|
        LDRB     r0,[r4,#0x68]
        CMP      r0,#1
        BEQ      |L23.228|
        MOVS     r7,#0
        MOVS     r1,#1
        STRB     r1,[r4,#0x68]
        MOVS     r0,#0x22
        STR      r7,[r4,#0x6c]
        STRB     r0,[r4,#0x6a]
        ADDS     r4,r4,#0x4c
        BL       HAL_GetTick
        MOV      r9,r0
        LDR      r0,[r4,#-0x44]
        STRH     r6,[r4,#0xc]
        MOV      r8,#0x1000
        STRH     r6,[r4,#0xe]
        MOVS     r1,#0xff
        SUBS     r4,r4,#0x4c
        CMP      r0,r8
        BNE      |L23.94|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L23.88|
        B        |L23.112|
|L23.82|
        MOVS     r0,#1
|L23.84|
        POP      {r3-r11,pc}
|L23.88|
        MOV      r0,#0x1ff
        B        |L23.124|
|L23.94|
        MOV      r2,#0x7f
        CBZ      r0,|L23.108|
        CMP      r0,#0x10000000
        BEQ      |L23.118|
        B        |L23.128|
|L23.108|
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L23.134|
|L23.112|
        STRH     r1,[r4,#0x5c]
        B        |L23.128|
|L23.118|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L23.134|
        MOVS     r0,#0x3f
|L23.124|
        STRH     r0,[r4,#0x5c]
|L23.128|
        LDRH     r6,[r4,#0x5c]
        B        |L23.192|
|L23.134|
        STRH     r2,[r4,#0x5c]
        B        |L23.128|
|L23.140|
        LDRH     r0,[r4,#0x5a]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x5a]
        MOVS     r2,#0
        MOV      r3,r9
        MOVS     r1,#0x20
        MOV      r0,r4
        STR      r10,[sp,#0]
        BL       UART_WaitOnFlagUntilTimeout
        CBZ      r0,|L23.172|
        MOVS     r0,#3
        B        |L23.84|
|L23.172|
        LDR      r0,[r4,#8]
        CMP      r0,r8
        BNE      |L23.182|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L23.214|
|L23.182|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x24]
        ANDS     r0,r0,r6
        STRB     r0,[r5],#1
|L23.192|
        LDRH     r0,[r4,#0x5a]
        CMP      r0,#0
        BNE      |L23.140|
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x6a]
        MOVS     r0,#0
        STRB     r7,[r4,#0x68]
        B        |L23.84|
|L23.214|
        LDR      r1,[r4,#0]
        MOV      r0,r5
        ADDS     r5,r5,#2
        LDR      r1,[r1,#0x24]
        ANDS     r1,r1,r6
        STRH     r1,[r0,#0]
        B        |L23.192|
|L23.228|
        MOVS     r0,#2
        B        |L23.84|
        ENDP


        AREA ||i.HAL_UART_Receive_DMA||, CODE, READONLY, ALIGN=2

HAL_UART_Receive_DMA PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0x6a]
        CMP      r0,#0x20
        BNE      |L24.130|
        CBZ      r1,|L24.124|
        CBZ      r2,|L24.124|
        LDRB     r0,[r4,#0x68]
        CMP      r0,#1
        BEQ      |L24.130|
        MOVS     r3,#1
        STRB     r3,[r4,#0x68]
        STR      r1,[r4,#0x54]
        MOVS     r5,#0
        STRH     r2,[r4,#0x58]
        MOVS     r0,#0x22
        STR      r5,[r4,#0x6c]
        STRB     r0,[r4,#0x6a]
        LDR      r3,[r4,#0x64]
        LDR      r0,|L24.136|
        STR      r0,[r3,#0x3c]
        LDR      r3,[r4,#0x64]
        LDR      r0,|L24.140|
        STR      r0,[r3,#0x40]
        LDR      r3,[r4,#0x64]
        LDR      r0,|L24.144|
        STR      r0,[r3,#0x4c]
        MOV      r3,r2
        LDR      r0,[r4,#0x64]
        STR      r5,[r0,#0x50]
        MOV      r0,r1
        LDR      r6,[r4,#0x64]
        MOV      r2,r0
        LDR      r1,[r4,#0]
        MOV      r0,r6
        ADDS     r1,r1,#0x24
        BL       HAL_DMA_Start_IT
        STRB     r5,[r4,#0x68]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x100
        STR      r1,[r0,#0]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#8]
        ORR      r1,r1,#1
        STR      r1,[r0,#8]
        LDR      r0,[r4,#0]
        LDR      r1,[r0,#8]
        ORR      r1,r1,#0x40
        STR      r1,[r0,#8]
        MOVS     r0,#0
|L24.122|
        POP      {r4-r6,pc}
|L24.124|
        B        |L24.126|
|L24.126|
        MOVS     r0,#1
        B        |L24.122|
|L24.130|
        MOVS     r0,#2
        B        |L24.122|
        ENDP

        DCW      0x0000
|L24.136|
        DCD      UART_DMAReceiveCplt
|L24.140|
        DCD      UART_DMARxHalfCplt
|L24.144|
        DCD      UART_DMAError

        AREA ||i.HAL_UART_Receive_IT||, CODE, READONLY, ALIGN=1

HAL_UART_Receive_IT PROC
        PUSH     {r4,lr}
        LDRB     r3,[r0,#0x6a]
        CMP      r3,#0x20
        BNE      |L25.138|
        CBZ      r1,|L25.64|
        CBZ      r2,|L25.64|
        LDRB     r3,[r0,#0x68]
        CMP      r3,#1
        BEQ      |L25.138|
        LDR      r3,[r0,#8]
        MOVS     r4,#1
        STR      r1,[r0,#0x54]
        STRB     r4,[r0,#0x68]
        STRH     r2,[r0,#0x58]
        STRH     r2,[r0,#0x5a]
        CMP      r3,#0x1000
        MOV      r1,#0xff
        BEQ      |L25.68|
        MOV      r2,#0x7f
        CBZ      r3,|L25.78|
        CMP      r3,#0x10000000
        BEQ      |L25.88|
        B        |L25.100|
|L25.64|
        MOVS     r0,#1
        POP      {r4,pc}
|L25.68|
        LDR      r2,[r0,#0x10]
        CBNZ     r2,|L25.82|
        MOV      r1,#0x1ff
        B        |L25.82|
|L25.78|
        LDR      r3,[r0,#0x10]
        CBNZ     r3,|L25.96|
|L25.82|
        STRH     r1,[r0,#0x5c]
        B        |L25.100|
|L25.88|
        LDR      r1,[r0,#0x10]
        CBZ      r1,|L25.96|
        MOVS     r1,#0x3f
        B        |L25.82|
|L25.96|
        STRH     r2,[r0,#0x5c]
|L25.100|
        MOVS     r1,#0
        MOVS     r2,#0x22
        STR      r1,[r0,#0x6c]
        STRB     r2,[r0,#0x6a]
        STRB     r1,[r0,#0x68]
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#8]
        ORR      r2,r2,#1
        STR      r2,[r1,#8]
        LDR      r0,[r0,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x120
        STR      r1,[r0,#0]
        MOVS     r0,#0
        POP      {r4,pc}
|L25.138|
        MOVS     r0,#2
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_UART_RxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_RxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_RxHalfCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_RxHalfCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_Transmit||, CODE, READONLY, ALIGN=2

HAL_UART_Transmit PROC
        PUSH     {r3-r9,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0x69]
        MOV      r7,r3
        MOV      r6,r2
        MOV      r5,r1
        CMP      r0,#0x20
        BNE      |L28.178|
        CBZ      r5,|L28.72|
        CBZ      r6,|L28.72|
        LDRB     r0,[r4,#0x68]
        CMP      r0,#1
        BEQ      |L28.178|
        MOVS     r2,#1
        STRB     r2,[r4,#0x68]
        MOVS     r1,#0x21
        MOV      r8,#0
        STR      r8,[r4,#0x6c]
        STRB     r1,[r4,#0x69]
        ADDS     r4,r4,#0x50
        BL       HAL_GetTick
        STRH     r6,[r4,#0]
        MOV      r9,r0
        STRH     r6,[r4,#2]
        SUBS     r4,r4,#0x50
        MOV      r6,#0x1000
        B        |L28.124|
|L28.72|
        MOVS     r0,#1
|L28.74|
        POP      {r3-r9,pc}
        NOP      
|L28.80|
        LDRH     r0,[r4,#0x52]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x52]
        MOVS     r2,#0
        MOV      r3,r9
        MOVS     r1,#0x80
        MOV      r0,r4
        STR      r7,[sp,#0]
        BL       UART_WaitOnFlagUntilTimeout
        CBNZ     r0,|L28.148|
        LDR      r0,[r4,#8]
        CMP      r0,r6
        BNE      |L28.116|
        LDR      r0,[r4,#0x10]
        CBZ      r0,|L28.152|
|L28.116|
        LDRB     r0,[r5],#1
        LDR      r1,[r4,#0]
|L28.122|
        STR      r0,[r1,#0x28]
|L28.124|
        LDRH     r0,[r4,#0x52]
        CMP      r0,#0
        BNE      |L28.80|
        MOVS     r2,#0
        MOV      r3,r9
        MOVS     r1,#0x40
        MOV      r0,r4
        STR      r7,[sp,#0]
        BL       UART_WaitOnFlagUntilTimeout
        CBZ      r0,|L28.164|
|L28.148|
        MOVS     r0,#3
        B        |L28.74|
|L28.152|
        LDRH     r0,[r5],#2
        LDR      r1,[r4,#0]
        UBFX     r0,r0,#0,#9
        B        |L28.122|
|L28.164|
        MOVS     r1,#0x20
        STRB     r1,[r4,#0x69]
        MOVS     r0,#0
        STRB     r8,[r4,#0x68]
        B        |L28.74|
|L28.178|
        MOVS     r0,#2
        B        |L28.74|
        ENDP


        AREA ||i.HAL_UART_Transmit_DMA||, CODE, READONLY, ALIGN=2

HAL_UART_Transmit_DMA PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0x69]
        CMP      r0,#0x20
        BNE      |L29.122|
        CBZ      r1,|L29.116|
        CBZ      r2,|L29.116|
        LDRB     r0,[r4,#0x68]
        CMP      r0,#1
        BEQ      |L29.122|
        MOVS     r3,#1
        STRB     r3,[r4,#0x68]
        STR      r1,[r4,#0x4c]
        MOVS     r5,#0
        STRH     r2,[r4,#0x50]
        MOVS     r0,#0x21
        STRH     r2,[r4,#0x52]
        STR      r5,[r4,#0x6c]
        STRB     r0,[r4,#0x69]
        LDR      r3,[r4,#0x60]
        LDR      r0,|L29.128|
        STR      r0,[r3,#0x3c]
        LDR      r3,[r4,#0x60]
        LDR      r0,|L29.132|
        STR      r0,[r3,#0x40]
        LDR      r3,[r4,#0x60]
        LDR      r0,|L29.136|
        STR      r0,[r3,#0x4c]
        MOV      r3,r2
        LDR      r0,[r4,#0x60]
        STR      r5,[r0,#0x50]
        LDR      r0,[r4,#0]
        LDR      r6,[r4,#0x60]
        ADDS     r4,r4,#0x4c
        ADD      r2,r0,#0x28
        MOV      r0,r6
        BL       HAL_DMA_Start_IT
        LDR      r1,[r4,#-0x4c]
        MOVS     r0,#0x40
        STR      r0,[r1,#0x20]
        STRB     r5,[r4,#0x1c]
        LDR      r0,[r4,#-0x4c]
        LDR      r1,[r0,#8]
        ORR      r1,r1,#0x80
        STR      r1,[r0,#8]
        MOVS     r0,#0
|L29.114|
        POP      {r4-r6,pc}
|L29.116|
        B        |L29.118|
|L29.118|
        MOVS     r0,#1
        B        |L29.114|
|L29.122|
        MOVS     r0,#2
        B        |L29.114|
        ENDP

        DCW      0x0000
|L29.128|
        DCD      UART_DMATransmitCplt
|L29.132|
        DCD      UART_DMATxHalfCplt
|L29.136|
        DCD      UART_DMAError

        AREA ||i.HAL_UART_Transmit_IT||, CODE, READONLY, ALIGN=1

HAL_UART_Transmit_IT PROC
        LDRB     r3,[r0,#0x69]
        CMP      r3,#0x20
        BNE      |L30.62|
        CBZ      r1,|L30.58|
        CBZ      r2,|L30.58|
        LDRB     r3,[r0,#0x68]
        CMP      r3,#1
        BEQ      |L30.62|
        STR      r1,[r0,#0x4c]
        MOVS     r1,#0
        STRH     r2,[r0,#0x50]
        MOVS     r3,#0x21
        STRH     r2,[r0,#0x52]
        STR      r1,[r0,#0x6c]
        STRB     r3,[r0,#0x69]
        STRB     r1,[r0,#0x68]
        LDR      r0,[r0,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x80
        STR      r1,[r0,#0]
        MOVS     r0,#0
        BX       lr
|L30.58|
        MOVS     r0,#1
        BX       lr
|L30.62|
        MOVS     r0,#2
        BX       lr
        ENDP


        AREA ||i.HAL_UART_TxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_TxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_TxHalfCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_TxHalfCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.UART_AdvFeatureConfig||, CODE, READONLY, ALIGN=1

UART_AdvFeatureConfig PROC
        LDRB     r1,[r0,#0x24]
        LSLS     r1,r1,#31
        BEQ      |L33.22|
        LDR      r1,[r0,#0]
        LDR      r3,[r0,#0x28]
        LDR      r2,[r1,#4]
        BIC      r2,r2,#0x20000
        ORRS     r2,r2,r3
        STR      r2,[r1,#4]
|L33.22|
        LDRB     r1,[r0,#0x24]
        LSLS     r1,r1,#30
        BPL      |L33.44|
        LDR      r1,[r0,#0]
        LDR      r3,[r0,#0x2c]
        LDR      r2,[r1,#4]
        BIC      r2,r2,#0x10000
        ORRS     r2,r2,r3
        STR      r2,[r1,#4]
|L33.44|
        LDRB     r1,[r0,#0x24]
        LSLS     r1,r1,#29
        BPL      |L33.66|
        LDR      r1,[r0,#0]
        LDR      r3,[r0,#0x30]
        LDR      r2,[r1,#4]
        BIC      r2,r2,#0x40000
        ORRS     r2,r2,r3
        STR      r2,[r1,#4]
|L33.66|
        LDRB     r1,[r0,#0x24]
        LSLS     r1,r1,#28
        BPL      |L33.88|
        LDR      r1,[r0,#0]
        LDR      r3,[r0,#0x34]
        LDR      r2,[r1,#4]
        BIC      r2,r2,#0x8000
        ORRS     r2,r2,r3
        STR      r2,[r1,#4]
|L33.88|
        LDRB     r1,[r0,#0x24]
        LSLS     r1,r1,#27
        BPL      |L33.110|
        LDR      r1,[r0,#0]
        LDR      r3,[r0,#0x38]
        LDR      r2,[r1,#8]
        BIC      r2,r2,#0x1000
        ORRS     r2,r2,r3
        STR      r2,[r1,#8]
|L33.110|
        LDRB     r1,[r0,#0x24]
        LSLS     r1,r1,#26
        BPL      |L33.132|
        LDR      r1,[r0,#0]
        LDR      r3,[r0,#0x3c]
        LDR      r2,[r1,#8]
        BIC      r2,r2,#0x2000
        ORRS     r2,r2,r3
        STR      r2,[r1,#8]
|L33.132|
        LDRB     r1,[r0,#0x24]
        LSLS     r1,r1,#25
        BPL      |L33.176|
        LDR      r1,[r0,#0]
        LDR      r3,[r0,#0x40]
        LDR      r2,[r1,#4]
        BIC      r2,r2,#0x100000
        ORRS     r2,r2,r3
        STR      r2,[r1,#4]
        LDR      r1,[r0,#0x40]
        CMP      r1,#0x100000
        BNE      |L33.176|
        LDR      r1,[r0,#0]
        LDR      r3,[r0,#0x44]
        LDR      r2,[r1,#4]
        BIC      r2,r2,#0x600000
        ORRS     r2,r2,r3
        STR      r2,[r1,#4]
|L33.176|
        LDRB     r1,[r0,#0x24]
        LSLS     r1,r1,#24
        BPL      |L33.198|
        LDR      r1,[r0,#0]
        LDR      r2,[r0,#0x48]
        LDR      r0,[r1,#4]
        BIC      r0,r0,#0x80000
        ORRS     r0,r0,r2
        STR      r0,[r1,#4]
|L33.198|
        BX       lr
        ENDP


        AREA ||i.UART_CheckIdleState||, CODE, READONLY, ALIGN=1

UART_CheckIdleState PROC
        PUSH     {r3-r5,lr}
        MOVS     r5,#0
        MOV      r4,r0
        STR      r5,[r0,#0x6c]
        BL       HAL_GetTick
        MOV      r3,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LSLS     r0,r0,#28
        BPL      |L34.46|
        MVN      r0,#0xfe000000
        STR      r0,[sp,#0]
        MOVS     r2,#0
        MOV      r0,r4
        MOV      r1,#0x200000
        BL       UART_WaitOnFlagUntilTimeout
        CBZ      r0,|L34.46|
        MOVS     r0,#3
        POP      {r3-r5,pc}
|L34.46|
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x69]
        STRB     r5,[r4,#0x68]
        STRB     r0,[r4,#0x6a]
        MOVS     r0,#0
        POP      {r3-r5,pc}
        ENDP


        AREA ||i.UART_DMAAbortOnError||, CODE, READONLY, ALIGN=1

UART_DMAAbortOnError PROC
        PUSH     {r4,lr}
        LDR      r0,[r0,#0x38]
        MOVS     r1,#0
        STRH     r1,[r0,#0x5a]
        STRH     r1,[r0,#0x52]
        BL       HAL_UART_ErrorCallback
        POP      {r4,pc}
        ENDP


        AREA ||i.UART_DMAError||, CODE, READONLY, ALIGN=1

UART_DMAError PROC
        PUSH     {r4,lr}
        LDR      r4,[r0,#0x38]
        MOVS     r1,#0
        STRH     r1,[r4,#0x5a]
        STRH     r1,[r4,#0x52]
        LDRB     r0,[r4,#0x69]
        CMP      r0,#0x21
        BNE      |L36.36|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSLS     r0,r0,#24
        BPL      |L36.36|
        MOV      r0,r4
        BL       UART_EndTxTransfer
|L36.36|
        LDRB     r0,[r4,#0x6a]
        CMP      r0,#0x22
        BNE      |L36.58|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        LSLS     r0,r0,#25
        BPL      |L36.58|
        MOV      r0,r4
        BL       UART_EndRxTransfer
|L36.58|
        LDR      r0,[r4,#0x6c]
        ORR      r0,r0,#0x10
        STR      r0,[r4,#0x6c]
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        POP      {r4,pc}
        ENDP


        AREA ||i.UART_DMAReceiveCplt||, CODE, READONLY, ALIGN=1

UART_DMAReceiveCplt PROC
        PUSH     {r4,lr}
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0]
        LDR      r0,[r0,#0x38]
        LSLS     r1,r1,#23
        BMI      |L37.54|
        MOVS     r1,#0
        STRH     r1,[r0,#0x5a]
        MOVS     r2,#0x20
        LDR      r1,[r0,#0]
        LDR      r3,[r1,#0]
        BIC      r3,r3,#0x100
        STR      r3,[r1,#0]
        LDR      r1,[r0,#0]
        LDR      r3,[r1,#8]
        BIC      r3,r3,#1
        STR      r3,[r1,#8]
        LDR      r1,[r0,#0]
        LDR      r3,[r1,#8]
        BIC      r3,r3,#0x40
        STR      r3,[r1,#8]
        STRB     r2,[r0,#0x6a]
|L37.54|
        BL       HAL_UART_RxCpltCallback
        POP      {r4,pc}
        ENDP


        AREA ||i.UART_DMARxHalfCplt||, CODE, READONLY, ALIGN=1

UART_DMARxHalfCplt PROC
        PUSH     {r4,lr}
        LDR      r0,[r0,#0x38]
        BL       HAL_UART_RxHalfCpltCallback
        POP      {r4,pc}
        ENDP


        AREA ||i.UART_DMATransmitCplt||, CODE, READONLY, ALIGN=1

UART_DMATransmitCplt PROC
        PUSH     {r4,lr}
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0]
        LDR      r0,[r0,#0x38]
        LSLS     r1,r1,#23
        BMI      |L39.40|
        MOVS     r1,#0
        STRH     r1,[r0,#0x52]
        LDR      r1,[r0,#0]
        LDR      r2,[r1,#8]
        BIC      r2,r2,#0x80
        STR      r2,[r1,#8]
        LDR      r0,[r0,#0]
        LDR      r1,[r0,#0]
        ORR      r1,r1,#0x40
        STR      r1,[r0,#0]
        POP      {r4,pc}
|L39.40|
        BL       HAL_UART_TxCpltCallback
        POP      {r4,pc}
        ENDP


        AREA ||i.UART_DMATxHalfCplt||, CODE, READONLY, ALIGN=1

UART_DMATxHalfCplt PROC
        PUSH     {r4,lr}
        LDR      r0,[r0,#0x38]
        BL       HAL_UART_TxHalfCpltCallback
        POP      {r4,pc}
        ENDP


        AREA ||i.UART_EndRxTransfer||, CODE, READONLY, ALIGN=1

UART_EndRxTransfer PROC
        LDR      r1,[r0,#0]
        MOVS     r2,#0x20
        LDR      r3,[r1,#0]
        BIC      r3,r3,#0x120
        STR      r3,[r1,#0]
        LDR      r1,[r0,#0]
        LDR      r3,[r1,#8]
        BIC      r3,r3,#1
        STR      r3,[r1,#8]
        STRB     r2,[r0,#0x6a]
        BX       lr
        ENDP


        AREA ||i.UART_EndTxTransfer||, CODE, READONLY, ALIGN=1

UART_EndTxTransfer PROC
        LDR      r1,[r0,#0]
        MOVS     r2,#0x20
        LDR      r3,[r1,#0]
        BIC      r3,r3,#0xc0
        STR      r3,[r1,#0]
        STRB     r2,[r0,#0x69]
        BX       lr
        ENDP


        AREA ||i.UART_Receive_IT||, CODE, READONLY, ALIGN=1

UART_Receive_IT PROC
        PUSH     {r4,lr}
        LDRB     r1,[r0,#0x6a]
        LDRH     r2,[r0,#0x5c]
        CMP      r1,#0x22
        LDR      r1,[r0,#0]
        BEQ      |L43.28|
        LDR      r0,[r1,#0x18]
        ORR      r0,r0,#8
        STR      r0,[r1,#0x18]
        MOVS     r0,#2
        POP      {r4,pc}
|L43.28|
        LDR      r3,[r0,#8]
        CMP      r3,#0x1000
        BNE      |L43.40|
        LDR      r3,[r0,#0x10]
        CBZ      r3,|L43.70|
|L43.40|
        LDR      r3,[r1,#0x24]
        LDR      r1,[r0,#0x54]
        ANDS     r3,r3,r2
        ADDS     r2,r1,#1
        STR      r2,[r0,#0x54]
        STRB     r3,[r1,#0]
|L43.52|
        LDRH     r1,[r0,#0x5a]
        SUBS     r1,r1,#1
        LSLS     r1,r1,#16
        LSRS     r1,r1,#16
        STRH     r1,[r0,#0x5a]
        BEQ      |L43.86|
        B        |L43.116|
|L43.70|
        LDR      r3,[r1,#0x24]
        LDR      r1,[r0,#0x54]
        ANDS     r3,r3,r2
        STRH     r3,[r1,#0]
        LDR      r1,[r0,#0x54]
        ADDS     r1,r1,#2
        STR      r1,[r0,#0x54]
        B        |L43.52|
|L43.86|
        LDR      r1,[r0,#0]
        MOVS     r2,#0x20
        LDR      r3,[r1,#0]
        BIC      r3,r3,#0x120
        STR      r3,[r1,#0]
        LDR      r1,[r0,#0]
        LDR      r3,[r1,#8]
        BIC      r3,r3,#1
        STR      r3,[r1,#8]
        STRB     r2,[r0,#0x6a]
        BL       HAL_UART_RxCpltCallback
|L43.116|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.UART_SetConfig||, CODE, READONLY, ALIGN=2

UART_SetConfig PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        LDR      r0,[r0,#8]
        LDR      r3,|L44.552|
        LDR      r7,|L44.556|
        LDR      r6,[r4,#0]
        LDRD     r1,r5,[r4,#0x10]
        LDR      r2,[r4,#0x1c]
        ORRS     r0,r0,r1
        LDR      r12,[r6,#0]
        MOVS     r1,#0x10
        ORRS     r5,r5,r2
        MOVS     r2,#0
        ORRS     r0,r0,r5
        MOV      r5,r2
        AND      r12,r12,r3
        LDR      r3,|L44.560|
        ORR      r12,r12,r0
        STR      r12,[r6,#0]
        MOV      r9,#0x8000
        LDR      r0,[r4,#0]
        LDR      r12,[r4,#0xc]
        LDR      r6,[r0,#4]
        BIC      r6,r6,#0x3000
        ORR      r6,r6,r12
        STR      r6,[r0,#4]
        LDR      r6,[r4,#0]
        LDR      r8,[r4,#0x20]
        LDR      r0,[r4,#0x18]
        LDR      r12,[r6,#8]
        ORR      r0,r0,r8
        BIC      r12,r12,#0xb00
        ORR      r12,r12,r0
        STR      r12,[r6,#8]
        LDR      r0,[r4,#0]
        CMP      r0,r7
        BNE      |L44.128|
        LDR      r3,[r3,#0]
        ANDS     r3,r3,#3
        BEQ      |L44.280|
        CMP      r3,#1
        BEQ      |L44.364|
        CMP      r3,#2
        BEQ      |L44.360|
        CMP      r3,#3
        BNE      |L44.370|
        B        |L44.368|
|L44.128|
        LDR      r6,|L44.564|
        CMP      r0,r6
        BNE      |L44.156|
        LDR      r3,[r3,#0]
        ANDS     r3,r3,#0xc
        BEQ      |L44.356|
        CMP      r3,#4
        BEQ      |L44.364|
        CMP      r3,#8
        BEQ      |L44.360|
        CMP      r3,#0xc
        BNE      |L44.370|
        B        |L44.368|
|L44.156|
        LDR      r6,|L44.568|
        CMP      r0,r6
        BNE      |L44.184|
        LDR      r3,[r3,#0]
        ANDS     r3,r3,#0x30
        BEQ      |L44.356|
        CMP      r3,#0x10
        BEQ      |L44.364|
        CMP      r3,#0x20
        BEQ      |L44.360|
        CMP      r3,#0x30
        BNE      |L44.370|
        B        |L44.368|
|L44.184|
        LDR      r6,|L44.572|
        CMP      r0,r6
        BNE      |L44.212|
        LDR      r3,[r3,#0]
        ANDS     r3,r3,#0xc0
        BEQ      |L44.356|
        CMP      r3,#0x40
        BEQ      |L44.364|
        CMP      r3,#0x80
        BEQ      |L44.360|
        CMP      r3,#0xc0
        BNE      |L44.370|
        B        |L44.368|
|L44.212|
        LDR      r6,|L44.576|
        CMP      r0,r6
        BNE      |L44.246|
        LDR      r3,[r3,#0]
        ANDS     r3,r3,#0x300
        BEQ      |L44.356|
        CMP      r3,#0x100
        BEQ      |L44.364|
        CMP      r3,#0x200
        BEQ      |L44.360|
        CMP      r3,#0x300
        BNE      |L44.370|
        B        |L44.368|
|L44.246|
        LDR      r6,|L44.580|
        CMP      r0,r6
        BNE      |L44.284|
        LDR      r3,[r3,#0]
        ANDS     r3,r3,#0xc00
        BEQ      |L44.280|
        CMP      r3,#0x400
        BEQ      |L44.364|
        CMP      r3,#0x800
        BEQ      |L44.360|
        CMP      r3,#0xc00
        BNE      |L44.370|
        B        |L44.368|
|L44.280|
        MOVS     r1,#1
        B        |L44.370|
|L44.284|
        LDR      r6,|L44.584|
        CMP      r0,r6
        BNE      |L44.318|
        LDR      r3,[r3,#0]
        ANDS     r3,r3,#0x3000
        BEQ      |L44.356|
        CMP      r3,#0x1000
        BEQ      |L44.364|
        CMP      r3,#0x2000
        BEQ      |L44.360|
        CMP      r3,#0x3000
        BNE      |L44.370|
        B        |L44.368|
|L44.318|
        LDR      r6,|L44.588|
        CMP      r0,r6
        BNE      |L44.370|
        LDR      r3,[r3,#0]
        ANDS     r3,r3,#0xc000
        BEQ      |L44.356|
        CMP      r3,#0x4000
        BEQ      |L44.364|
        CMP      r3,r9
        BEQ      |L44.360|
        CMP      r3,#0xc000
        BNE      |L44.370|
        B        |L44.368|
        B        |L44.364|
        B        |L44.360|
        B        |L44.356|
|L44.356|
        MOVS     r1,#0
        B        |L44.370|
|L44.360|
        MOVS     r1,#2
        B        |L44.370|
|L44.364|
        MOVS     r1,#4
        B        |L44.370|
|L44.368|
        MOVS     r1,#8
|L44.370|
        LDR      r6,[r4,#0x1c]
        CMP      r6,r9
        BNE      |L44.462|
        CMP      r1,#9
        BCS      |L44.444|
        TBB      [pc,r1]
        DCB      0x05,0x08,0x14,0x1e
        DCB      0x17,0x1e,0x1e,0x1e
        DCB      0x1a,0x00
        BL       HAL_RCC_GetPCLK1Freq
        B        |L44.404|
        BL       HAL_RCC_GetPCLK2Freq
|L44.404|
        MOV      r1,r0
        LDR.W    r0,[r4,#4]
        LSLS     r1,r1,#1
|L44.412|
        ADD      r1,r1,r0,LSR #1
        UDIV     r0,r1,r0
        UXTH     r2,r0
        B        |L44.446|
        LDR      r1,|L44.592|
        LDR      r0,[r4,#4]
        B        |L44.412|
        BL       HAL_RCC_GetSysClockFreq
        B        |L44.404|
        LDR      r0,[r4,#4]
        MOV      r1,#0x10000
        B        |L44.412|
|L44.444|
        MOVS     r5,#1
|L44.446|
        LDR      r1,[r4,#0]
        BIC      r0,r2,#0xf
        UBFX     r2,r2,#1,#3
        ORRS     r0,r0,r2
        STR      r0,[r1,#0xc]
        B        |L44.544|
|L44.462|
        CMP      r1,#9
        BCS      |L44.542|
        TBB      [pc,r1]
        DCB      0x05,0x08
        DCB      0x0b,0x24,0x10,0x24
        DCB      0x24,0x24,0x1c,0x00
        BL       HAL_RCC_GetPCLK1Freq
        B        |L44.506|
        BL       HAL_RCC_GetPCLK2Freq
        B        |L44.506|
        LDR      r1,[r4,#4]
        LDR      r2,|L44.596|
        ADD      r2,r2,r1,LSR #1
        B        |L44.532|
        BL       HAL_RCC_GetSysClockFreq
|L44.506|
        MOV      r1,r0
        LDRD     r2,r0,[r4,#0]
        ADD      r1,r1,r0,LSR #1
        UDIV     r0,r1,r0
        UXTH     r0,r0
        STR      r0,[r2,#0xc]
        B        |L44.544|
        LDR      r1,[r4,#4]
        ADD      r2,r9,r1,LSR #1
|L44.532|
        UDIV     r1,r2,r1
        UXTH     r1,r1
        STR      r1,[r0,#0xc]
        B        |L44.544|
|L44.542|
        MOVS     r5,#1
|L44.544|
        MOV      r0,r5
        POP      {r4-r10,pc}
        ENDP

        DCW      0x0000
|L44.552|
        DCD      0xefff69f3
|L44.556|
        DCD      0x40011000
|L44.560|
        DCD      0x40023890
|L44.564|
        DCD      0x40004400
|L44.568|
        DCD      0x40004800
|L44.572|
        DCD      0x40004c00
|L44.576|
        DCD      0x40005000
|L44.580|
        DCD      0x40011400
|L44.584|
        DCD      0x40007800
|L44.588|
        DCD      0x40007c00
|L44.592|
        DCD      0x01e84800
|L44.596|
        DCD      0x00f42400

        AREA ||i.UART_WaitOnFlagUntilTimeout||, CODE, READONLY, ALIGN=1

UART_WaitOnFlagUntilTimeout PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r3
        MOV      r7,r2
        MOV      r6,r1
        MOV      r4,r0
        LDR      r5,[sp,#0x18]
        B        |L45.76|
|L45.16|
        ADDS     r0,r5,#1
        BEQ      |L45.76|
        CBZ      r5,|L45.34|
        BL       HAL_GetTick
        SUB      r0,r0,r8
        CMP      r0,r5
        BCC      |L45.76|
|L45.34|
        LDR      r1,[r4,#0]
        MOVS     r0,#0x20
        MOVS     r2,#0
        LDR      r3,[r1,#0]
        BIC      r3,r3,#0x1a0
        STR      r3,[r1,#0]
        LDR      r1,[r4,#0]
        LDR      r3,[r1,#8]
        BIC      r3,r3,#1
        STR      r3,[r1,#8]
        STRB     r0,[r4,#0x69]
        STRB     r0,[r4,#0x6a]
        MOVS     r0,#3
        STRB     r2,[r4,#0x68]
|L45.72|
        POP      {r4-r8,pc}
|L45.76|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x1c]
        BICS     r0,r6,r0
        BEQ      |L45.96|
        MOVS     r0,#0
|L45.88|
        CMP      r0,r7
        BEQ      |L45.16|
        MOVS     r0,#0
        B        |L45.72|
|L45.96|
        MOVS     r0,#1
        B        |L45.88|
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f7xx_hal_uart_c_d497114f____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___20_stm32f7xx_hal_uart_c_d497114f____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f7xx_hal_uart_c_d497114f____REVSH|
#line 402
|__asm___20_stm32f7xx_hal_uart_c_d497114f____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f7xx_hal_uart_c_d497114f____RRX|
#line 587
|__asm___20_stm32f7xx_hal_uart_c_d497114f____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_HalfDuplex_EnableReceiver [CODE]
        EXPORT HAL_HalfDuplex_EnableTransmitter [CODE]
        EXPORT HAL_HalfDuplex_Init [CODE]
        EXPORT HAL_LIN_Init [CODE]
        EXPORT HAL_LIN_SendBreak [CODE]
        EXPORT HAL_MultiProcessorEx_AddressLength_Set [CODE]
        EXPORT HAL_MultiProcessor_DisableMuteMode [CODE]
        EXPORT HAL_MultiProcessor_EnableMuteMode [CODE]
        EXPORT HAL_MultiProcessor_EnterMuteMode [CODE]
        EXPORT HAL_MultiProcessor_Init [CODE]
        EXPORT HAL_RS485Ex_Init [CODE]
        EXPORT HAL_UART_DMAPause [CODE]
        EXPORT HAL_UART_DMAResume [CODE]
        EXPORT HAL_UART_DMAStop [CODE]
        EXPORT HAL_UART_DeInit [CODE]
        EXPORT HAL_UART_ErrorCallback [CODE,WEAK]
        EXPORT HAL_UART_GetError [CODE]
        EXPORT HAL_UART_GetState [CODE]
        EXPORT HAL_UART_IRQHandler [CODE]
        EXPORT HAL_UART_Init [CODE]
        EXPORT HAL_UART_MspDeInit [CODE,WEAK]
        EXPORT HAL_UART_MspInit [CODE,WEAK]
        EXPORT HAL_UART_Receive [CODE]
        EXPORT HAL_UART_Receive_DMA [CODE]
        EXPORT HAL_UART_Receive_IT [CODE]
        EXPORT HAL_UART_RxCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_RxHalfCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_Transmit [CODE]
        EXPORT HAL_UART_Transmit_DMA [CODE]
        EXPORT HAL_UART_Transmit_IT [CODE]
        EXPORT HAL_UART_TxCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_TxHalfCpltCallback [CODE,WEAK]
        EXPORT UART_AdvFeatureConfig [CODE]
        EXPORT UART_CheckIdleState [CODE]
        EXPORT UART_SetConfig [CODE]
        EXPORT UART_WaitOnFlagUntilTimeout [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GetTick [CODE]
        IMPORT HAL_RCC_GetPCLK1Freq [CODE]
        IMPORT HAL_RCC_GetPCLK2Freq [CODE]
        IMPORT HAL_RCC_GetSysClockFreq [CODE]
        IMPORT HAL_DMA_Start_IT [CODE]
        IMPORT HAL_DMA_Abort [CODE]
        IMPORT HAL_DMA_Abort_IT [CODE]

        KEEP UART_DMAAbortOnError
        KEEP UART_DMAError
        KEEP UART_DMAReceiveCplt
        KEEP UART_DMARxHalfCplt
        KEEP UART_DMATransmitCplt
        KEEP UART_DMATxHalfCplt
        KEEP UART_EndRxTransfer
        KEEP UART_EndTxTransfer
        KEEP UART_Receive_IT

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
