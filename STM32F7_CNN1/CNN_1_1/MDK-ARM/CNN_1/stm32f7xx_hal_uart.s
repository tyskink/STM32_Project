; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\stm32f7xx_hal_uart.o --depend=cnn_1\stm32f7xx_hal_uart.d --cpu=Cortex-M7.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\stm32f7xx_hal_uart.crf ../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_HalfDuplex_EnableReceiver||, CODE, READONLY, ALIGN=1

HAL_HalfDuplex_EnableReceiver PROC
        MOV      r1,r0
        NOP      
        LDRB     r0,[r1,#0x68]
        CMP      r0,#1
        BNE      |L1.16|
        MOVS     r0,#2
|L1.14|
        BX       lr
|L1.16|
        MOVS     r0,#1
        STRB     r0,[r1,#0x68]
        NOP      
        MOVS     r0,#0x24
        STRB     r0,[r1,#0x69]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0xc
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#4
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        MOVS     r0,#0x20
        STRB     r0,[r1,#0x69]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r1,#0x68]
        NOP      
        NOP      
        B        |L1.14|
        ENDP


        AREA ||i.HAL_HalfDuplex_EnableTransmitter||, CODE, READONLY, ALIGN=1

HAL_HalfDuplex_EnableTransmitter PROC
        MOV      r1,r0
        NOP      
        LDRB     r0,[r1,#0x68]
        CMP      r0,#1
        BNE      |L2.16|
        MOVS     r0,#2
|L2.14|
        BX       lr
|L2.16|
        MOVS     r0,#1
        STRB     r0,[r1,#0x68]
        NOP      
        MOVS     r0,#0x24
        STRB     r0,[r1,#0x69]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0xc
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#8
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        MOVS     r0,#0x20
        STRB     r0,[r1,#0x69]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r1,#0x68]
        NOP      
        NOP      
        B        |L2.14|
        ENDP


        AREA ||i.HAL_HalfDuplex_Init||, CODE, READONLY, ALIGN=1

HAL_HalfDuplex_Init PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBNZ     r4,|L3.10|
        MOVS     r0,#1
|L3.8|
        POP      {r4,pc}
|L3.10|
        LDRB     r0,[r4,#0x69]
        CBNZ     r0,|L3.28|
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L3.28|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BNE      |L3.58|
        B        |L3.8|
|L3.58|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L3.68|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L3.68|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x4800
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x22
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        ORR      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L3.8|
        ENDP


        AREA ||i.HAL_LIN_Init||, CODE, READONLY, ALIGN=1

HAL_LIN_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        CBNZ     r4,|L4.12|
        MOVS     r0,#1
|L4.10|
        POP      {r4-r6,pc}
|L4.12|
        LDRB     r0,[r4,#0x69]
        CBNZ     r0,|L4.30|
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L4.30|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BNE      |L4.60|
        B        |L4.10|
|L4.60|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L4.70|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L4.70|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x800
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x2a
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        ORR      r0,r0,#0x4000
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x20
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L4.10|
        ENDP


        AREA ||i.HAL_LIN_SendBreak||, CODE, READONLY, ALIGN=1

HAL_LIN_SendBreak PROC
        MOV      r1,r0
        NOP      
        LDRB     r0,[r1,#0x68]
        CMP      r0,#1
        BNE      |L5.16|
        MOVS     r0,#2
|L5.14|
        BX       lr
|L5.16|
        MOVS     r0,#1
        STRB     r0,[r1,#0x68]
        NOP      
        MOVS     r0,#0x24
        STRB     r0,[r1,#0x69]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#2
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0x18]
        MOVS     r0,#0x20
        STRB     r0,[r1,#0x69]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r1,#0x68]
        NOP      
        NOP      
        B        |L5.14|
        ENDP


        AREA ||i.HAL_MultiProcessorEx_AddressLength_Set||, CODE, READONLY, ALIGN=1

HAL_MultiProcessorEx_AddressLength_Set PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        CBNZ     r4,|L6.12|
        MOVS     r0,#1
|L6.10|
        POP      {r4-r6,pc}
|L6.12|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x10
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L6.10|
        ENDP


        AREA ||i.HAL_MultiProcessor_DisableMuteMode||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_DisableMuteMode PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        NOP      
        LDRB     r0,[r4,#0x68]
        CMP      r0,#1
        BNE      |L7.18|
        MOVS     r0,#2
|L7.16|
        POP      {r4,pc}
|L7.18|
        MOVS     r0,#1
        STRB     r0,[r4,#0x68]
        NOP      
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x2000
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x69]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L7.16|
        ENDP


        AREA ||i.HAL_MultiProcessor_EnableMuteMode||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_EnableMuteMode PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        NOP      
        LDRB     r0,[r4,#0x68]
        CMP      r0,#1
        BNE      |L8.18|
        MOVS     r0,#2
|L8.16|
        POP      {r4,pc}
|L8.18|
        MOVS     r0,#1
        STRB     r0,[r4,#0x68]
        NOP      
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x2000
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x69]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L8.16|
        ENDP


        AREA ||i.HAL_MultiProcessor_EnterMuteMode||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_EnterMuteMode PROC
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0x18]
        ORR      r1,r1,#4
        LDR      r2,[r0,#0]
        STR      r1,[r2,#0x18]
        BX       lr
        ENDP


        AREA ||i.HAL_MultiProcessor_Init||, CODE, READONLY, ALIGN=1

HAL_MultiProcessor_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        CBNZ     r4,|L10.14|
        MOVS     r0,#1
|L10.12|
        POP      {r4-r6,pc}
|L10.14|
        LDRB     r0,[r4,#0x69]
        CBNZ     r0,|L10.32|
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L10.32|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BNE      |L10.62|
        B        |L10.12|
|L10.62|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L10.72|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L10.72|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x4800
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x2a
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        CMP      r5,#0x800
        BNE      |L10.114|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        BFI      r0,r6,#24,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
|L10.114|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x800
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L10.12|
        ENDP


        AREA ||i.HAL_RS485Ex_Init||, CODE, READONLY, ALIGN=2

HAL_RS485Ex_Init PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOV      r8,#0
        CBNZ     r4,|L11.24|
        MOVS     r0,#1
|L11.20|
        POP      {r4-r8,pc}
|L11.24|
        LDRB     r0,[r4,#0x69]
        CBNZ     r0,|L11.42|
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L11.42|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BNE      |L11.72|
        B        |L11.20|
|L11.72|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L11.82|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L11.82|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        ORR      r0,r0,#0x4000
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x8000
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LSL      r8,r6,#21
        ORR      r8,r8,r7,LSL #16
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LDR      r1,|L11.152|
        ANDS     r0,r0,r1
        ORR      r0,r0,r8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L11.20|
        ENDP

|L11.152|
        DCD      0xfc00ffff

        AREA ||i.HAL_UART_DMAPause||, CODE, READONLY, ALIGN=1

HAL_UART_DMAPause PROC
        MOV      r1,r0
        NOP      
        LDRB     r0,[r1,#0x68]
        CMP      r0,#1
        BNE      |L12.16|
        MOVS     r0,#2
|L12.14|
        BX       lr
|L12.16|
        MOVS     r0,#1
        STRB     r0,[r1,#0x68]
        NOP      
        LDRB     r0,[r1,#0x69]
        CMP      r0,#0x21
        BNE      |L12.54|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        AND      r0,r0,#0x80
        CBZ      r0,|L12.54|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x80
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L12.54|
        LDRB     r0,[r1,#0x6a]
        CMP      r0,#0x22
        BNE      |L12.108|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        AND      r0,r0,#0x40
        CBZ      r0,|L12.108|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x100
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#1
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x40
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L12.108|
        NOP      
        MOVS     r0,#0
        STRB     r0,[r1,#0x68]
        NOP      
        NOP      
        B        |L12.14|
        ENDP


        AREA ||i.HAL_UART_DMAResume||, CODE, READONLY, ALIGN=1

HAL_UART_DMAResume PROC
        MOV      r1,r0
        NOP      
        LDRB     r0,[r1,#0x68]
        CMP      r0,#1
        BNE      |L13.16|
        MOVS     r0,#2
|L13.14|
        BX       lr
|L13.16|
        MOVS     r0,#1
        STRB     r0,[r1,#0x68]
        NOP      
        LDRB     r0,[r1,#0x69]
        CMP      r0,#0x21
        BNE      |L13.44|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        ORR      r0,r0,#0x80
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L13.44|
        LDRB     r0,[r1,#0x6a]
        CMP      r0,#0x22
        BNE      |L13.94|
        MOVS     r0,#8
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0x20]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x100
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        ORR      r0,r0,#1
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#8]
        ORR      r0,r0,#0x40
        LDR      r2,[r1,#0]
        STR      r0,[r2,#8]
|L13.94|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#1
        CBNZ     r0,|L13.116|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r2,[r1,#0]
        STR      r0,[r2,#0]
|L13.116|
        MOVS     r0,#0
        B        |L13.14|
        ENDP


        AREA ||i.HAL_UART_DMAStop||, CODE, READONLY, ALIGN=1

HAL_UART_DMAStop PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDRB     r0,[r4,#0x69]
        CMP      r0,#0x21
        BNE      |L14.50|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        AND      r0,r0,#0x80
        CBZ      r0,|L14.50|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x80
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x60]
        CBZ      r0,|L14.44|
        LDR      r0,[r4,#0x60]
        BL       HAL_DMA_Abort
|L14.44|
        MOV      r0,r4
        BL       UART_EndTxTransfer
|L14.50|
        LDRB     r0,[r4,#0x6a]
        CMP      r0,#0x22
        BNE      |L14.96|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        AND      r0,r0,#0x40
        CBZ      r0,|L14.96|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x64]
        CBZ      r0,|L14.90|
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Abort
|L14.90|
        MOV      r0,r4
        BL       UART_EndRxTransfer
|L14.96|
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.HAL_UART_DeInit||, CODE, READONLY, ALIGN=1

HAL_UART_DeInit PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBNZ     r4,|L15.10|
        MOVS     r0,#1
|L15.8|
        POP      {r4,pc}
|L15.10|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r0,#0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOV      r0,r4
        BL       HAL_UART_MspDeInit
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        STRB     r0,[r4,#0x69]
        STRB     r0,[r4,#0x6a]
        NOP      
        STRB     r0,[r4,#0x68]
        NOP      
        NOP      
        B        |L15.8|
        ENDP


        AREA ||i.HAL_UART_ErrorCallback||, CODE, READONLY, ALIGN=1

HAL_UART_ErrorCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_GetError||, CODE, READONLY, ALIGN=1

HAL_UART_GetError PROC
        MOV      r1,r0
        LDR      r0,[r1,#0x6c]
        BX       lr
        ENDP


        AREA ||i.HAL_UART_GetState||, CODE, READONLY, ALIGN=1

HAL_UART_GetState PROC
        MOV      r1,r0
        MOVS     r2,#0
        MOVS     r3,#0
        LDRB     r2,[r1,#0x69]
        LDRB     r3,[r1,#0x6a]
        ORR      r0,r2,r3
        BX       lr
        ENDP


        AREA ||i.HAL_UART_IRQHandler||, CODE, READONLY, ALIGN=2

HAL_UART_IRQHandler PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r5,[r0,#0x1c]
        LDR      r0,[r4,#0]
        LDR      r6,[r0,#0]
        LDR      r0,[r4,#0]
        LDR      r7,[r0,#8]
        AND      r8,r5,#0xf
        CMP      r8,#0
        BNE      |L19.50|
        AND      r0,r5,#0x20
        CBZ      r0,|L19.50|
        AND      r0,r6,#0x20
        CBZ      r0,|L19.50|
        MOV      r0,r4
        BL       UART_Receive_IT
|L19.46|
        POP      {r4-r8,pc}
|L19.50|
        CMP      r8,#0
        BEQ      |L19.304|
        AND      r0,r7,#1
        CBNZ     r0,|L19.70|
        AND      r0,r6,#0x120
        CMP      r0,#0
        BEQ      |L19.304|
|L19.70|
        AND      r0,r5,#1
        CBZ      r0,|L19.96|
        AND      r0,r6,#0x100
        CBZ      r0,|L19.96|
        MOVS     r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x6c]
        ORR      r0,r0,#1
        STR      r0,[r4,#0x6c]
|L19.96|
        AND      r0,r5,#2
        CBZ      r0,|L19.122|
        AND      r0,r7,#1
        CBZ      r0,|L19.122|
        MOVS     r0,#2
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x6c]
        ORR      r0,r0,#4
        STR      r0,[r4,#0x6c]
|L19.122|
        AND      r0,r5,#4
        CBZ      r0,|L19.148|
        AND      r0,r7,#1
        CBZ      r0,|L19.148|
        MOVS     r0,#4
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x6c]
        ORR      r0,r0,#2
        STR      r0,[r4,#0x6c]
|L19.148|
        AND      r0,r5,#8
        CBZ      r0,|L19.180|
        AND      r0,r6,#0x20
        CBNZ     r0,|L19.166|
        AND      r0,r7,#1
        CBZ      r0,|L19.180|
|L19.166|
        MOVS     r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        LDR      r0,[r4,#0x6c]
        ORR      r0,r0,#8
        STR      r0,[r4,#0x6c]
|L19.180|
        LDR      r0,[r4,#0x6c]
        CBZ      r0,|L19.272|
        AND      r0,r5,#0x20
        CBZ      r0,|L19.202|
        AND      r0,r6,#0x20
        CBZ      r0,|L19.202|
        MOV      r0,r4
        BL       UART_Receive_IT
|L19.202|
        LDR      r0,[r4,#0x6c]
        AND      r0,r0,#8
        CBNZ     r0,|L19.220|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        AND      r0,r0,#0x40
        CBZ      r0,|L19.292|
|L19.220|
        MOV      r0,r4
        BL       UART_EndRxTransfer
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        AND      r0,r0,#0x40
        CBZ      r0,|L19.284|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0x64]
        CBZ      r0,|L19.274|
        LDR      r0,|L19.348|
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x50]
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Abort_IT
        CBZ      r0,|L19.272|
        LDR      r0,[r4,#0x64]
        LDR      r1,[r0,#0x50]
        BLX      r1
|L19.272|
        B        |L19.302|
|L19.274|
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        B        |L19.302|
        B        |L19.304|
|L19.284|
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        B        |L19.302|
|L19.292|
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
|L19.302|
        B        |L19.46|
|L19.304|
        AND      r0,r5,#0x80
        CBZ      r0,|L19.324|
        AND      r0,r6,#0x80
        CBZ      r0,|L19.324|
        MOV      r0,r4
        BL       UART_Transmit_IT
        B        |L19.46|
|L19.324|
        AND      r0,r5,#0x40
        CBZ      r0,|L19.344|
        AND      r0,r6,#0x40
        CBZ      r0,|L19.344|
        MOV      r0,r4
        BL       UART_EndTransmit_IT
        B        |L19.46|
|L19.344|
        NOP      
        B        |L19.46|
        ENDP

|L19.348|
        DCD      UART_DMAAbortOnError

        AREA ||i.HAL_UART_Init||, CODE, READONLY, ALIGN=1

HAL_UART_Init PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        CBNZ     r4,|L20.10|
        MOVS     r0,#1
|L20.8|
        POP      {r4,pc}
|L20.10|
        LDR      r0,[r4,#0x18]
        CBZ      r0,|L20.16|
        B        |L20.18|
|L20.16|
        NOP      
|L20.18|
        LDRB     r0,[r4,#0x69]
        CBNZ     r0,|L20.36|
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        MOV      r0,r4
        BL       HAL_UART_MspInit
|L20.36|
        MOVS     r0,#0x24
        STRB     r0,[r4,#0x69]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_SetConfig
        CMP      r0,#1
        BNE      |L20.66|
        B        |L20.8|
|L20.66|
        LDR      r0,[r4,#0x24]
        CBZ      r0,|L20.76|
        MOV      r0,r4
        BL       UART_AdvFeatureConfig
|L20.76|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x4800
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x2a
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOV      r0,r4
        BL       UART_CheckIdleState
        B        |L20.8|
        ENDP


        AREA ||i.HAL_UART_MspDeInit||, CODE, READONLY, ALIGN=1

HAL_UART_MspDeInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_MspInit||, CODE, READONLY, ALIGN=1

HAL_UART_MspInit PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_Receive||, CODE, READONLY, ALIGN=1

HAL_UART_Receive PROC
        PUSH     {r3-r11,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r9,r3
        MOV      r10,#0
        LDRB     r0,[r4,#0x6a]
        CMP      r0,#0x20
        BNE      |L23.270|
        CBZ      r5,|L23.28|
        CBNZ     r6,|L23.34|
|L23.28|
        MOVS     r0,#1
|L23.30|
        POP      {r3-r11,pc}
|L23.34|
        NOP      
        LDRB     r0,[r4,#0x68]
        CMP      r0,#1
        BNE      |L23.48|
        MOVS     r0,#2
        B        |L23.30|
|L23.48|
        MOVS     r0,#1
        STRB     r0,[r4,#0x68]
        NOP      
        MOVS     r0,#0
        ADDS     r4,r4,#0x58
        STR      r0,[r4,#0x14]
        MOVS     r0,#0x22
        STRB     r0,[r4,#0x12]
        BL       HAL_GetTick
        MOV      r10,r0
        STRH     r6,[r4,#0]
        STRH     r6,[r4,#2]
        SUBS     r4,r4,#0x58
        NOP      
        LDR      r0,[r4,#8]
        CMP      r0,#0x1000
        BNE      |L23.110|
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L23.102|
        MOV      r0,#0x1ff
        STRH     r0,[r4,#0x5c]
        B        |L23.160|
|L23.102|
        MOVS     r0,#0xff
        STRH     r0,[r4,#0x5c]
        B        |L23.160|
|L23.110|
        LDR      r0,[r4,#8]
        CBNZ     r0,|L23.134|
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L23.126|
        MOVS     r0,#0xff
        STRH     r0,[r4,#0x5c]
        B        |L23.160|
|L23.126|
        MOVS     r0,#0x7f
        STRH     r0,[r4,#0x5c]
        B        |L23.160|
|L23.134|
        LDR      r0,[r4,#8]
        CMP      r0,#0x10000000
        BNE      |L23.160|
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L23.154|
        MOVS     r0,#0x7f
        STRH     r0,[r4,#0x5c]
        B        |L23.160|
|L23.154|
        MOVS     r0,#0x3f
        STRH     r0,[r4,#0x5c]
|L23.160|
        NOP      
        LDRH     r8,[r4,#0x5c]
        B        |L23.242|
|L23.168|
        LDRH     r0,[r4,#0x5a]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x5a]
        MOV      r3,r10
        MOVS     r2,#0
        MOVS     r1,#0x20
        MOV      r0,r4
        STR      r9,[sp,#0]
        BL       UART_WaitOnFlagUntilTimeout
        CBZ      r0,|L23.200|
        MOVS     r0,#3
        B        |L23.30|
|L23.200|
        LDR      r0,[r4,#8]
        CMP      r0,#0x1000
        BNE      |L23.228|
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L23.228|
        MOV      r7,r5
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x24]
        AND      r0,r0,r8
        STRH     r0,[r7,#0]
        ADDS     r5,r5,#2
        B        |L23.242|
|L23.228|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x24]
        AND      r1,r8,#0xff
        ANDS     r0,r0,r1
        STRB     r0,[r5],#1
|L23.242|
        LDRH     r0,[r4,#0x5a]
        CMP      r0,#0
        BNE      |L23.168|
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x6a]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        NOP      
        B        |L23.30|
        B        |L23.270|
|L23.270|
        MOVS     r0,#2
        B        |L23.30|
        ENDP


        AREA ||i.HAL_UART_Receive_DMA||, CODE, READONLY, ALIGN=2

HAL_UART_Receive_DMA PROC
        PUSH     {r0-r2,r4-r7,lr}
        MOV      r4,r0
        MOV      r5,r2
        LDRB     r0,[r4,#0x6a]
        CMP      r0,#0x20
        BNE      |L24.156|
        LDR      r0,[sp,#4]
        CBZ      r0,|L24.20|
        CBNZ     r5,|L24.24|
|L24.20|
        MOVS     r0,#1
|L24.22|
        POP      {r1-r7,pc}
|L24.24|
        NOP      
        LDRB     r0,[r4,#0x68]
        CMP      r0,#1
        BNE      |L24.38|
        MOVS     r0,#2
        B        |L24.22|
|L24.38|
        MOVS     r0,#1
        STRB     r0,[r4,#0x68]
        NOP      
        LDR      r0,[sp,#4]
        STR      r0,[r4,#0x54]
        STRH     r5,[r4,#0x58]
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        MOVS     r0,#0x22
        STRB     r0,[r4,#0x6a]
        LDR      r0,|L24.160|
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x3c]
        LDR      r0,|L24.164|
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x40]
        LDR      r0,|L24.168|
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x4c]
        MOVS     r0,#0
        LDR      r1,[r4,#0x64]
        STR      r0,[r1,#0x50]
        ADD      r6,sp,#4
        LDR      r2,[r6,#0]
        LDR      r3,[r4,#0]
        ADD      r1,r3,#0x24
        MOV      r3,r5
        LDR      r0,[r4,#0x64]
        BL       HAL_DMA_Start_IT
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        NOP      
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x100
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        ORR      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        ORR      r0,r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0
        B        |L24.22|
|L24.156|
        MOVS     r0,#2
        B        |L24.22|
        ENDP

|L24.160|
        DCD      UART_DMAReceiveCplt
|L24.164|
        DCD      UART_DMARxHalfCplt
|L24.168|
        DCD      UART_DMAError

        AREA ||i.HAL_UART_Receive_IT||, CODE, READONLY, ALIGN=1

HAL_UART_Receive_IT PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        LDRB     r0,[r3,#0x6a]
        CMP      r0,#0x20
        BNE      |L25.184|
        CBZ      r1,|L25.16|
        CBNZ     r2,|L25.20|
|L25.16|
        MOVS     r0,#1
|L25.18|
        POP      {r4,pc}
|L25.20|
        NOP      
        LDRB     r0,[r3,#0x68]
        CMP      r0,#1
        BNE      |L25.34|
        MOVS     r0,#2
        B        |L25.18|
|L25.34|
        MOVS     r0,#1
        STRB     r0,[r3,#0x68]
        NOP      
        STR      r1,[r3,#0x54]
        STRH     r2,[r3,#0x58]
        STRH     r2,[r3,#0x5a]
        NOP      
        LDR      r0,[r3,#8]
        CMP      r0,#0x1000
        BNE      |L25.84|
        LDR      r0,[r3,#0x10]
        CBNZ     r0,|L25.76|
        MOV      r0,#0x1ff
        STRH     r0,[r3,#0x5c]
        B        |L25.134|
|L25.76|
        MOVS     r0,#0xff
        STRH     r0,[r3,#0x5c]
        B        |L25.134|
|L25.84|
        LDR      r0,[r3,#8]
        CBNZ     r0,|L25.108|
        LDR      r0,[r3,#0x10]
        CBNZ     r0,|L25.100|
        MOVS     r0,#0xff
        STRH     r0,[r3,#0x5c]
        B        |L25.134|
|L25.100|
        MOVS     r0,#0x7f
        STRH     r0,[r3,#0x5c]
        B        |L25.134|
|L25.108|
        LDR      r0,[r3,#8]
        CMP      r0,#0x10000000
        BNE      |L25.134|
        LDR      r0,[r3,#0x10]
        CBNZ     r0,|L25.128|
        MOVS     r0,#0x7f
        STRH     r0,[r3,#0x5c]
        B        |L25.134|
|L25.128|
        MOVS     r0,#0x3f
        STRH     r0,[r3,#0x5c]
|L25.134|
        NOP      
        MOVS     r0,#0
        STR      r0,[r3,#0x6c]
        MOVS     r0,#0x22
        STRB     r0,[r3,#0x6a]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r3,#0x68]
        NOP      
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#8]
        ORR      r0,r0,#1
        LDR      r4,[r3,#0]
        STR      r0,[r4,#8]
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x120
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0]
        MOVS     r0,#0
        B        |L25.18|
|L25.184|
        MOVS     r0,#2
        B        |L25.18|
        ENDP


        AREA ||i.HAL_UART_RxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_RxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_RxHalfCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_RxHalfCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_Transmit||, CODE, READONLY, ALIGN=1

HAL_UART_Transmit PROC
        PUSH     {r3-r9,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        MOV      r9,#0
        LDRB     r0,[r4,#0x69]
        CMP      r0,#0x20
        BNE      |L28.194|
        CBZ      r5,|L28.28|
        CBNZ     r6,|L28.34|
|L28.28|
        MOVS     r0,#1
|L28.30|
        POP      {r3-r9,pc}
|L28.34|
        NOP      
        LDRB     r0,[r4,#0x68]
        CMP      r0,#1
        BNE      |L28.48|
        MOVS     r0,#2
        B        |L28.30|
|L28.48|
        MOVS     r0,#1
        STRB     r0,[r4,#0x68]
        NOP      
        MOVS     r0,#0
        ADDS     r4,r4,#0x50
        STR      r0,[r4,#0x1c]
        MOVS     r0,#0x21
        STRB     r0,[r4,#0x19]
        BL       HAL_GetTick
        MOV      r9,r0
        STRH     r6,[r4,#0]
        STRH     r6,[r4,#2]
        SUBS     r4,r4,#0x50
        B        |L28.148|
|L28.80|
        LDRH     r0,[r4,#0x52]
        SUBS     r0,r0,#1
        STRH     r0,[r4,#0x52]
        MOV      r3,r9
        MOVS     r2,#0
        MOVS     r1,#0x80
        MOV      r0,r4
        STR      r7,[sp,#0]
        BL       UART_WaitOnFlagUntilTimeout
        CBZ      r0,|L28.110|
        MOVS     r0,#3
        B        |L28.30|
|L28.110|
        LDR      r0,[r4,#8]
        CMP      r0,#0x1000
        BNE      |L28.140|
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L28.140|
        MOV      r8,r5
        LDRH     r0,[r8,#0]
        UBFX     r0,r0,#0,#9
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x28]
        ADDS     r5,r5,#2
        B        |L28.148|
|L28.140|
        LDRB     r0,[r5],#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x28]
|L28.148|
        LDRH     r0,[r4,#0x52]
        CMP      r0,#0
        BNE      |L28.80|
        MOV      r3,r9
        MOVS     r2,#0
        MOVS     r1,#0x40
        MOV      r0,r4
        STR      r7,[sp,#0]
        BL       UART_WaitOnFlagUntilTimeout
        CBZ      r0,|L28.176|
        MOVS     r0,#3
        B        |L28.30|
|L28.176|
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x69]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        NOP      
        B        |L28.30|
|L28.194|
        MOVS     r0,#2
        B        |L28.30|
        ENDP


        AREA ||i.HAL_UART_Transmit_DMA||, CODE, READONLY, ALIGN=2

HAL_UART_Transmit_DMA PROC
        PUSH     {r0-r2,r4-r7,lr}
        MOV      r4,r0
        MOV      r5,r2
        LDRB     r0,[r4,#0x69]
        CMP      r0,#0x20
        BNE      |L29.142|
        LDR      r0,[sp,#4]
        CBZ      r0,|L29.20|
        CBNZ     r5,|L29.24|
|L29.20|
        MOVS     r0,#1
|L29.22|
        POP      {r1-r7,pc}
|L29.24|
        NOP      
        LDRB     r0,[r4,#0x68]
        CMP      r0,#1
        BNE      |L29.38|
        MOVS     r0,#2
        B        |L29.22|
|L29.38|
        MOVS     r0,#1
        STRB     r0,[r4,#0x68]
        NOP      
        LDR      r0,[sp,#4]
        STR      r0,[r4,#0x4c]
        STRH     r5,[r4,#0x50]
        STRH     r5,[r4,#0x52]
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        MOVS     r0,#0x21
        STRB     r0,[r4,#0x69]
        LDR      r0,|L29.148|
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x3c]
        LDR      r0,|L29.152|
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x40]
        LDR      r0,|L29.156|
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x4c]
        MOVS     r0,#0
        LDR      r1,[r4,#0x60]
        STR      r0,[r1,#0x50]
        ADD      r6,sp,#4
        LDR      r3,[r4,#0]
        ADD      r2,r3,#0x28
        LDR      r1,[r6,#0]
        MOV      r3,r5
        LDR      r0,[r4,#0x60]
        BL       HAL_DMA_Start_IT
        MOVS     r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x20]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        NOP      
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        ORR      r0,r0,#0x80
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0
        B        |L29.22|
|L29.142|
        MOVS     r0,#2
        B        |L29.22|
        ENDP

        DCW      0x0000
|L29.148|
        DCD      UART_DMATransmitCplt
|L29.152|
        DCD      UART_DMATxHalfCplt
|L29.156|
        DCD      UART_DMAError

        AREA ||i.HAL_UART_Transmit_IT||, CODE, READONLY, ALIGN=1

HAL_UART_Transmit_IT PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        LDRB     r0,[r3,#0x69]
        CMP      r0,#0x20
        BNE      |L30.86|
        CBZ      r1,|L30.16|
        CBNZ     r2,|L30.20|
|L30.16|
        MOVS     r0,#1
|L30.18|
        POP      {r4,pc}
|L30.20|
        NOP      
        LDRB     r0,[r3,#0x68]
        CMP      r0,#1
        BNE      |L30.34|
        MOVS     r0,#2
        B        |L30.18|
|L30.34|
        MOVS     r0,#1
        STRB     r0,[r3,#0x68]
        NOP      
        STR      r1,[r3,#0x4c]!
        STRH     r2,[r3,#4]
        STRH     r2,[r3,#6]
        MOVS     r0,#0
        STR      r0,[r3,#0x20]
        MOVS     r0,#0x21
        STRB     r0,[r3,#0x1d]
        SUBS     r3,r3,#0x4c
        NOP      
        MOVS     r0,#0
        STRB     r0,[r3,#0x68]
        NOP      
        LDR      r0,[r3,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x80
        LDR      r4,[r3,#0]
        STR      r0,[r4,#0]
        MOVS     r0,#0
        B        |L30.18|
|L30.86|
        MOVS     r0,#2
        B        |L30.18|
        ENDP


        AREA ||i.HAL_UART_TxCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_TxCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.HAL_UART_TxHalfCpltCallback||, CODE, READONLY, ALIGN=1

HAL_UART_TxHalfCpltCallback PROC
        BX       lr
        ENDP


        AREA ||i.UART_AdvFeatureConfig||, CODE, READONLY, ALIGN=1

UART_AdvFeatureConfig PROC
        LDRB     r1,[r0,#0x24]
        AND      r1,r1,#1
        CBZ      r1,|L33.26|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        BIC      r1,r1,#0x20000
        LDR      r2,[r0,#0x28]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L33.26|
        LDRB     r1,[r0,#0x24]
        AND      r1,r1,#2
        CBZ      r1,|L33.52|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        BIC      r1,r1,#0x10000
        LDR      r2,[r0,#0x2c]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L33.52|
        LDRB     r1,[r0,#0x24]
        AND      r1,r1,#4
        CBZ      r1,|L33.78|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        BIC      r1,r1,#0x40000
        LDR      r2,[r0,#0x30]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L33.78|
        LDRB     r1,[r0,#0x24]
        AND      r1,r1,#8
        CBZ      r1,|L33.104|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        BIC      r1,r1,#0x8000
        LDR      r2,[r0,#0x34]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L33.104|
        LDRB     r1,[r0,#0x24]
        AND      r1,r1,#0x10
        CBZ      r1,|L33.130|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#8]
        BIC      r1,r1,#0x1000
        LDR      r2,[r0,#0x38]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#8]
|L33.130|
        LDRB     r1,[r0,#0x24]
        AND      r1,r1,#0x20
        CBZ      r1,|L33.156|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#8]
        BIC      r1,r1,#0x2000
        LDR      r2,[r0,#0x3c]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#8]
|L33.156|
        LDRB     r1,[r0,#0x24]
        AND      r1,r1,#0x40
        CBZ      r1,|L33.206|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        BIC      r1,r1,#0x100000
        LDR      r2,[r0,#0x40]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
        LDR      r1,[r0,#0x40]
        CMP      r1,#0x100000
        BNE      |L33.206|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        BIC      r1,r1,#0x600000
        LDR      r2,[r0,#0x44]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L33.206|
        LDRB     r1,[r0,#0x24]
        AND      r1,r1,#0x80
        CBZ      r1,|L33.232|
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#4]
        BIC      r1,r1,#0x80000
        LDR      r2,[r0,#0x48]
        ORRS     r1,r1,r2
        LDR      r2,[r0,#0]
        STR      r1,[r2,#4]
|L33.232|
        BX       lr
        ENDP


        AREA ||i.UART_CheckIdleState||, CODE, READONLY, ALIGN=1

UART_CheckIdleState PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r0,#0
        STR      r0,[r4,#0x6c]
        BL       HAL_GetTick
        MOV      r5,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#8
        CMP      r0,#8
        BNE      |L34.54|
        MVN      r0,#0xfe000000
        MOV      r3,r5
        MOVS     r2,#0
        MOV      r1,#0x200000
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       UART_WaitOnFlagUntilTimeout
        CBZ      r0,|L34.54|
        MOVS     r0,#3
|L34.52|
        POP      {r3-r5,pc}
|L34.54|
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x69]
        STRB     r0,[r4,#0x6a]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        NOP      
        NOP      
        B        |L34.52|
        ENDP


        AREA ||i.UART_DMAAbortOnError||, CODE, READONLY, ALIGN=1

UART_DMAAbortOnError PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x38]
        MOVS     r0,#0
        STRH     r0,[r4,#0x5a]
        STRH     r0,[r4,#0x52]
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMAError||, CODE, READONLY, ALIGN=1

UART_DMAError PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x38]
        MOVS     r0,#0
        ADDS     r4,r4,#0x52
        STRH     r0,[r4,#8]
        STRH     r0,[r4,#0]
        LDRB     r0,[r4,#0x17]
        SUBS     r4,r4,#0x52
        CMP      r0,#0x21
        BNE      |L36.38|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        AND      r0,r0,#0x80
        CBZ      r0,|L36.38|
        MOV      r0,r4
        BL       UART_EndTxTransfer
|L36.38|
        LDRB     r0,[r4,#0x6a]
        CMP      r0,#0x22
        BNE      |L36.62|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        AND      r0,r0,#0x40
        CBZ      r0,|L36.62|
        MOV      r0,r4
        BL       UART_EndRxTransfer
|L36.62|
        LDR      r0,[r4,#0x6c]
        ORR      r0,r0,#0x10
        STR      r0,[r4,#0x6c]
        MOV      r0,r4
        BL       HAL_UART_ErrorCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMAReceiveCplt||, CODE, READONLY, ALIGN=1

UART_DMAReceiveCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x38]
        LDR      r0,[r5,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x100
        CBNZ     r0,|L37.64|
        MOVS     r0,#0
        STRH     r0,[r4,#0x5a]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x100
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x6a]
|L37.64|
        MOV      r0,r4
        BL       HAL_UART_RxCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMARxHalfCplt||, CODE, READONLY, ALIGN=1

UART_DMARxHalfCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x38]
        MOV      r0,r5
        BL       HAL_UART_RxHalfCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMATransmitCplt||, CODE, READONLY, ALIGN=1

UART_DMATransmitCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r4,[r5,#0x38]
        LDR      r0,[r5,#0]
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x100
        CBNZ     r0,|L39.48|
        MOVS     r0,#0
        STRH     r0,[r4,#0x52]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0x80
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        B        |L39.54|
|L39.48|
        MOV      r0,r4
        BL       HAL_UART_TxCpltCallback
|L39.54|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_DMATxHalfCplt||, CODE, READONLY, ALIGN=1

UART_DMATxHalfCplt PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x38]
        MOV      r0,r5
        BL       HAL_UART_TxHalfCpltCallback
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_EndRxTransfer||, CODE, READONLY, ALIGN=1

UART_EndRxTransfer PROC
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0]
        BIC      r1,r1,#0x120
        LDR      r2,[r0,#0]
        STR      r1,[r2,#0]
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#8]
        BIC      r1,r1,#1
        LDR      r2,[r0,#0]
        STR      r1,[r2,#8]
        MOVS     r1,#0x20
        STRB     r1,[r0,#0x6a]
        BX       lr
        ENDP


        AREA ||i.UART_EndTransmit_IT||, CODE, READONLY, ALIGN=1

UART_EndTransmit_IT PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x40
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x69]
        MOV      r0,r4
        BL       HAL_UART_TxCpltCallback
        MOVS     r0,#0
        POP      {r4,pc}
        ENDP


        AREA ||i.UART_EndTxTransfer||, CODE, READONLY, ALIGN=1

UART_EndTxTransfer PROC
        LDR      r1,[r0,#0]
        LDR      r1,[r1,#0]
        BIC      r1,r1,#0xc0
        LDR      r2,[r0,#0]
        STR      r1,[r2,#0]
        MOVS     r1,#0x20
        STRB     r1,[r0,#0x69]
        BX       lr
        ENDP


        AREA ||i.UART_Receive_IT||, CODE, READONLY, ALIGN=1

UART_Receive_IT PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDRH     r6,[r4,#0x5c]
        LDRB     r0,[r4,#0x6a]
        CMP      r0,#0x22
        BNE      |L44.120|
        LDR      r0,[r4,#8]
        CMP      r0,#0x1000
        BNE      |L44.46|
        LDR      r0,[r4,#0x10]
        CBNZ     r0,|L44.46|
        LDR      r5,[r4,#0x54]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x24]
        ANDS     r0,r0,r6
        STRH     r0,[r5,#0]
        LDR      r0,[r4,#0x54]
        ADDS     r0,r0,#2
        STR      r0,[r4,#0x54]
        B        |L44.62|
|L44.46|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x24]
        UXTB     r1,r6
        ANDS     r0,r0,r1
        LDR      r2,[r4,#0x54]
        ADDS     r1,r2,#1
        STR      r1,[r4,#0x54]
        STRB     r0,[r2,#0]
|L44.62|
        LDRH     r0,[r4,#0x5a]
        SUBS     r0,r0,#1
        UXTH     r0,r0
        STRH     r0,[r4,#0x5a]
        CBNZ     r0,|L44.116|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x120
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x6a]
        MOV      r0,r4
        BL       HAL_UART_RxCpltCallback
        MOVS     r0,#0
|L44.114|
        POP      {r4-r6,pc}
|L44.116|
        MOVS     r0,#0
        B        |L44.114|
|L44.120|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#8
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0x18]
        MOVS     r0,#2
        B        |L44.114|
        ENDP


        AREA ||i.UART_SetConfig||, CODE, READONLY, ALIGN=2

UART_SetConfig PROC
        PUSH     {r4-r10,lr}
        MOV      r4,r0
        MOVS     r5,#0
        MOVS     r6,#0x10
        MOVS     r7,#0
        MOV      r8,r5
        MOV      r9,r5
        LDR      r1,[r4,#0x10]
        LDR      r0,[r4,#8]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x14]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0x1c]
        ORR      r5,r0,r1
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        LDR      r1,|L45.860|
        ANDS     r0,r0,r1
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x3000
        LDR      r1,[r4,#0xc]
        ORRS     r0,r0,r1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#4]
        LDR      r1,[r4,#0x20]
        LDR      r0,[r4,#0x18]
        ORR      r5,r0,r1
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#0xb00
        ORRS     r0,r0,r5
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        NOP      
        LDR      r1,|L45.864|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L45.138|
        LDR      r0,|L45.868|
        LDR      r0,[r0,#0]
        AND      r0,r0,#3
        CBZ      r0,|L45.118|
        CMP      r0,#1
        BEQ      |L45.126|
        CMP      r0,#2
        BEQ      |L45.122|
        CMP      r0,#3
        BNE      |L45.134|
        B        |L45.130|
|L45.118|
        MOVS     r6,#1
        B        |L45.136|
|L45.122|
        MOVS     r6,#2
        B        |L45.136|
|L45.126|
        MOVS     r6,#4
        B        |L45.136|
|L45.130|
        MOVS     r6,#8
        B        |L45.136|
|L45.134|
        NOP      
|L45.136|
        B        |L45.526|
|L45.138|
        LDR      r1,|L45.872|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L45.190|
        LDR      r0,|L45.868|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0xc
        CBZ      r0,|L45.170|
        CMP      r0,#4
        BEQ      |L45.178|
        CMP      r0,#8
        BEQ      |L45.174|
        CMP      r0,#0xc
        BNE      |L45.186|
        B        |L45.182|
|L45.170|
        MOVS     r6,#0
        B        |L45.188|
|L45.174|
        MOVS     r6,#2
        B        |L45.188|
|L45.178|
        MOVS     r6,#4
        B        |L45.188|
|L45.182|
        MOVS     r6,#8
        B        |L45.188|
|L45.186|
        NOP      
|L45.188|
        B        |L45.526|
|L45.190|
        LDR      r1,|L45.876|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L45.242|
        LDR      r0,|L45.868|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x30
        CBZ      r0,|L45.222|
        CMP      r0,#0x10
        BEQ      |L45.230|
        CMP      r0,#0x20
        BEQ      |L45.226|
        CMP      r0,#0x30
        BNE      |L45.238|
        B        |L45.234|
|L45.222|
        MOVS     r6,#0
        B        |L45.240|
|L45.226|
        MOVS     r6,#2
        B        |L45.240|
|L45.230|
        MOVS     r6,#4
        B        |L45.240|
|L45.234|
        MOVS     r6,#8
        B        |L45.240|
|L45.238|
        NOP      
|L45.240|
        B        |L45.526|
|L45.242|
        LDR      r1,|L45.880|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L45.294|
        LDR      r0,|L45.868|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0xc0
        CBZ      r0,|L45.274|
        CMP      r0,#0x40
        BEQ      |L45.282|
        CMP      r0,#0x80
        BEQ      |L45.278|
        CMP      r0,#0xc0
        BNE      |L45.290|
        B        |L45.286|
|L45.274|
        MOVS     r6,#0
        B        |L45.292|
|L45.278|
        MOVS     r6,#2
        B        |L45.292|
|L45.282|
        MOVS     r6,#4
        B        |L45.292|
|L45.286|
        MOVS     r6,#8
        B        |L45.292|
|L45.290|
        NOP      
|L45.292|
        B        |L45.526|
|L45.294|
        LDR      r1,|L45.884|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L45.352|
        LDR      r0,|L45.868|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x300
        CBZ      r0,|L45.332|
        CMP      r0,#0x100
        BEQ      |L45.340|
        CMP      r0,#0x200
        BEQ      |L45.336|
        CMP      r0,#0x300
        BNE      |L45.348|
        B        |L45.344|
|L45.332|
        MOVS     r6,#0
        B        |L45.350|
|L45.336|
        MOVS     r6,#2
        B        |L45.350|
|L45.340|
        MOVS     r6,#4
        B        |L45.350|
|L45.344|
        MOVS     r6,#8
        B        |L45.350|
|L45.348|
        NOP      
|L45.350|
        B        |L45.526|
|L45.352|
        LDR      r1,|L45.888|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L45.410|
        LDR      r0,|L45.868|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0xc00
        CBZ      r0,|L45.390|
        CMP      r0,#0x400
        BEQ      |L45.398|
        CMP      r0,#0x800
        BEQ      |L45.394|
        CMP      r0,#0xc00
        BNE      |L45.406|
        B        |L45.402|
|L45.390|
        MOVS     r6,#1
        B        |L45.408|
|L45.394|
        MOVS     r6,#2
        B        |L45.408|
|L45.398|
        MOVS     r6,#4
        B        |L45.408|
|L45.402|
        MOVS     r6,#8
        B        |L45.408|
|L45.406|
        NOP      
|L45.408|
        B        |L45.526|
|L45.410|
        LDR      r1,|L45.892|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L45.468|
        LDR      r0,|L45.868|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x3000
        CBZ      r0,|L45.448|
        CMP      r0,#0x1000
        BEQ      |L45.456|
        CMP      r0,#0x2000
        BEQ      |L45.452|
        CMP      r0,#0x3000
        BNE      |L45.464|
        B        |L45.460|
|L45.448|
        MOVS     r6,#0
        B        |L45.466|
|L45.452|
        MOVS     r6,#2
        B        |L45.466|
|L45.456|
        MOVS     r6,#4
        B        |L45.466|
|L45.460|
        MOVS     r6,#8
        B        |L45.466|
|L45.464|
        NOP      
|L45.466|
        B        |L45.526|
|L45.468|
        LDR      r1,|L45.896|
        LDR      r0,[r4,#0]
        CMP      r0,r1
        BNE      |L45.526|
        LDR      r0,|L45.868|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0xc000
        CBZ      r0,|L45.506|
        CMP      r0,#0x4000
        BEQ      |L45.514|
        CMP      r0,#0x8000
        BEQ      |L45.510|
        CMP      r0,#0xc000
        BNE      |L45.522|
        B        |L45.518|
|L45.506|
        MOVS     r6,#0
        B        |L45.524|
|L45.510|
        MOVS     r6,#2
        B        |L45.524|
|L45.514|
        MOVS     r6,#4
        B        |L45.524|
|L45.518|
        MOVS     r6,#8
        B        |L45.524|
|L45.522|
        NOP      
|L45.524|
        NOP      
|L45.526|
        NOP      
        LDR      r0,[r4,#0x1c]
        CMP      r0,#0x8000
        BNE      |L45.702|
        CMP      r6,#4
        BEQ      |L45.628|
        BGT      |L45.554|
        CBZ      r6,|L45.564|
        CMP      r6,#1
        BEQ      |L45.586|
        CMP      r6,#2
        BNE      |L45.672|
        B        |L45.608|
|L45.554|
        CMP      r6,#8
        BEQ      |L45.650|
        CMP      r6,#0x10
        BNE      |L45.672|
        B        |L45.674|
|L45.564|
        BL       HAL_RCC_GetPCLK1Freq
        LSLS     r0,r0,#1
        LDR      r1,[r4,#4]
        ADD      r0,r0,r1,LSR #1
        UDIV     r0,r0,r1
        UXTH     r8,r0
        B        |L45.680|
|L45.586|
        BL       HAL_RCC_GetPCLK2Freq
        LSLS     r0,r0,#1
        LDR      r1,[r4,#4]
        ADD      r0,r0,r1,LSR #1
        UDIV     r0,r0,r1
        UXTH     r8,r0
        B        |L45.680|
|L45.608|
        LDR      r1,|L45.900|
        LDR      r0,[r4,#4]
        ADD      r0,r1,r0,LSR #1
        LDR      r1,[r4,#4]
        UDIV     r0,r0,r1
        UXTH     r8,r0
        B        |L45.680|
|L45.628|
        BL       HAL_RCC_GetSysClockFreq
        LSLS     r0,r0,#1
        LDR      r1,[r4,#4]
        ADD      r0,r0,r1,LSR #1
        UDIV     r0,r0,r1
        UXTH     r8,r0
        B        |L45.680|
|L45.650|
        MOV      r1,#0x10000
        LDR      r0,[r4,#4]
        ADD      r0,r1,r0,LSR #1
        LDR      r1,[r4,#4]
        UDIV     r0,r0,r1
        UXTH     r8,r0
        B        |L45.680|
|L45.672|
        NOP      
|L45.674|
        MOV      r9,#1
        NOP      
|L45.680|
        NOP      
        MOV      r0,#0xfff0
        AND      r7,r8,r0
        UBFX     r0,r8,#1,#3
        ORRS     r7,r7,r0
        LDR      r0,[r4,#0]
        STR      r7,[r0,#0xc]
        B        |L45.852|
|L45.702|
        CMP      r6,#4
        BEQ      |L45.796|
        BGT      |L45.720|
        CBZ      r6,|L45.730|
        CMP      r6,#1
        BEQ      |L45.752|
        CMP      r6,#2
        BNE      |L45.842|
        B        |L45.774|
|L45.720|
        CMP      r6,#8
        BEQ      |L45.818|
        CMP      r6,#0x10
        BNE      |L45.842|
        B        |L45.844|
|L45.730|
        BL       HAL_RCC_GetPCLK1Freq
        LDR      r1,[r4,#4]
        ADD      r0,r0,r1,LSR #1
        UDIV     r0,r0,r1
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L45.850|
|L45.752|
        BL       HAL_RCC_GetPCLK2Freq
        LDR      r1,[r4,#4]
        ADD      r0,r0,r1,LSR #1
        UDIV     r0,r0,r1
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L45.850|
|L45.774|
        LDR      r1,|L45.904|
        LDR      r0,[r4,#4]
        ADD      r0,r1,r0,LSR #1
        LDR      r1,[r4,#4]
        UDIV     r0,r0,r1
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L45.850|
|L45.796|
        BL       HAL_RCC_GetSysClockFreq
        LDR      r1,[r4,#4]
        ADD      r0,r0,r1,LSR #1
        UDIV     r0,r0,r1
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L45.850|
|L45.818|
        MOV      r1,#0x8000
        LDR      r0,[r4,#4]
        ADD      r0,r1,r0,LSR #1
        LDR      r1,[r4,#4]
        UDIV     r0,r0,r1
        UXTH     r0,r0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0xc]
        B        |L45.850|
|L45.842|
        NOP      
|L45.844|
        MOV      r9,#1
        NOP      
|L45.850|
        NOP      
|L45.852|
        MOV      r0,r9
        POP      {r4-r10,pc}
        ENDP

        DCW      0x0000
|L45.860|
        DCD      0xefff69f3
|L45.864|
        DCD      0x40011000
|L45.868|
        DCD      0x40023890
|L45.872|
        DCD      0x40004400
|L45.876|
        DCD      0x40004800
|L45.880|
        DCD      0x40004c00
|L45.884|
        DCD      0x40005000
|L45.888|
        DCD      0x40011400
|L45.892|
        DCD      0x40007800
|L45.896|
        DCD      0x40007c00
|L45.900|
        DCD      0x01e84800
|L45.904|
        DCD      0x00f42400

        AREA ||i.UART_Transmit_IT||, CODE, READONLY, ALIGN=1

UART_Transmit_IT PROC
        MOV      r1,r0
        LDRB     r0,[r1,#0x69]
        CMP      r0,#0x21
        BNE      |L46.102|
        LDRH     r0,[r1,#0x52]
        CBNZ     r0,|L46.44|
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x80
        LDR      r3,[r1,#0]
        STR      r0,[r3,#0]
        LDR      r0,[r1,#0]
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x40
        LDR      r3,[r1,#0]
        STR      r0,[r3,#0]
        MOVS     r0,#0
|L46.42|
        BX       lr
|L46.44|
        LDR      r0,[r1,#8]
        CMP      r0,#0x1000
        BNE      |L46.76|
        LDR      r0,[r1,#0x10]
        CBNZ     r0,|L46.76|
        LDR      r2,[r1,#0x4c]
        LDRH     r0,[r2,#0]
        UBFX     r0,r0,#0,#9
        LDR      r3,[r1,#0]
        STR      r0,[r3,#0x28]
        LDR      r0,[r1,#0x4c]
        ADDS     r0,r0,#2
        STR      r0,[r1,#0x4c]
        B        |L46.88|
|L46.76|
        LDR      r3,[r1,#0x4c]
        ADDS     r0,r3,#1
        STR      r0,[r1,#0x4c]
        LDRB     r0,[r3,#0]
        LDR      r3,[r1,#0]
        STR      r0,[r3,#0x28]
|L46.88|
        LDRH     r0,[r1,#0x52]
        SUBS     r0,r0,#1
        STRH     r0,[r1,#0x52]
        MOVS     r0,#0
        B        |L46.42|
|L46.102|
        MOVS     r0,#2
        B        |L46.42|
        ENDP


        AREA ||i.UART_WaitOnFlagUntilTimeout||, CODE, READONLY, ALIGN=1

UART_WaitOnFlagUntilTimeout PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r7,r2
        MOV      r8,r3
        LDR      r6,[sp,#0x18]
        B        |L47.84|
|L47.16|
        ADDS     r0,r6,#1
        CBZ      r0,|L47.84|
        CBZ      r6,|L47.34|
        BL       HAL_GetTick
        SUB      r0,r0,r8
        CMP      r0,r6
        BCC      |L47.84|
|L47.34|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x1a0
        LDR      r1,[r4,#0]
        STR      r0,[r1,#0]
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#8]
        BIC      r0,r0,#1
        LDR      r1,[r4,#0]
        STR      r0,[r1,#8]
        MOVS     r0,#0x20
        STRB     r0,[r4,#0x69]
        STRB     r0,[r4,#0x6a]
        NOP      
        MOVS     r0,#0
        STRB     r0,[r4,#0x68]
        NOP      
        MOVS     r0,#3
|L47.80|
        POP      {r4-r8,pc}
|L47.84|
        LDR      r0,[r4,#0]
        LDR      r0,[r0,#0x1c]
        ANDS     r0,r0,r5
        CMP      r0,r5
        BNE      |L47.98|
        MOVS     r0,#1
        B        |L47.100|
|L47.98|
        MOVS     r0,#0
|L47.100|
        CMP      r0,r7
        BEQ      |L47.16|
        MOVS     r0,#0
        B        |L47.80|
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_uart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f7xx_hal_uart_c_d497114f____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___20_stm32f7xx_hal_uart_c_d497114f____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f7xx_hal_uart_c_d497114f____REVSH|
#line 402
|__asm___20_stm32f7xx_hal_uart_c_d497114f____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f7xx_hal_uart_c_d497114f____RRX|
#line 587
|__asm___20_stm32f7xx_hal_uart_c_d497114f____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_HalfDuplex_EnableReceiver [CODE]
        EXPORT HAL_HalfDuplex_EnableTransmitter [CODE]
        EXPORT HAL_HalfDuplex_Init [CODE]
        EXPORT HAL_LIN_Init [CODE]
        EXPORT HAL_LIN_SendBreak [CODE]
        EXPORT HAL_MultiProcessorEx_AddressLength_Set [CODE]
        EXPORT HAL_MultiProcessor_DisableMuteMode [CODE]
        EXPORT HAL_MultiProcessor_EnableMuteMode [CODE]
        EXPORT HAL_MultiProcessor_EnterMuteMode [CODE]
        EXPORT HAL_MultiProcessor_Init [CODE]
        EXPORT HAL_RS485Ex_Init [CODE]
        EXPORT HAL_UART_DMAPause [CODE]
        EXPORT HAL_UART_DMAResume [CODE]
        EXPORT HAL_UART_DMAStop [CODE]
        EXPORT HAL_UART_DeInit [CODE]
        EXPORT HAL_UART_ErrorCallback [CODE,WEAK]
        EXPORT HAL_UART_GetError [CODE]
        EXPORT HAL_UART_GetState [CODE]
        EXPORT HAL_UART_IRQHandler [CODE]
        EXPORT HAL_UART_Init [CODE]
        EXPORT HAL_UART_MspDeInit [CODE,WEAK]
        EXPORT HAL_UART_MspInit [CODE,WEAK]
        EXPORT HAL_UART_Receive [CODE]
        EXPORT HAL_UART_Receive_DMA [CODE]
        EXPORT HAL_UART_Receive_IT [CODE]
        EXPORT HAL_UART_RxCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_RxHalfCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_Transmit [CODE]
        EXPORT HAL_UART_Transmit_DMA [CODE]
        EXPORT HAL_UART_Transmit_IT [CODE]
        EXPORT HAL_UART_TxCpltCallback [CODE,WEAK]
        EXPORT HAL_UART_TxHalfCpltCallback [CODE,WEAK]
        EXPORT UART_AdvFeatureConfig [CODE]
        EXPORT UART_CheckIdleState [CODE]
        EXPORT UART_SetConfig [CODE]
        EXPORT UART_WaitOnFlagUntilTimeout [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GetTick [CODE]
        IMPORT HAL_RCC_GetPCLK1Freq [CODE]
        IMPORT HAL_RCC_GetPCLK2Freq [CODE]
        IMPORT HAL_RCC_GetSysClockFreq [CODE]
        IMPORT HAL_DMA_Start_IT [CODE]
        IMPORT HAL_DMA_Abort [CODE]
        IMPORT HAL_DMA_Abort_IT [CODE]

        KEEP UART_DMAAbortOnError
        KEEP UART_DMAError
        KEEP UART_DMAReceiveCplt
        KEEP UART_DMARxHalfCplt
        KEEP UART_DMATransmitCplt
        KEEP UART_DMATxHalfCplt
        KEEP UART_EndRxTransfer
        KEEP UART_EndTransmit_IT
        KEEP UART_EndTxTransfer
        KEEP UART_Receive_IT
        KEEP UART_Transmit_IT

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
