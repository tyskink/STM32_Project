; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\stm32f7xx_hal_pwr_ex.o --depend=cnn_1\stm32f7xx_hal_pwr_ex.d --cpu=Cortex-M7.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\stm32f7xx_hal_pwr_ex.crf ../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.HAL_PWREx_ControlVoltageScaling||, CODE, READONLY, ALIGN=2

HAL_PWREx_ControlVoltageScaling PROC
        PUSH     {r3-r5,lr}
        MOV      r5,r0
        MOVS     r4,#0
        NOP      
        LDR      r0,|L1.228|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x10000000
        LDR      r1,|L1.228|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x10000000
        STR      r0,[sp,#0]
        NOP      
        NOP      
        LDR      r0,|L1.228|
        SUBS     r0,r0,#0x38
        LDR      r0,[r0,#0]
        AND      r0,r0,#0xc
        CMP      r0,#8
        BEQ      |L1.220|
        LDR      r0,|L1.228|
        SUBS     r0,r0,#0x40
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x1000000
        LDR      r1,|L1.228|
        SUBS     r1,r1,#0x40
        STR      r0,[r1,#0]
        BL       HAL_GetTick
        MOV      r4,r0
        B        |L1.86|
|L1.72|
        BL       HAL_GetTick
        SUBS     r0,r0,r4
        CMP      r0,#2
        BLS      |L1.86|
        MOVS     r0,#3
|L1.84|
        POP      {r3-r5,pc}
|L1.86|
        LDR      r0,|L1.228|
        SUBS     r0,r0,#0x40
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#25,#1
        CMP      r0,#0
        BNE      |L1.72|
        NOP      
        LDR      r0,|L1.232|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0xc000
        ORRS     r0,r0,r5
        LDR      r1,|L1.232|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        AND      r0,r0,#0xc000
        STR      r0,[sp,#0]
        NOP      
        NOP      
        LDR      r0,|L1.228|
        SUBS     r0,r0,#0x40
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.228|
        SUBS     r1,r1,#0x40
        STR      r0,[r1,#0]
        BL       HAL_GetTick
        MOV      r4,r0
        B        |L1.168|
|L1.154|
        BL       HAL_GetTick
        SUBS     r0,r0,r4
        CMP      r0,#2
        BLS      |L1.168|
        MOVS     r0,#3
        B        |L1.84|
|L1.168|
        LDR      r0,|L1.228|
        SUBS     r0,r0,#0x40
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#25,#1
        CMP      r0,#0
        BEQ      |L1.154|
        BL       HAL_GetTick
        MOV      r4,r0
        B        |L1.206|
|L1.190|
        BL       HAL_GetTick
        SUBS     r0,r0,r4
        CMP      r0,#0x3e8
        BLS      |L1.206|
        MOVS     r0,#3
        B        |L1.84|
|L1.206|
        LDR      r0,|L1.232|
        LDR      r0,[r0,#4]
        UBFX     r0,r0,#14,#1
        CMP      r0,#0
        BEQ      |L1.190|
        B        |L1.224|
|L1.220|
        MOVS     r0,#1
        B        |L1.84|
|L1.224|
        MOVS     r0,#0
        B        |L1.84|
        ENDP

|L1.228|
        DCD      0x40023840
|L1.232|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_DisableBkUpReg||, CODE, READONLY, ALIGN=2

HAL_PWREx_DisableBkUpReg PROC
        PUSH     {r4,lr}
        MOVS     r4,#0
        LDR      r0,|L2.68|
        LDR      r0,[r0,#4]
        BIC      r0,r0,#0x200
        LDR      r1,|L2.68|
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        ORR      r0,r0,#0x100
        STR      r0,[r1,#4]
        BL       HAL_GetTick
        MOV      r4,r0
        B        |L2.50|
|L2.34|
        BL       HAL_GetTick
        SUBS     r0,r0,r4
        CMP      r0,#0x3e8
        BLS      |L2.50|
        MOVS     r0,#3
|L2.48|
        POP      {r4,pc}
|L2.50|
        LDR      r0,|L2.68|
        LDR      r0,[r0,#4]
        UBFX     r0,r0,#3,#1
        CMP      r0,#0
        BNE      |L2.34|
        NOP      
        B        |L2.48|
        ENDP

        DCW      0x0000
|L2.68|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_DisableFlashPowerDown||, CODE, READONLY, ALIGN=2

HAL_PWREx_DisableFlashPowerDown PROC
        LDR      r0,|L3.16|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x200
        LDR      r1,|L3.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L3.16|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_DisableLowRegulatorLowVoltage||, CODE, READONLY, ALIGN=2

HAL_PWREx_DisableLowRegulatorLowVoltage PROC
        LDR      r0,|L4.16|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x400
        LDR      r1,|L4.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L4.16|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_DisableMainRegulatorLowVoltage||, CODE, READONLY, ALIGN=2

HAL_PWREx_DisableMainRegulatorLowVoltage PROC
        LDR      r0,|L5.16|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x800
        LDR      r1,|L5.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L5.16|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_DisableOverDrive||, CODE, READONLY, ALIGN=2

HAL_PWREx_DisableOverDrive PROC
        PUSH     {r3-r5,lr}
        MOVS     r4,#0
        NOP      
        LDR      r0,|L6.136|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x10000000
        LDR      r1,|L6.136|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x10000000
        STR      r0,[sp,#0]
        NOP      
        NOP      
        LDR      r0,|L6.140|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x20000
        LDR      r1,|L6.140|
        STR      r0,[r1,#0]
        BL       HAL_GetTick
        MOV      r4,r0
        B        |L6.68|
|L6.52|
        BL       HAL_GetTick
        SUBS     r0,r0,r4
        CMP      r0,#0x3e8
        BLS      |L6.68|
        MOVS     r0,#3
|L6.66|
        POP      {r3-r5,pc}
|L6.68|
        LDR      r0,|L6.140|
        LDR      r0,[r0,#4]
        AND      r0,r0,#0x20000
        CMP      r0,#0x20000
        BEQ      |L6.52|
        LDR      r0,|L6.140|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x10000
        LDR      r1,|L6.140|
        STR      r0,[r1,#0]
        BL       HAL_GetTick
        MOV      r4,r0
        B        |L6.118|
|L6.102|
        BL       HAL_GetTick
        SUBS     r0,r0,r4
        CMP      r0,#0x3e8
        BLS      |L6.118|
        MOVS     r0,#3
        B        |L6.66|
|L6.118|
        LDR      r0,|L6.140|
        LDR      r0,[r0,#4]
        AND      r0,r0,#0x10000
        CMP      r0,#0x10000
        BEQ      |L6.102|
        MOVS     r0,#0
        B        |L6.66|
        ENDP

|L6.136|
        DCD      0x40023840
|L6.140|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_EnableBkUpReg||, CODE, READONLY, ALIGN=2

HAL_PWREx_EnableBkUpReg PROC
        PUSH     {r4,lr}
        MOVS     r4,#0
        LDR      r0,|L7.68|
        LDR      r0,[r0,#4]
        ORR      r0,r0,#0x200
        LDR      r1,|L7.68|
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        ORR      r0,r0,#0x100
        STR      r0,[r1,#4]
        BL       HAL_GetTick
        MOV      r4,r0
        B        |L7.50|
|L7.34|
        BL       HAL_GetTick
        SUBS     r0,r0,r4
        CMP      r0,#0x3e8
        BLS      |L7.50|
        MOVS     r0,#3
|L7.48|
        POP      {r4,pc}
|L7.50|
        LDR      r0,|L7.68|
        LDR      r0,[r0,#4]
        UBFX     r0,r0,#3,#1
        CMP      r0,#0
        BEQ      |L7.34|
        MOVS     r0,#0
        B        |L7.48|
        ENDP

        DCW      0x0000
|L7.68|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_EnableFlashPowerDown||, CODE, READONLY, ALIGN=2

HAL_PWREx_EnableFlashPowerDown PROC
        LDR      r0,|L8.16|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x200
        LDR      r1,|L8.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L8.16|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_EnableLowRegulatorLowVoltage||, CODE, READONLY, ALIGN=2

HAL_PWREx_EnableLowRegulatorLowVoltage PROC
        LDR      r0,|L9.16|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x400
        LDR      r1,|L9.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L9.16|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_EnableMainRegulatorLowVoltage||, CODE, READONLY, ALIGN=2

HAL_PWREx_EnableMainRegulatorLowVoltage PROC
        LDR      r0,|L10.16|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x800
        LDR      r1,|L10.16|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L10.16|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_EnableOverDrive||, CODE, READONLY, ALIGN=2

HAL_PWREx_EnableOverDrive PROC
        PUSH     {r3-r5,lr}
        MOVS     r4,#0
        NOP      
        LDR      r0,|L11.136|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x10000000
        LDR      r1,|L11.136|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x10000000
        STR      r0,[sp,#0]
        NOP      
        NOP      
        LDR      r0,|L11.140|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x10000
        LDR      r1,|L11.140|
        STR      r0,[r1,#0]
        BL       HAL_GetTick
        MOV      r4,r0
        B        |L11.68|
|L11.52|
        BL       HAL_GetTick
        SUBS     r0,r0,r4
        CMP      r0,#0x3e8
        BLS      |L11.68|
        MOVS     r0,#3
|L11.66|
        POP      {r3-r5,pc}
|L11.68|
        LDR      r0,|L11.140|
        LDR      r0,[r0,#4]
        AND      r0,r0,#0x10000
        CMP      r0,#0x10000
        BNE      |L11.52|
        LDR      r0,|L11.140|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x20000
        LDR      r1,|L11.140|
        STR      r0,[r1,#0]
        BL       HAL_GetTick
        MOV      r4,r0
        B        |L11.118|
|L11.102|
        BL       HAL_GetTick
        SUBS     r0,r0,r4
        CMP      r0,#0x3e8
        BLS      |L11.118|
        MOVS     r0,#3
        B        |L11.66|
|L11.118|
        LDR      r0,|L11.140|
        LDR      r0,[r0,#4]
        AND      r0,r0,#0x20000
        CMP      r0,#0x20000
        BNE      |L11.102|
        MOVS     r0,#0
        B        |L11.66|
        ENDP

|L11.136|
        DCD      0x40023840
|L11.140|
        DCD      0x40007000

        AREA ||i.HAL_PWREx_EnterUnderDriveSTOPMode||, CODE, READONLY, ALIGN=2

HAL_PWREx_EnterUnderDriveSTOPMode PROC
        PUSH     {r3-r7,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOVS     r4,#0
        MOVS     r7,#0
        NOP      
        LDR      r0,|L12.152|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x10000000
        LDR      r1,|L12.152|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        AND      r0,r0,#0x10000000
        STR      r0,[sp,#0]
        NOP      
        NOP      
        LDR      r0,|L12.156|
        LDR      r0,[r0,#4]
        ORR      r0,r0,#0xc0000
        LDR      r1,|L12.156|
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0xc0000
        STR      r0,[r1,#0]
        BL       HAL_GetTick
        MOV      r7,r0
        B        |L12.84|
|L12.68|
        BL       HAL_GetTick
        SUBS     r0,r0,r7
        CMP      r0,#0x3e8
        BLS      |L12.84|
        MOVS     r0,#3
|L12.82|
        POP      {r3-r7,pc}
|L12.84|
        LDR      r0,|L12.156|
        LDR      r0,[r0,#4]
        AND      r0,r0,#0xc0000
        CMP      r0,#0xc0000
        BEQ      |L12.68|
        LDR      r0,|L12.156|
        LDR      r4,[r0,#0]
        MOV      r0,#0xc03
        BICS     r4,r4,r0
        ORRS     r4,r4,r5
        LDR      r0,|L12.156|
        STR      r4,[r0,#0]
        LDR      r0,|L12.160|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#4
        LDR      r1,|L12.160|
        STR      r0,[r1,#0]
        CMP      r6,#1
        BNE      |L12.134|
        WFI      
        B        |L12.136|
|L12.134|
        WFE      
|L12.136|
        LDR      r0,|L12.160|
        LDR      r0,[r0,#0]
        BIC      r0,r0,#4
        LDR      r1,|L12.160|
        STR      r0,[r1,#0]
        MOVS     r0,#0
        B        |L12.82|
        ENDP

|L12.152|
        DCD      0x40023840
|L12.156|
        DCD      0x40007000
|L12.160|
        DCD      0xe000ed10

        AREA ||i.HAL_PWREx_GetVoltageRange||, CODE, READONLY, ALIGN=2

HAL_PWREx_GetVoltageRange PROC
        LDR      r0,|L13.12|
        LDR      r0,[r0,#0]
        AND      r0,r0,#0xc000
        BX       lr
        ENDP

        DCW      0x0000
|L13.12|
        DCD      0x40007000

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_pwr_ex.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32f7xx_hal_pwr_ex_c_1028ebfa____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___22_stm32f7xx_hal_pwr_ex_c_1028ebfa____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32f7xx_hal_pwr_ex_c_1028ebfa____REVSH|
#line 402
|__asm___22_stm32f7xx_hal_pwr_ex_c_1028ebfa____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32f7xx_hal_pwr_ex_c_1028ebfa____RRX|
#line 587
|__asm___22_stm32f7xx_hal_pwr_ex_c_1028ebfa____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT HAL_PWREx_ControlVoltageScaling [CODE]
        EXPORT HAL_PWREx_DisableBkUpReg [CODE]
        EXPORT HAL_PWREx_DisableFlashPowerDown [CODE]
        EXPORT HAL_PWREx_DisableLowRegulatorLowVoltage [CODE]
        EXPORT HAL_PWREx_DisableMainRegulatorLowVoltage [CODE]
        EXPORT HAL_PWREx_DisableOverDrive [CODE]
        EXPORT HAL_PWREx_EnableBkUpReg [CODE]
        EXPORT HAL_PWREx_EnableFlashPowerDown [CODE]
        EXPORT HAL_PWREx_EnableLowRegulatorLowVoltage [CODE]
        EXPORT HAL_PWREx_EnableMainRegulatorLowVoltage [CODE]
        EXPORT HAL_PWREx_EnableOverDrive [CODE]
        EXPORT HAL_PWREx_EnterUnderDriveSTOPMode [CODE]
        EXPORT HAL_PWREx_GetVoltageRange [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT HAL_GetTick [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
