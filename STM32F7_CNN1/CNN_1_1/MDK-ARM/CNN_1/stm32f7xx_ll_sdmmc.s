; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -ocnn_1\stm32f7xx_ll_sdmmc.o --depend=cnn_1\stm32f7xx_ll_sdmmc.d --cpu=Cortex-M7 --fpu=SoftVFP --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc -I../Drivers/STM32F7xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src/drivers -I../Drivers/CMSIS/Device/ST/STM32F7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\..\..\..\STM32_Project -I..\..\..\STM32F7_Project -I..\..\..\..\LKML_C\Src -I..\..\..\..\LKML_C -I.\RTE\_CNN_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DSTM32F746xx -DUSE_HAL_DRIVER -DSTM32F746xx --omf_browse=cnn_1\stm32f7xx_ll_sdmmc.crf ../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_ll_sdmmc.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.SDMMC_CmdAppCommand||, CODE, READONLY, ALIGN=1

SDMMC_CmdAppCommand PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x37
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0x37
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdAppOperCommand||, CODE, READONLY, ALIGN=2

SDMMC_CmdAppOperCommand PROC
        PUSH     {r4,r5,lr}
        LDR      r2,|L2.48|
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x29
        ORRS     r1,r1,r2
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOV      r0,r4
        BL       SDMMC_GetCmdResp3
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP

|L2.48|
        DCD      0x80100000

        AREA ||i.SDMMC_CmdBlockLength||, CODE, READONLY, ALIGN=1

SDMMC_CmdBlockLength PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x10
        ADD      r12,sp,#8
        LSLS     r5,r0,#6
        STRD     r1,r0,[sp,#0]
        MOVS     r2,#0x40
        MOV      r1,sp
        MOVS     r3,#0
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0x10
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdBusWidth||, CODE, READONLY, ALIGN=1

SDMMC_CmdBusWidth PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#6
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#6
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdErase||, CODE, READONLY, ALIGN=1

SDMMC_CmdErase PROC
        PUSH     {r4,lr}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        MOVS     r1,#0
        MOVS     r0,#0x26
        MOVS     r2,#0x40
        STRD     r2,r1,[sp,#8]
        STRD     r1,r0,[sp,#0]
        LSLS     r3,r2,#4
        MOV      r1,sp
        MOV      r0,r4
        STR      r3,[sp,#0x10]
        BL       SDMMC_SendCommand
        MOVS     r1,#0x26
        MOV      r2,#0xf618
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x18
        POP      {r4,pc}
        ENDP


        AREA ||i.SDMMC_CmdEraseEndAdd||, CODE, READONLY, ALIGN=1

SDMMC_CmdEraseEndAdd PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x24
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0x24
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdEraseStartAdd||, CODE, READONLY, ALIGN=1

SDMMC_CmdEraseStartAdd PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x23
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0x23
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdGoIdleState||, CODE, READONLY, ALIGN=2

SDMMC_CmdGoIdleState PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r5,r0
        MOVS     r4,#0
        MOV      r1,sp
        MOV      r0,#0x400
        STR      r4,[sp,#0]
        STR      r4,[sp,#4]
        STR      r4,[sp,#8]
        STRD     r4,r0,[sp,#0xc]
        MOV      r0,r5
        BL       SDMMC_SendCommand
        LDR      r2,|L8.76|
        MOV      r0,#0x1f40
        MOV      r1,#0x1388
        LDR      r2,[r2,#0]  ; SystemCoreClock
        UDIV     r0,r2,r0
        MULS     r0,r1,r0
|L8.48|
        SUBS     r0,r0,#1
        BCS      |L8.60|
        MOV      r0,#0x80000000
|L8.56|
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
|L8.60|
        LDR      r1,[r5,#0x34]
        LSLS     r1,r1,#24
        BPL      |L8.48|
        MOV      r1,#0x5ff
        MOV      r0,r4
        STR      r1,[r5,#0x38]
        B        |L8.56|
        ENDP

|L8.76|
        DCD      SystemCoreClock

        AREA ||i.SDMMC_CmdOpCondition||, CODE, READONLY, ALIGN=1

SDMMC_CmdOpCondition PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#1
        ADD      r12,sp,#8
        LSLS     r5,r0,#10
        STRD     r1,r0,[sp,#0]
        MOVS     r2,#0x40
        MOV      r1,sp
        MOVS     r3,#0
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOV      r0,r4
        BL       SDMMC_GetCmdResp3
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdOperCond||, CODE, READONLY, ALIGN=2

SDMMC_CmdOperCond PROC
        PUSH     {r4-r6,lr}
        MOVS     r1,#8
        MOV      r4,r0
        SUB      sp,sp,#0x14
        MOV      r0,#0x1aa
        MOVS     r6,#0x40
        LSLS     r2,r1,#7
        STM      sp,{r0,r1,r6}
        MOVS     r5,#0
        MOV      r1,sp
        STRD     r5,r2,[sp,#0xc]
        MOV      r0,r4
        BL       SDMMC_SendCommand
        LDR      r2,|L10.96|
        MOV      r0,#0x1f40
        MOV      r1,#0x1388
        LDR      r2,[r2,#0]  ; SystemCoreClock
        UDIV     r0,r2,r0
        MULS     r0,r1,r0
|L10.52|
        SUBS     r0,r0,#1
        BCS      |L10.62|
        MOV      r5,#0x80000000
        B        |L10.88|
|L10.62|
        LDR      r1,[r4,#0x34]
        TST      r1,#0x45
        BEQ      |L10.52|
        LDR      r0,[r4,#0x34]
        LSLS     r0,r0,#29
        BPL      |L10.80|
        MOVS     r5,#4
        B        |L10.86|
|L10.80|
        LDR      r0,[r4,#0x34]
        LSLS     r0,r0,#25
        BPL      |L10.88|
|L10.86|
        STR      r6,[r4,#0x38]
|L10.88|
        ADD      sp,sp,#0x14
        MOV      r0,r5
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L10.96|
        DCD      SystemCoreClock

        AREA ||i.SDMMC_CmdReadMultiBlock||, CODE, READONLY, ALIGN=1

SDMMC_CmdReadMultiBlock PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x12
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0x12
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdReadSingleBlock||, CODE, READONLY, ALIGN=1

SDMMC_CmdReadSingleBlock PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x11
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0x11
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdSDEraseEndAdd||, CODE, READONLY, ALIGN=1

SDMMC_CmdSDEraseEndAdd PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x21
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0x21
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdSDEraseStartAdd||, CODE, READONLY, ALIGN=1

SDMMC_CmdSDEraseStartAdd PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x20
        ADD      r12,sp,#8
        LSLS     r5,r0,#5
        STRD     r1,r0,[sp,#0]
        MOVS     r2,#0x40
        MOV      r1,sp
        MOVS     r3,#0
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0x20
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdSelDesel||, CODE, READONLY, ALIGN=1

SDMMC_CmdSelDesel PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r1,#0x40
        ADD      r12,sp,#4
        MOVS     r0,#7
        STR      r2,[sp,#0]
        MOVS     r3,#0
        LSLS     r5,r1,#4
        STM      r12,{r0,r1,r3,r5}
        MOV      r1,sp
        MOV      r0,r4
        BL       SDMMC_SendCommand
        MOVS     r1,#7
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdSendCID||, CODE, READONLY, ALIGN=1

SDMMC_CmdSendCID PROC
        PUSH     {r4,lr}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        MOVS     r1,#0
        MOVS     r0,#2
        MOVS     r2,#0xc0
        LSLS     r3,r0,#9
        STR      r3,[sp,#0x10]
        STRD     r1,r0,[sp,#0]
        STRD     r2,r1,[sp,#8]
        MOV      r1,sp
        MOV      r0,r4
        BL       SDMMC_SendCommand
        MOV      r0,r4
        BL       SDMMC_GetCmdResp2
        ADD      sp,sp,#0x18
        POP      {r4,pc}
        ENDP


        AREA ||i.SDMMC_CmdSendCSD||, CODE, READONLY, ALIGN=1

SDMMC_CmdSendCSD PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#9
        ADD      r12,sp,#8
        MOVS     r2,#0xc0
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        MOV      r5,#0x400
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOV      r0,r4
        BL       SDMMC_GetCmdResp2
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdSendSCR||, CODE, READONLY, ALIGN=1

SDMMC_CmdSendSCR PROC
        PUSH     {r4,lr}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        MOVS     r1,#0
        MOVS     r0,#0x33
        MOVS     r2,#0x40
        STRD     r2,r1,[sp,#8]
        STRD     r1,r0,[sp,#0]
        LSLS     r3,r2,#4
        MOV      r1,sp
        MOV      r0,r4
        STR      r3,[sp,#0x10]
        BL       SDMMC_SendCommand
        MOVS     r1,#0x33
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x18
        POP      {r4,pc}
        ENDP


        AREA ||i.SDMMC_CmdSendStatus||, CODE, READONLY, ALIGN=1

SDMMC_CmdSendStatus PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0xd
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0xd
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdSetRelAdd||, CODE, READONLY, ALIGN=1

SDMMC_CmdSetRelAdd PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r1
        MOVS     r1,#0
        MOV      r5,r0
        MOVS     r0,#3
        MOVS     r2,#0x40
        STRD     r2,r1,[sp,#8]
        STRD     r1,r0,[sp,#0]
        LSLS     r3,r2,#4
        MOV      r1,sp
        MOV      r0,r5
        STR      r3,[sp,#0x10]
        BL       SDMMC_SendCommand
        MOVS     r1,#3
        MOV      r2,r4
        MOV      r0,r5
        BL       SDMMC_GetCmdResp6
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdStatusRegister||, CODE, READONLY, ALIGN=1

SDMMC_CmdStatusRegister PROC
        PUSH     {r4,lr}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        MOVS     r1,#0
        MOVS     r0,#0xd
        MOVS     r2,#0x40
        STRD     r2,r1,[sp,#8]
        STRD     r1,r0,[sp,#0]
        LSLS     r3,r2,#4
        MOV      r1,sp
        MOV      r0,r4
        STR      r3,[sp,#0x10]
        BL       SDMMC_SendCommand
        MOVS     r1,#0xd
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x18
        POP      {r4,pc}
        ENDP


        AREA ||i.SDMMC_CmdStopTransfer||, CODE, READONLY, ALIGN=2

SDMMC_CmdStopTransfer PROC
        PUSH     {r4,lr}
        SUB      sp,sp,#0x18
        MOV      r4,r0
        MOVS     r1,#0
        MOVS     r0,#0xc
        MOVS     r2,#0x40
        STRD     r2,r1,[sp,#8]
        STRD     r1,r0,[sp,#0]
        LSLS     r3,r2,#4
        MOV      r1,sp
        MOV      r0,r4
        STR      r3,[sp,#0x10]
        BL       SDMMC_SendCommand
        LDR      r2,|L22.48|
        MOVS     r1,#0xc
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x18
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L22.48|
        DCD      0x05f5e100

        AREA ||i.SDMMC_CmdSwitch||, CODE, READONLY, ALIGN=1

SDMMC_CmdSwitch PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#6
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#6
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdWriteMultiBlock||, CODE, READONLY, ALIGN=1

SDMMC_CmdWriteMultiBlock PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x19
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0x19
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_CmdWriteSingleBlock||, CODE, READONLY, ALIGN=1

SDMMC_CmdWriteSingleBlock PROC
        PUSH     {r4,r5,lr}
        SUB      sp,sp,#0x14
        MOV      r4,r0
        MOVS     r0,#0x18
        MOVS     r2,#0x40
        ADD      r12,sp,#8
        STRD     r1,r0,[sp,#0]
        MOVS     r3,#0
        MOV      r1,sp
        LSLS     r5,r2,#4
        MOV      r0,r4
        STM      r12,{r2,r3,r5}
        BL       SDMMC_SendCommand
        MOVS     r1,#0x18
        MOV      r2,#0x1388
        MOV      r0,r4
        BL       SDMMC_GetCmdResp1
        ADD      sp,sp,#0x14
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.SDMMC_ConfigData||, CODE, READONLY, ALIGN=1

SDMMC_ConfigData PROC
        PUSH     {r4-r6,lr}
        LDR      r2,[r1,#0]
        STR      r2,[r0,#0x24]
        LDR      r2,[r1,#4]
        STR      r2,[r0,#0x28]
        LDR      r4,[r0,#0x2c]
        LDRD     r2,r5,[r1,#8]
        LDRD     r3,r6,[r1,#0x10]
        BIC      r1,r4,#0xf7
        ORRS     r2,r2,r5
        ORRS     r3,r3,r6
        ORRS     r2,r2,r3
        ORRS     r1,r1,r2
        STR      r1,[r0,#0x2c]
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SDMMC_GetCmdResp1||, CODE, READONLY, ALIGN=2

SDMMC_GetCmdResp1 PROC
        PUSH     {r4,lr}
        LDR      r4,|L27.276|
        MOV      r3,#0x1f40
        LDR      r4,[r4,#0]  ; SystemCoreClock
        UDIV     r3,r4,r3
        MULS     r3,r2,r3
|L27.16|
        SUBS     r3,r3,#1
        BCS      |L27.26|
        MOV      r0,#0x80000000
        POP      {r4,pc}
|L27.26|
        LDR      r2,[r0,#0x34]
        TST      r2,#0x45
        BEQ      |L27.16|
        LDR      r2,[r0,#0x34]
        LSLS     r2,r2,#29
        BPL      |L27.48|
        MOVS     r1,#4
        STR      r1,[r0,#0x38]
        MOV      r0,r1
        POP      {r4,pc}
|L27.48|
        LDR      r2,[r0,#0x34]
        LSLS     r2,r2,#31
        BEQ      |L27.60|
        MOVS     r1,#1
        STR      r1,[r0,#0x38]
        B        |L27.68|
|L27.60|
        LDR      r2,[r0,#0x10]
        UXTB     r2,r2
        CMP      r2,r1
        BEQ      |L27.72|
|L27.68|
        MOVS     r0,#1
        POP      {r4,pc}
|L27.72|
        MOV      r1,#0x5ff
        STR      r1,[r0,#0x38]
        MOVS     r1,#0
        BL       SDMMC_GetResponse
        LDR      r1,|L27.280|
        TST      r0,r1
        BNE      |L27.94|
        MOVS     r0,#0
        POP      {r4,pc}
|L27.94|
        CMP      r0,#0
        BGE      |L27.104|
        MOV      r0,#0x2000000
        POP      {r4,pc}
|L27.104|
        LSLS     r1,r0,#1
        BPL      |L27.112|
        MOVS     r0,#0x40
        POP      {r4,pc}
|L27.112|
        LSLS     r1,r0,#2
        BPL      |L27.120|
        MOVS     r0,#0x80
        POP      {r4,pc}
|L27.120|
        LSLS     r1,r0,#3
        BPL      |L27.130|
        MOV      r0,#0x100
        POP      {r4,pc}
|L27.130|
        LSLS     r1,r0,#4
        BPL      |L27.140|
        MOV      r0,#0x200
        POP      {r4,pc}
|L27.140|
        LSLS     r1,r0,#5
        BPL      |L27.150|
        MOV      r0,#0x400
        POP      {r4,pc}
|L27.150|
        LSLS     r1,r0,#7
        BPL      |L27.160|
        MOV      r0,#0x800
        POP      {r4,pc}
|L27.160|
        LSLS     r1,r0,#8
        BPL      |L27.170|
        MOV      r0,#0x1000
        POP      {r4,pc}
|L27.170|
        LSLS     r1,r0,#9
        BPL      |L27.180|
        MOV      r0,#0x2000
        POP      {r4,pc}
|L27.180|
        LSLS     r1,r0,#10
        BPL      |L27.190|
        MOV      r0,#0x4000
        POP      {r4,pc}
|L27.190|
        LSLS     r1,r0,#11
        BPL      |L27.200|
        MOV      r0,#0x8000
        POP      {r4,pc}
|L27.200|
        LSLS     r1,r0,#13
        BPL      |L27.210|
        MOV      r0,#0x20000
        POP      {r4,pc}
|L27.210|
        LSLS     r1,r0,#14
        BPL      |L27.220|
        MOV      r0,#0x40000
        POP      {r4,pc}
|L27.220|
        LSLS     r1,r0,#15
        BPL      |L27.230|
        MOV      r0,#0x80000
        POP      {r4,pc}
|L27.230|
        LSLS     r1,r0,#16
        BPL      |L27.240|
        MOV      r0,#0x100000
        POP      {r4,pc}
|L27.240|
        LSLS     r1,r0,#17
        BPL      |L27.250|
        MOV      r0,#0x200000
        POP      {r4,pc}
|L27.250|
        LSLS     r1,r0,#18
        BPL      |L27.260|
        MOV      r0,#0x400000
        POP      {r4,pc}
|L27.260|
        LSLS     r0,r0,#28
        BPL      |L27.270|
        MOV      r0,#0x800000
        POP      {r4,pc}
|L27.270|
        MOV      r0,#0x10000
        POP      {r4,pc}
        ENDP

|L27.276|
        DCD      SystemCoreClock
|L27.280|
        DCD      0xfdffe008

        AREA ||i.SDMMC_GetCmdResp2||, CODE, READONLY, ALIGN=2

SDMMC_GetCmdResp2 PROC
        LDR      r3,|L28.76|
        MOV      r1,#0x1f40
        MOV      r2,#0x1388
        LDR      r3,[r3,#0]  ; SystemCoreClock
        UDIV     r1,r3,r1
        MULS     r1,r2,r1
|L28.18|
        SUBS     r1,r1,#1
        BCS      |L28.28|
        MOV      r0,#0x80000000
        BX       lr
|L28.28|
        LDR      r2,[r0,#0x34]
        TST      r2,#0x45
        BEQ      |L28.18|
        LDR      r1,[r0,#0x34]
        LSLS     r1,r1,#29
        BPL      |L28.50|
        MOVS     r1,#4
        STR      r1,[r0,#0x38]
        MOV      r0,r1
        BX       lr
|L28.50|
        LDR      r1,[r0,#0x34]
        LSLS     r1,r1,#31
        BEQ      |L28.64|
        MOVS     r1,#1
        STR      r1,[r0,#0x38]
        MOV      r0,r1
        BX       lr
|L28.64|
        MOV      r1,#0x5ff
        STR      r1,[r0,#0x38]
        MOVS     r0,#0
        BX       lr
        ENDP

        DCW      0x0000
|L28.76|
        DCD      SystemCoreClock

        AREA ||i.SDMMC_GetCmdResp3||, CODE, READONLY, ALIGN=2

SDMMC_GetCmdResp3 PROC
        LDR      r3,|L29.60|
        MOV      r1,#0x1f40
        MOV      r2,#0x1388
        LDR      r3,[r3,#0]  ; SystemCoreClock
        UDIV     r1,r3,r1
        MULS     r1,r2,r1
|L29.18|
        SUBS     r1,r1,#1
        BCS      |L29.28|
        MOV      r0,#0x80000000
        BX       lr
|L29.28|
        LDR      r2,[r0,#0x34]
        TST      r2,#0x45
        BEQ      |L29.18|
        LDR      r1,[r0,#0x34]
        LSLS     r1,r1,#29
        BPL      |L29.50|
        MOVS     r1,#4
        STR      r1,[r0,#0x38]
        MOV      r0,r1
        BX       lr
|L29.50|
        MOV      r1,#0x5ff
        STR      r1,[r0,#0x38]
        MOVS     r0,#0
        BX       lr
        ENDP

|L29.60|
        DCD      SystemCoreClock

        AREA ||i.SDMMC_GetCmdResp6||, CODE, READONLY, ALIGN=2

SDMMC_GetCmdResp6 PROC
        PUSH     {r4,r5,lr}
        LDR      r5,|L30.128|
        MOV      r3,#0x1f40
        MOV      r4,#0x1388
        LDR      r5,[r5,#0]  ; SystemCoreClock
        UDIV     r3,r5,r3
        MULS     r3,r4,r3
|L30.20|
        SUBS     r3,r3,#1
        BCS      |L30.30|
        MOV      r0,#0x80000000
        POP      {r4,r5,pc}
|L30.30|
        LDR      r4,[r0,#0x34]
        TST      r4,#0x45
        BEQ      |L30.20|
        LDR      r3,[r0,#0x34]
        LSLS     r3,r3,#29
        BPL      |L30.52|
        MOVS     r1,#4
        STR      r1,[r0,#0x38]
        MOV      r0,r1
        POP      {r4,r5,pc}
|L30.52|
        LDR      r3,[r0,#0x34]
        LSLS     r3,r3,#31
        BEQ      |L30.64|
        MOVS     r1,#1
        STR      r1,[r0,#0x38]
        B        |L30.72|
|L30.64|
        LDR      r3,[r0,#0x10]
        UXTB     r3,r3
        CMP      r3,r1
        BEQ      |L30.76|
|L30.72|
        MOVS     r0,#1
        POP      {r4,r5,pc}
|L30.76|
        MOV      r1,#0x5ff
        STR      r1,[r0,#0x38]
        MOVS     r1,#0
        BL       SDMMC_GetResponse
        TST      r0,#0xe000
        BEQ      |L30.104|
        LSLS     r1,r0,#17
        BPL      |L30.112|
        MOV      r0,#0x2000
        POP      {r4,r5,pc}
|L30.104|
        LSRS     r0,r0,#16
        STRH     r0,[r2,#0]
        MOVS     r0,#0
        POP      {r4,r5,pc}
|L30.112|
        LSLS     r0,r0,#16
        BPL      |L30.122|
        MOV      r0,#0x1000
        POP      {r4,r5,pc}
|L30.122|
        MOV      r0,#0x10000
        POP      {r4,r5,pc}
        ENDP

|L30.128|
        DCD      SystemCoreClock

        AREA ||i.SDMMC_GetCommandResponse||, CODE, READONLY, ALIGN=1

SDMMC_GetCommandResponse PROC
        LDR      r0,[r0,#0x10]
        UXTB     r0,r0
        BX       lr
        ENDP


        AREA ||i.SDMMC_GetDataCounter||, CODE, READONLY, ALIGN=1

SDMMC_GetDataCounter PROC
        LDR      r0,[r0,#0x30]
        BX       lr
        ENDP


        AREA ||i.SDMMC_GetFIFOCount||, CODE, READONLY, ALIGN=1

SDMMC_GetFIFOCount PROC
        LDR      r0,[r0,#0x80]
        BX       lr
        ENDP


        AREA ||i.SDMMC_GetPowerState||, CODE, READONLY, ALIGN=1

SDMMC_GetPowerState PROC
        LDR      r0,[r0,#0]
        AND      r0,r0,#3
        BX       lr
        ENDP


        AREA ||i.SDMMC_GetResponse||, CODE, READONLY, ALIGN=1

SDMMC_GetResponse PROC
        ADD      r0,r0,r1
        PUSH     {r3,lr}
        ADDS     r0,r0,#0x14
        STR      r0,[sp,#0]
        LDR      r0,[r0,#0]
        POP      {r3,pc}
        ENDP


        AREA ||i.SDMMC_Init||, CODE, READONLY, ALIGN=1

SDMMC_Init PROC
        PUSH     {r4-r6,lr}
        ORRS     r1,r1,r2
        LDR      r2,[r0,#4]
        LDR      r6,[sp,#0x10]
        LDRD     r5,r4,[sp,#0x14]
        ORRS     r3,r3,r6
        MOV      r6,#0x7eff
        ORRS     r1,r1,r3
        ORRS     r1,r1,r5
        BICS     r2,r2,r6
        ORRS     r1,r1,r4
        ORRS     r2,r2,r1
        STR      r2,[r0,#4]
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SDMMC_PowerState_OFF||, CODE, READONLY, ALIGN=1

SDMMC_PowerState_OFF PROC
        MOVS     r1,#0
        STR      r1,[r0,#0]
        MOV      r0,r1
        BX       lr
        ENDP


        AREA ||i.SDMMC_PowerState_ON||, CODE, READONLY, ALIGN=1

SDMMC_PowerState_ON PROC
        MOVS     r1,#3
        STR      r1,[r0,#0]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.SDMMC_ReadFIFO||, CODE, READONLY, ALIGN=1

SDMMC_ReadFIFO PROC
        LDR      r0,[r0,#0x80]
        BX       lr
        ENDP


        AREA ||i.SDMMC_SendCommand||, CODE, READONLY, ALIGN=1

SDMMC_SendCommand PROC
        PUSH     {r4-r6,lr}
        LDR      r2,[r1,#0]
        STR      r2,[r0,#8]
        LDR      r4,[r0,#0xc]
        LDRD     r2,r5,[r1,#4]
        LDRD     r3,r6,[r1,#0xc]
        LSRS     r1,r4,#12
        ORRS     r2,r2,r5
        ORRS     r3,r3,r6
        LSLS     r1,r1,#12
        ORRS     r2,r2,r3
        ORRS     r1,r1,r2
        STR      r1,[r0,#0xc]
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.SDMMC_SetSDMMCReadWaitMode||, CODE, READONLY, ALIGN=1

SDMMC_SetSDMMCReadWaitMode PROC
        LDR      r2,[r0,#0x2c]
        BIC      r2,r2,#0x400
        ORRS     r2,r2,r1
        STR      r2,[r0,#0x2c]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||i.SDMMC_WriteFIFO||, CODE, READONLY, ALIGN=1

SDMMC_WriteFIFO PROC
        LDR      r1,[r1,#0]
        STR      r1,[r0,#0x80]
        MOVS     r0,#0
        BX       lr
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_ll_sdmmc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f7xx_ll_sdmmc_c_d11e703d____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___20_stm32f7xx_ll_sdmmc_c_d11e703d____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f7xx_ll_sdmmc_c_d11e703d____REVSH|
#line 402
|__asm___20_stm32f7xx_ll_sdmmc_c_d11e703d____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___20_stm32f7xx_ll_sdmmc_c_d11e703d____RRX|
#line 587
|__asm___20_stm32f7xx_ll_sdmmc_c_d11e703d____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT SDMMC_CmdAppCommand [CODE]
        EXPORT SDMMC_CmdAppOperCommand [CODE]
        EXPORT SDMMC_CmdBlockLength [CODE]
        EXPORT SDMMC_CmdBusWidth [CODE]
        EXPORT SDMMC_CmdErase [CODE]
        EXPORT SDMMC_CmdEraseEndAdd [CODE]
        EXPORT SDMMC_CmdEraseStartAdd [CODE]
        EXPORT SDMMC_CmdGoIdleState [CODE]
        EXPORT SDMMC_CmdOpCondition [CODE]
        EXPORT SDMMC_CmdOperCond [CODE]
        EXPORT SDMMC_CmdReadMultiBlock [CODE]
        EXPORT SDMMC_CmdReadSingleBlock [CODE]
        EXPORT SDMMC_CmdSDEraseEndAdd [CODE]
        EXPORT SDMMC_CmdSDEraseStartAdd [CODE]
        EXPORT SDMMC_CmdSelDesel [CODE]
        EXPORT SDMMC_CmdSendCID [CODE]
        EXPORT SDMMC_CmdSendCSD [CODE]
        EXPORT SDMMC_CmdSendSCR [CODE]
        EXPORT SDMMC_CmdSendStatus [CODE]
        EXPORT SDMMC_CmdSetRelAdd [CODE]
        EXPORT SDMMC_CmdStatusRegister [CODE]
        EXPORT SDMMC_CmdStopTransfer [CODE]
        EXPORT SDMMC_CmdSwitch [CODE]
        EXPORT SDMMC_CmdWriteMultiBlock [CODE]
        EXPORT SDMMC_CmdWriteSingleBlock [CODE]
        EXPORT SDMMC_ConfigData [CODE]
        EXPORT SDMMC_GetCommandResponse [CODE]
        EXPORT SDMMC_GetDataCounter [CODE]
        EXPORT SDMMC_GetFIFOCount [CODE]
        EXPORT SDMMC_GetPowerState [CODE]
        EXPORT SDMMC_GetResponse [CODE]
        EXPORT SDMMC_Init [CODE]
        EXPORT SDMMC_PowerState_OFF [CODE]
        EXPORT SDMMC_PowerState_ON [CODE]
        EXPORT SDMMC_ReadFIFO [CODE]
        EXPORT SDMMC_SendCommand [CODE]
        EXPORT SDMMC_SetSDMMCReadWaitMode [CODE]
        EXPORT SDMMC_WriteFIFO [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT SystemCoreClock [DATA]

        KEEP SDMMC_GetCmdResp1
        KEEP SDMMC_GetCmdResp2
        KEEP SDMMC_GetCmdResp3
        KEEP SDMMC_GetCmdResp6

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
